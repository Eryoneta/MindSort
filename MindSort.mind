<mind fontName="Courier New" fontSize="12" fontStyle="0">	<mod border="0" color="999999" icons="" title="MindSort" x="924" y="-123">		<text>+ MindSort:
- Um software para organizar idéias.</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="States" x="915" y="-126">		<text>+ States:
- Se for seguido a sequência do 2^n, todos os números tem uma soma única.
. 1, 2, 4, 8, 16, 32, 64, 128, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, etc...
- Mas, se reservar os 10 primeiros lugares, resulta em mais opções, desde que eles não sejam somados.
. 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 40, 80, 160, 320, 640, 1280, 5120, 10240, 40960, 81920. etc...
- Mais opções se abrem se cada unidade tiver 10 opções, existindo grupos que não podem ser somados entre si próprios:
. O int permite até [0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9].
- Se quiser poder somar dentro dos grupos, deverá utilizar a sequência do 2^n:
. [1,2,4],[1,2,4],[1,2,4],[1,2,4],[1,2,4],[1,2,4],[1,2,4],[1,2,4],[1,2,4],[1,2,4].</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="NORMAL" x="986" y="297">		<text>+ NORMAL:
- Nada ocorre.
	setCursor(NORMAL);</text>	</mod>	<mod border="0" color="00C81B" icons="" title="TO_CREATE" x="1166" y="508">		<text>+ TO_CREATE:
- O mod hover brilha em verde.
	setCursor(CREATE+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_move" x="1165" y="511">		<text>+ mouse_move:
	unSelectAll();
	mod=getMod(mouse);
	if(mod){
		selectToBeCreator(mod);
	}else{
		cox=getCox(mouse);
		if(cox){
			seg=cox.getSeg(mouse);
			selectToBeCreator(seg);
		}
	}
	draw();</text>	</mod>	<mod border="0" color="00C81B" icons="" title="WAITING2 +&#10;TO_CREATE" x="1083" y="604">		<text>+ WAITING2+TO_CREATE:
- Decide se cria o mod-son conectado ao mod-pai seguindo o mouse com drag ou move.
- Também pode criar um nod em um cox.
- Ele possui mod ou seg.
	if([mod]){
		setCursor(MOVE+SELECT);
	}else{
		setCursor(CREATE+SELECT);
	}</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1099" y="607">		<text>+ LEFT:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1085" y="611">		<text>+ LEFT:</text>	</mod>	<mod border="0" color="00C81B" icons="" title="DRAG +&#10;TO_CREATE" x="1146" y="605">		<text>+ DRAG+TO_CREATE:
- O mod recém-criado segue o mouse com drag.
- Ele possui mod ou nod.
	setCursor(MOVE+SELECT);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="mod" x="1145" y="504">		<text>+ mod:
	select(mod);
	setState(WAITING2+TO_CREATE);	//Não envia mod</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1161" y="606">		<text>+ LEFT:
	if([mod]){
		addAndSelect([mod]);
	}else if([nod]){
		addAndSelect([nod]);
	}
	setState(NORMAL);</text>	</mod>	<mod border="0" color="00C81B" icons="" title="MOVE +&#10;TO_CREATE" x="1059" y="652">		<text>+ MOVE+TO_CREATE:
- O mod recém-criado segue o mouse com move.
- Ele possui mod.
	setCursor(MOVE+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1074" y="654">		<text>+ LEFT:
	addAndSelect(mod);
	setState(NORMAL);</text>	</mod>	<mod border="0" color="00C81B" icons="" title="DRAG_ALL +&#10;MOVE +&#10;TO_CREATE" x="1058" y="674">		<text>+ DRAG_ALL+MOVE+TO_CREATE:
- A tela é movida.
- Ele possui mod.
	setCursor(DRAG+MOVE+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1044" y="653">		<text>+ MIDDLE:
	setState(DRAG_ALL+MOVE+TO_CREATE,[mod]);	//Envia [mod]</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1060" y="686">		<text>+ MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1074" y="679">		<text>+ MIDDLE:
	setState(MOVE+TO_CREATE,[mod]);	//Envia [mod]</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1149" y="508">		<text>+ MIDDLE:
	setState(DRAG_ALL+TO_CREATE);</text>	</mod>	<mod border="0" color="00C81B" icons="" title="DRAG_ALL +&#10;TO_CREATE" x="1165" y="523">		<text>+ DRAG_ALL+TO_CREATE:
- A tela é movida.
	setCursor(DRAG+CREATE+SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1167" y="530">		<text>+ MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1181" y="523">		<text>+ MIDDLE:
	setState(TO_CREATE);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1068" y="603">		<text>+ MIDDLE:
	setState(DRAG_ALL+WAITING2+TO_CREATE,[mod],[seg]);	//Envia [mod] e [seg]</text>	</mod>	<mod border="0" color="00C81B" icons="" title="DRAG_ALL +&#10;WAITING2 +&#10;TO_CREATE" x="1083" y="625">		<text>+ DRAG_ALL+WAITING2+TO_CREATE:
- A tela é movida.
- Ele possui mod ou seg.
	if([mod]){
		setCursor(DRAG+MOVE+SELECT);
	}else{
		setCursor(DRAG+CREATE+SELECT);
	}</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT +&#10;MIDDLE" x="1085" y="634">		<text>+ LEFT + MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1099" y="632">		<text>+ MIDDLE:
	setState(WAITING2+TO_CREATE,[mod],[seg]);	//Envia [mod] e [seg]</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1161" y="609">		<text>+ MIDDLE:
	setState(DRAG_ALL+DRAG+TO_CREATE,[mod],[nod]);	//Envia [mod] e [nod]</text>	</mod>	<mod border="0" color="00C81B" icons="" title="DRAG_ALL +&#10;DRAG +&#10;TO_CREATE" x="1146" y="619">		<text>+ DRAG_ALL+DRAG+TO_CREATE:
- A tela é movida.
- Ele possui mod.
	setCursor(DRAG+MOVE+SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT +&#10;MIDDLE" x="1148" y="628">		<text>+ LEFT + MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1162" y="624">		<text>+ MIDDLE:
	setState(DRAG+TO_CREATE,[mod],[nod]);	//Envia [mod] e [nod]</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1150" y="505">		<text>+ LEFT:
	mod=getMod(mouse);</text>	</mod>	<mod border="0" color="00C81B" icons="" title="WAITING1 +&#10;TO_CREATE" x="1133" y="554">		<text>+ WAITING1+TO_CREATE:
- Decide se cria um mod ou seleciona uma área verde.
- Ele possui mod.
	if([mod]){
		setCursor(MOVE+SELECT);
	}else{
		setCursor(CREATE+SELECT);
	}</text>	</mod>	<mod border="0" color="00C81B" icons="" title="SELECT_AREA +&#10;TO_CREATE" x="1198" y="546">		<text>+ SELECT_AREA+TO_CREATE:
- Uma área verde ou azul seleciona todos os mods dentro.
- Ele possui mod.
	if([mod]){
		setCursor(AREA_PAI+SELECT);
	}else{
		setCursor(AREA_CREATE+SELECT);
	}</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1201" y="567">		<text>+ LEFT:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="971" y="300">		<text>+ RIGHT:
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="mod" x="1212" y="449">		<text>+ mod:
	if(mod!=SELECT)unSelectAll();
	unSelect(mod);
	select(mod);
	popup.show(mouse,mod);</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="Detalhes" x="916" y="-123">		<text>+ Detalhes:
- Ao verificar quais são os modifiers(Ctrl e Shift), se verifica do caso "cheio" ao "vazio", do ctrl+shift+click ao click.
. Isso evita que ocorra a detecção de ctrl+click antes do  ctrl+shift+click, por exemplo.
- Ao mudar de State, é bom evitar o fazer com mouse_down, uma vez que isso imediatamente ativa qualquer mouse_down do novo State, se o tiver.
. O mesmo vale para key_down.</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="1206" y="463">		<text>+ RIGHT:
	setState(NORMAL);</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="RIGHT +&#10;WAITING1 +&#10;NORMAL" x="1190" y="449">		<text>+ RIGHT+WAITING1+NORMAL:
- Decide se move a tela ou se abre a caixa de opções.
	setCursor(SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="1192" y="458">		<text>+ RIGHT:
	unSelectAll();
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();
	setState(DRAG_ALL+RIGHT+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="1206" y="450">		<text>+ RIGHT:
	mod=getMod(mouse);</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="DRAG_ALL +&#10;RIGHT +&#10;NORMAL" x="1190" y="462">		<text>+ DRAG_ALL+RIGHT+NORMAL:
- A tela é movida.
	setCursor(DRAG+SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="968" y="351">		<text>+ MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="1192" y="471">		<text>+ mouse_drag_right:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_move" x="1058" y="662">		<text>+ mouse_move:
- O [mod] deve existir!
	[mod].setLocal(mouse);	//Muda o X e Y do [mod] de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1147" y="612">		<text>+ mouse_drag_left:
- O [mod] deve existir!
	//Muda o X e Y do [mod] ou [nod] de acordo com o mouse
	if([mod]){
		[mod].setLocal(mouse);
	}else if([nod]){
		[nod].setLocal(mouse);
	}
	draw();</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="Inputs" x="932" y="-123">		<text>+ Inputs:
- Tela cheia:
	F11
- Salvar:
	KEY_CTRL_DOWN + KEY_S_CLICK
	Menu &gt; Arquivo &gt; Salvar
- Abrir:
	KEY_CTRL_DOWN + KEY_O_CLICK
	Menu &gt; Arquivo &gt; Abrir...
- Novo:
	KEY_CTRL_DOWN + KEY_N_CLICK
	Menu &gt; Arquivo &gt; Novo
- Fechar:
	KEY_CTRL_DOWN + KEY_W_CLICK
	Menu &gt; Arquivo &gt; Sair

- Modo Novo Módulo:
	KEY_CTRL_DOWN + KEY_G_CLICK
	Menu &gt; Editar &gt; Módulo &gt; Novo
. Solo:
	MOUSE_LEFT_UP
. Filho de outro:
	modForm(MOUSE_LEFT_UP)
. Filho de vários:
	...KEY_CTRL_DOWN + modForm(MOUSE_LEFT_UP)...
. Filho de vários em uma área:
	MOUSE_LEFT_DOWN &gt; MOUSE_MOVE
. Filho de vários em várias áreas:
	...MOUSE_LEFT_DOWN &gt; KEY_CTRL_DOWN + MOUSE_MOVE...
- Filho de todos os módulos selecionados:
	KEY_CTRL_DOWN + KEY_SHIFT_DOWN + KEY_G_CLICK

- Modo Nova Conexão:
	KEY_CTRL_DOWN + KEY_R_CLICK
	Menu &gt; Editar &gt; Módulo &gt; Relacionar
. Decide filho:
	modForm(MOUSE_LEFT_UP)
. Decide vários filhos:
	...KEY_CTRL_DOWN + modForm(MOUSE_LEFT_UP)...
. Filho de vários em uma área:
	MOUSE_LEFT_DOWN &gt; MOUSE_MOVE
. Filho de vários em várias áreas:
	...MOUSE_LEFT_DOWN &gt; KEY_CTRL_DOWN + MOUSE_MOVE...





				CTRL+R						MODO "CRIAR NOVA CONEXÃO"
					MODO-REL|LEFT-CLICK			CRIAR NOVA CONEXÃO(FILHO)
					MODO-REL|LEFT-CLICK			CRIAR NOVA CONEXÃO(PAI)
					MODO-REL|LEFT-PRESS-DRAG	CRIAR NOVA CONEXÃO A PARTIR DO MÓDULO PRESSIONADO(O FILHO)
				CTRL+SHIFT+R				CRIAR NOVA CONEXÃO(FILHO) COM TODOS OS MÓDULOS SELECIONADOS
				CTRL+D						MODO "DELETAR MÓDULO/CONEXÃO"
					MODO-DEL|LEFT-CLICK			DELETAR MÓDULO/CONEXÃO
				DEL							DELETAR TODOS OS MÓDULOS SELECIONADOS
			GERENCIAR:
				CTRL+Z						DESFAZER
				CTRL+Y						REFAZER
				CTRL+X						RECORTAR MÓDULOS SELECIONADOS
				CTRL+C						COPIAR MÓDULOS SELECIONADOS
				CTRL+V						COLAR MÓDULOS
				SCROLL						ZOOM/DEZOOM
				CTRL+F						FOCAR NO MÓDULO-MESTRE
				LEFT-PRESS-DRAG				ARRASTAR TELA/MÓDULOS SELECIONADOS
				LEFT-CLICK					MOSTRAR TEXTO EDITÁVEL DO MÓDULO
				LEFT-DOUBLE_CLICK			MOSTRAR TÍTULO EDITÁVEL DO MÓDULO
				RIGHT-CLICK					MOSTRA TABELA DE CORES / TABELA DE ÍCONES PARA O MÓDULO SELECIONADO
			SELECIONAR:
				CTRL+A						SELECIONAR TODOS OS MÓDULOS
				ESC							DESELECIONAR TODOS OS MÓDULOS
				LEFT-CLICK					SELECIONAR/DESELECIONAR APENAS MÓDULO CLICADO
				CTRL+LEFT-CLICK				SELECIONAR/DESELECIONAR MÓDULO CLICADO
				SHIFT-PRESS					SELECIONAR/DESELECIONAR FILHOS DOS MÓDULOS SELECIONADOS
				RIGHT-PRESS-DRAG			SELECIONAR APENAS MÓDULOS NA ÁREA
				CTRL+RIGHT-PRESS-DRAG		SELECIONAR MÓDULOS NA ÁREA
		TEXTO:
			PADRÃO</text>	</mod>	<mod border="0" color="FF0000" icons="" title="TO_DELETE" x="883" y="297">		<text>+ TO_DELETE:
- O objHover brilha em vermelho.
	setCursor(DELETE+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1149" y="556">		<text>+ LEFT:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="1149" y="511">		<text>+ RIGHT:
	unSelectAll();
	draw();
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="1044" y="656">		<text>+ RIGHT:
	addAndSelect(mod);
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="972" y="294">		<text>+ LEFT:
	mod=getMod(mouse);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;mouse_move" x="1057" y="659">		<text>+ key_ctrl_down + mouse_move:
- O [mod] deve existir!
	[mod].setLocal(mouse);	//Muda o X e Y do [mod] de acordo com o mouse
	unSelectAll();
	modHover=getMod(mouse,[mod]);	//Seleciona para ser pai o mod hover
	if(modHover!=null){
		selectToBePai(modHover);
	}
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1183" y="545">		<text>+ mouse_middle_down:
	setState(DRAG_ALL+SELECT_AREA+TO_CREATE,[mod]);	//Envia [mod]</text>	</mod>	<mod border="0" color="00C81B" icons="" title="DRAG_ALL +&#10;SELECT_AREA +&#10;TO_CREATE" x="1198" y="580">		<text>+ DRAG_ALL+SELECT_AREA+TO_CREATE:
- A tela é movida.
- Ele possui mod.
	if([mod]){
		setCursor(DRAG+AREA_PAI+SELECT);
	}else{
		setCursor(DRAG+AREA_CREATE+SELECT);
	}</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT +&#10;MIDDLE" x="1201" y="596">		<text>+ LEFT + MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1216" y="586">		<text>+ MIDDLE:
	setState(SELECT_AREA+TO_CREATE,[mod]);	//Envia [mod]</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1198" y="560">		<text>+ key_ctrl_down + LEFT:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1161" y="602">		<text>+ key_ctrl_down + LEFT:</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="EDIT_TITLE" x="1170" y="409">		<text>+ EDIT_TITLE:
- Edição do titulo do módulo selecionado.
	setCursor(EDIT_TITLE+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="966" y="304">		<text>+ LEFT:
	mod=getMod(mouse);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1216" y="550">		<text>+ LEFT:
- Teoricamente bloqueado pelo key_ctrl_up e key_ctrl_up+mouse_left_up. Fica por precaução.
	selecao.setEmpty();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1186" y="409">		<text>+ LEFT:
	setTitulo(null);
	draw();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="1155" y="412">		<text>+ RIGHT:
	setTitulo(null);
	unSelectAll();
	draw();
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1155" y="409">		<text>+ MIDDLE:
	setState(DRAG_ALL+EDIT_TITLE);</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="DRAG_ALL +&#10;EDIT_TITLE" x="1170" y="424">		<text>+ DRAG_ALL+EDIT_TITLE:
- A tela é movida.
	setCursor(DRAG+EDIT_TITLE+SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1186" y="426">		<text>+ MIDDLE:
	setState(EDIT_TITLE);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1172" y="431">		<text>+ MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	titulo.updateLocal();
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1038" y="649">		<text>+ key_ctrl_down + LEFT:
	mod=getMod(mouse,[mod]);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_move" x="882" y="300">		<text>+ mouse_move:
	unSelectAll();
	mod=getMod(mouse);
	if(mod){
		selectToBeDeleted(mod);
	}else{
		nod=getNod(mouse);
		if(nod){
			selectToBeDeleted(nod);
		}else{
			cox=getCox(mouse);
			if(cox){
				selectToBeDeleted(cox);
			}
		}
	}
	draw();</text>	</mod>	<mod border="0" color="FF0000" icons="" title="WAITING1 +&#10;TO_DELETE" x="847" y="342">		<text>+ WAITING1+TO_DELETE:
- Decide se deleta um obj ou deleta uma área vermelha.
	setCursor(DELETE+SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="849" y="353">		<text>+ LEFT:
- Cria uma área de seleção vermelha.
. Todos os mods e nods dentro são selecionados para deletar, os fora são deselecionados.
	setArea(TO_DELETE,false,mouse);
	setState(SELECT_AREA+TO_DELETE);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="846" y="349">		<text>+ key_ctrl_down + LEFT:
- Cria uma área de seleção vermelha.
. Todos os objs dentro são selecionados para deletar.
	setArea(TO_DELETE,true,mouse);
	setState(SELECT_AREA+TO_DELETE);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="869" y="294">		<text>+ LEFT:
	setState(WAITING1+TO_DELETE);</text>	</mod>	<mod border="0" color="FF0000" icons="" title="SELECT_AREA +&#10;TO_DELETE" x="788" y="340">		<text>+ SELECT_AREA+TO_DELETE:
- Uma área vermelha seleciona todos os mods dentro.
	setCursor(AREA_DELETE+SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="791" y="354">		<text>+ LEFT:
- Extende uma área de seleção vermelha.
. Todos os mods e nods dentro são selecionados para deletar, os fora são deselecionados.
	setArea(TO_DELETE,false,mouse);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="773" y="339">		<text>+ MIDDLE:
	setState(DRAG_ALL+SELECT_AREA+TO_DELETE);</text>	</mod>	<mod border="0" color="FF0000" icons="" title="DRAG_ALL +&#10;SELECT_AREA +&#10;TO_DELETE" x="788" y="359">		<text>+ DRAG_ALL+SELECT_AREA+TO_DELETE:
- A tela é movida.
	setCursor(DRAG+AREA_DELETE+SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="806" y="364">		<text>+ MIDDLE:
	setState(SELECT_AREA+TO_DELETE);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="788" y="351">		<text>+ key_ctrl_down + LEFT:
- Extende uma área de seleção vermelha.
. Todos os objs dentro são selecionados para deletar.
	setArea(TO_DELETE,true,mouse);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="868" y="297">		<text>+ MIDDLE:
	setState(DRAG_ALL+TO_DELETE);</text>	</mod>	<mod border="0" color="FF0000" icons="" title="DRAG_ALL +&#10;TO_DELETE" x="883" y="312">		<text>+ DRAG_ALL+TO_DELETE:
- A tela é movida.
	setCursor(DELETE+SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="885" y="319">		<text>+ MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="899" y="312">		<text>+ MIDDLE:
	setState(TO_DELETE);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="863" y="341">		<text>+ key_ctrl_down + LEFT:
	obj=getObj(mouse);
	if(obj){
		if(objsSelec(obj)){
			delUndoable(objsSelec);
		}
	}
	draw();
	setState(TO_DELETE);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="863" y="345">		<text>+ LEFT:
	obj=getObj(mouse);
	if(obj){
		if(objsSelec(obj)){
			delUndoable(objsSelec);
		}
	}
	draw();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1216" y="544">		<text>+ key_ctrl_down + LEFT:
	selecao.setEmpty();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1162" y="621">		<text>+ LEFT:
	if([mod]){
		addAndSelect([mod]);
	}else if([nod]){
		addAndSelect([nod]);
	}
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="CTRL" x="1050" y="656">		<text>+ CTRL:
- Deve disparar apenas uma vez.
	modHover=getMod(mouse,[mod]);	//Seleciona para ser pai o mod hover
	if(modHover!=null){
		selectToBePai(modHover);
		draw();
	}
	setCursor(PAI+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="CTRL" x="1069" y="656">		<text>+ CTRL:
	unSelectAllMods();
	draw();
	setCursor(MOVE+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1118" y="553">		<text>+ MIDDLE:
	setState(DRAG_ALL+WAITING1+TO_CREATE,[mod]);	//Envia [mod]</text>	</mod>	<mod border="0" color="00C81B" icons="" title="DRAG_ALL +&#10;WAITING1 +&#10;TO_CREATE" x="1132" y="579">		<text>+ DRAG_ALL+WAITING1+TO_CREATE:
- A tela é movida.
- Ele possui mod.
	if([mod]){
		setCursor(DRAG+MOVE+SELECT);
	}else{
		setCursor(DRAG+CREATE+SELECT);
	}</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT +&#10;MIDDLE" x="1134" y="588">		<text>+ LEFT + MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1148" y="586">		<text>+ MIDDLE:
	setState(WAITING1+TO_CREATE,[mod]);	//Envia [mod]</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="DRAG_ALL +&#10;NORMAL" x="966" y="344">		<text>+ DRAG_ALL+NORMAL:
- A tela é movida.
	setCursor(DRAG+SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1162" y="617">		<text>+ key_ctrl_down + LEFT:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="832" y="341">		<text>+ MIDDLE:
	setState(DRAG_ALL+WAITING1+TO_DELETE);</text>	</mod>	<mod border="0" color="FF0000" icons="" title="DRAG_ALL +&#10;WAITING1 +&#10;TO_DELETE" x="847" y="358">		<text>+ DRAG_ALL+WAITING1+TO_CREATE:
- A tela é movida.
	setCursor(DRAG+DELETE+SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_left_down +&#10;MIDDLE" x="845" y="367">		<text>+ mouse_left_down + MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="863" y="363">		<text>+ MIDDLE:
	setState(WAITING1+TO_DELETE);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="806" y="343">		<text>+ LEFT:
	delUndoable(objsSelec);
	selecao.setEmpty();
	draw();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="806" y="339">		<text>+ key_ctrl_down + LEFT:
	delUndoable(objsSelec);
	selecao.setEmpty();
	draw();
	setState(TO_DELETE);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="!mod" x="1144" y="507">		<text>+ !mod:
	cox=getCox(mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="modsSelec&gt;0" x="1227" y="554">		<text>+ modsSelec&gt;0:
	newMod=createModRelacionado(mouse,modsSelec);
	setState(MOVE+TO_CREATE,newMod);	//Envia newMod</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="modsSelec==0" x="1227" y="551">		<text>+ modsSelec==0:
	draw();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="modsSelec&gt;0" x="1234" y="548">		<text>+ modsSelec&gt;0:
	newMod=createModRelacionado(mouse,modsSelec);
	setState(MOVE+TO_CREATE,newMod);	//Envia newMod</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="modsSelec==0" x="1234" y="545">		<text>+ modsSelec==0:
	draw();
	setState(TO_CREATE);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="mod" x="1034" y="648">		<text>+ mod:
	select(mod);
	setState(WAITING2+TO_CREATE,[mod]);	//Envia [mod]</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1074" y="676">		<text>+ LEFT:
	addAndSelect(mod);
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="CTRL" x="1050" y="680">		<text>+ CTRL:
- Deve disparar apenas uma vez.
	modHover=getMod(mouse,[mod]);	//Seleciona para ser pai o mod hover
	if(modHover!=null){
		selectToBePai(modHover);
		draw();
	}
	setCursor(DRAG+PAI+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="CTRL" x="1069" y="680">		<text>+ CTRL:
	unSelectAllMods();
	select([mod]);
	draw();
	setCursor(DRAG+MOVE+NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="end" x="1226" y="449">		<text>+ end:
	draw();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="mod" x="962" y="304">		<text>+ mod:
	unSelectAll();
	select(mod);
	draw();
	setTitulo(mod);	//TITULO ACIMA DO DRAW
	setState(EDIT_TITLE);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="mod" x="967" y="293">		<text>+ mod:</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="mod(SELECTED)" x="950" y="286">		<text>+ mod(SELECTED):
	setState(LEFT+WAITING2+NORMAL,mod);	//Envia mod</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="!mod" x="966" y="296">		<text>+ !mod:
	nod=getNod(mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="!mod" x="1212" y="452">		<text>+ !mod:
	nod=getNod(mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="cox" x="1222" y="453">		<text>+ cox:
	if(cox!=SELECT)unSelectAll();
	unSelect(cox);
	select(cox);
	seg=cox.getSeg(mouse);
	popup.show(mouse,seg);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="!cox" x="1222" y="456">		<text>+ !cox:
	unSelectAll();
	popup.show(mouse,null);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="nod" x="1217" y="451">		<text>+ nod:
	if(nod!=SELECT)unSelectAll();
	unSelect(nod);
	select(nod);
	popup.show(mouse,nod);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="!nod" x="1217" y="454">		<text>+ nodForm(!mouse):
	cox=getCox(mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="nod" x="962" y="295">		<text>+ nod:</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="!nod" x="961" y="298">		<text>+ !nod:
	cox=getCox(mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="cox" x="957" y="297">		<text>+ cox:</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="!cox" x="956" y="300">		<text>+ !cox:
	setState(LEFT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="LEFT +&#10;WAITING1 +&#10;NORMAL" x="1070" y="296">		<text>+ LEFT+WAITING1+NORMAL:
- Decide se seleciona um obj, ou se cria uma área branca.
- Ele possui mod, nod, e cox.
	setCursor(SELECT);</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="LEFT +&#10;WAITING2 +&#10;NORMAL" x="1107" y="342">		<text>+ LEFT+WAITING2+NORMAL:
- Decide se deseleciona um obj, ou se move os modsSelec e nodsSelec.
- Ele possui mod, nod, ou cox.
	setCursor(SELECT);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="mod(!SELECTED)" x="961" y="286">		<text>+ mod(SELECTED):
	setState(LEFT+WAITING1+NORMAL,mod);	//Envia mod</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="nod(SELECTED)" x="950" y="288">		<text>+ nod(SELECTED):
	setState(LEFT+WAITING2+NORMAL,nod);	//Envia nod</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="nod(!SELECTED)" x="961" y="288">		<text>+ nod(SELECTED):
	setState(LEFT+WAITING1+NORMAL,nod);	//Envia nod</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="cox(SELECTED)" x="950" y="290">		<text>+ cox(SELECTED):
	setState(LEFT+WAITING2+NORMAL,cox);	//Envia cox</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="cox(!SELECTED)" x="961" y="290">		<text>+ cox(SELECTED):
	setState(LEFT+WAITING1+NORMAL,cox);	//Envia cox</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1055" y="296">		<text>+ MIDDLE:
	setState(DRAG_ALL+LEFT+WAITING1+NORMAL,[mod],[cox],[nod]);
	//Envia [mod], [cox] e [nod].</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="DRAG_ALL +&#10;LEFT +&#10;WAITING1 +&#10;NORMAL" x="1070" y="319">		<text>+ DRAG_ALL+LEFT+WAITING1+NORMAL:
- A tela é movida.
- Ele possui mod, nod, e cox.
	setCursor(DRAG+SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1086" y="324">		<text>+ MIDDLE:
	setState(LEFT+WAITING1+NORMAL,[mod],[cox],[nod]);
	//Envia [mod], [cox] e [nod].</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT +&#10;MIDDLE" x="1072" y="329">		<text>+ LEFT + MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1072" y="313">		<text>+ LEFT:
- Cria uma área de seleção branca.
. Todos os objs dentro são selecionados, os fora são deselecionados.
	setArea(TO_SELECT,false,mouse);
	setState(SELECT_AREA+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1069" y="309">		<text>+ key_ctrl_down + LEFT:
- Cria uma área de seleção branca.
. Todos os objs dentro são selecionados.
	setArea(TO_SELECT,true,mouse);
	setState(SELECT_AREA+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1144" y="299">		<text>+ LEFT:
	selecao.setEmpty();
	draw();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="SELECT_AREA +&#10;NORMAL" x="1126" y="299">		<text>+ SELECT_AREA+NORMAL:
- Uma área branca seleciona todos os objs dentro.
	setCursor(AREA_SELECT+SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1129" y="313">		<text>+ LEFT:
- Extende uma área de seleção branca.
. Todos os objs dentro são selecionados, os fora são deselecionados.
	setArea(TO_SELECT,false,mouse);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1126" y="310">		<text>+ key_ctrl_down + LEFT:
- Extende uma área de seleção branca.
. Todos os objs dentro são selecionados.
	setArea(TO_SELECT,true,mouse);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1111" y="301">		<text>+ MIDDLE:
	setState(DRAG_ALL+SELECT_AREA+NORMAL);</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="DRAG_ALL +&#10;SELECT_AREA +&#10;NORMAL" x="1126" y="318">		<text>+ DRAG_ALL+SELECT_AREA+NORMAL:
- A tela é movida.
	setCursor(DRAG+AREA_SELECT+SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT +&#10;MIDDLE" x="1129" y="330">		<text>+ LEFT + MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1144" y="321">		<text>+ MIDDLE:
	setState(SELECT_AREA+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1144" y="318">		<text>+ LEFT:
	selecao.setEmpty();
	draw();
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1092" y="342">		<text>+ MIDDLE:
	setState(DRAG_ALL+LEFT+WAITING2+NORMAL,[mod],[cox],[nod]);
	//Envia [mod], [cox] e [nod].</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="DRAG_ALL +&#10;LEFT +&#10;WAITING2 +&#10;NORMAL" x="1107" y="359">		<text>+ DRAG_ALL+LEFT+WAITING2+NORMAL:
- A tela é movida.
- Ele possui mod, nod, ou cox.
	setCursor(DRAG+SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1123" y="365">		<text>+ MIDDLE:
	setState(LEFT+WAITING2+NORMAL,[mod],[cox],[nod]);
	//Envia [mod], [cox] e [nod].</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT +&#10;MIDDLE" x="1109" y="369">		<text>+ LEFT + MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1109" y="355">		<text>+ LEFT:
	if([cox]){
		for(cox:coxsSelec)for(nod:[cox].nods)select(nod);
	}
	//Muda o X e Y dos modsSelec e nodsSelec de acordo com o mouse.
	oldLocal=mouse;
	for(mod:modsSelec)mod.setLocal(mouse);
	for(nod:nodsSelec)nod.setLocal(mouse);
	draw();
	setState(DRAG+NORMAL);</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="DRAG +&#10;NORMAL" x="1160" y="345">		<text>+ DRAG+NORMAL:
- Todos os modsSelec e nodsSelec são movidos.
	setCursor(MOVE+SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1160" y="352">		<text>+ mouse_drag_left:
	//Muda o X e Y dos modsSelec e nodsSelec de acordo com o mouse.
	for(mod:modsSelec)mod.setLocal(mouse);
	for(nod:nodsSelec)nod.setLocal(mouse);
	draw();</text>	</mod>	<mod border="8" color="33CCFF" icons="" title="LEFT" x="1173" y="345">		<text>+ LEFT:
	savedObjs=new List&lt;Objeto&gt;(modsSelec+nodsSelec);
	addUndo(savedObjs,mouse-oldLocal,MOVE);
	setState(NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1145" y="344">		<text>+ MIDDLE:
	setState(DRAG_ALL+DRAG+NORMAL);</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="DRAG_ALL +&#10;DRAG +&#10;NORMAL" x="1158" y="356">		<text>+ DRAG_ALL+DRAG+NORMAL:
- A tela é movida.
	setCursor(DRAG+MOVE+SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT +&#10;MIDDLE" x="1160" y="365">		<text>+ LEFT + MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1174" y="359">		<text>+ MIDDLE:
	setState(DRAG+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1086" y="299">		<text>+ LEFT:
- Seleciona apenas o obj clicado.
	unSelectAll();
	if([mod]){
		if([mod].form(mouse))select([mod]);
	}else if([nod]){
		if([nod].form(mouse))select([nod]);
	}else if([cox]){
		if([cox].form(mouse))select([cox]);
	}
	draw();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1123" y="345">		<text>+ LEFT:
- Com apenas um objSelec, deseleciona tudo.
. Mas com vários, deixa selecionado o obj clicado.
	if(objsSelec==1){	//Para o efeito toggle selec/deselec
		unSelectAll();
	}else{
		unSelectAll();
		if([mod]){
			if([mod].form(mouse))select([mod]);
		}else if([nod]){
			if([nod].form(mouse))select([nod]);
		}else if([cox]){
			if([cox].form(mouse))select([cox]);
		}
	}
	draw();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1086" y="295">		<text>+ key_ctrl_down + LEFT:
- Seleciona o obj clicado.
	if([mod]){
		if([mod].form(mouse))select([mod]);
	}else if([nod]){
		if([nod].form(mouse))select([nod]);
	}else if([cox]){
		if([cox].form(mouse))select([cox]);
	}
	draw();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1123" y="341">		<text>+ key_ctrl_down + LEFT:
- Deseleciona o obj clicado.
	if([mod]){
		if([mod].form(mouse))unSelect([mod]);
	}else if([nod]){
		if([nod].form(mouse))unSelect([nod]);
	}else if([cox]){
		if([cox].form(mouse))unSelect([cox]);
	}
	draw();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1086" y="321">		<text>+ LEFT:
- Seleciona apenas o obj clicado.
	unSelectAll();
	if([mod]){
		if([mod].form(mouse))select([mod]);
	}else if([nod]){
		if([nod].form(mouse))select([nod]);
	}else if([cox]){
		if([cox].form(mouse))select([cox]);
	}
	draw();
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1086" y="317">		<text>+ key_ctrl_down + LEFT:
- Seleciona o obj clicado.
	if([mod]){
		if([mod].form(mouse))select([mod]);
	}else if([nod]){
		if([nod].form(mouse))select([nod]);
	}else if([cox]){
		if([cox].form(mouse))select([cox]);
	}
	draw();
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1123" y="362">		<text>+ LEFT:
- Com apenas um objSelec, deseleciona tudo.
. Mas com vários, deixa selecionado o obj clicado.
	if(objsSelec==1){	//Para o efeito toggle selec/deselec
		unSelectAll();
	}else{
		unSelectAll();
		if([mod]){
			if([mod].form(mouse))select([mod]);
		}else if([nod]){
			if([nod].form(mouse))select([nod]);
		}else if([cox]){
			if([cox].form(mouse))select([cox]);
		}
	}
	draw();
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1123" y="358">		<text>+ key_ctrl_down + LEFT:
- Deseleciona o obj clicado.
	if([mod]){
		if([mod].form(mouse))unSelect([mod]);
	}else if([nod]){
		if([nod].form(mouse))unSelect([nod]);
	}else if([cox]){
		if([cox].form(mouse))unSelect([cox]);
	}
	draw();
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="8" color="33CCFF" icons="" title="LEFT" x="1174" y="356">		<text>+ LEFT:
	savedObjs=new List&lt;Objeto&gt;(modsSelec+nodsSelec);
	addUndo(savedObjs,mouse-oldLocal,MOVE);
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="863" y="356">		<text>+ key_ctrl_down + LEFT:
	obj=getObj(mouse);
	if(obj){
		if(objsSelec(obj)){
			delUndoable(objsSelec);
		}
	}
	draw();
	setState(DRAG_ALL+TO_DELETE);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="863" y="360">		<text>+ LEFT:
	obj=getObj(mouse);
	if(obj){
		if(objsSelec(obj)){
			delUndoable(objsSelec);
		}
	}
	draw();
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="806" y="361">		<text>+ LEFT:
	delUndoable(objsSelec);
	selecao.setEmpty();
	draw();
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="806" y="357">		<text>+ key_ctrl_down + LEFT:
	delUndoable(objsSelec);
	selecao.setEmpty();
	draw();
	setState(DRAG_ALL+TO_DELETE);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT +&#10;MIDDLE" x="791" y="372">		<text>+ LEFT + MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_D()" x="978" y="314">		<text>+ ctrl_D():
	setHover(TO_DELETE);
	setState(TO_DELETE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_D()" x="874" y="307">		<text>+ ctrl_D():
	setHover(TO_UNSELECT);
	setState(NORMAL);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_G()" x="874" y="301">		<text>+ ctrl_G():
	setHover(TO_CREATE);
	setState(TO_CREATE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_R()" x="874" y="304">		<text>+ ctrl_R():
	setHover(TO_CREATE_SON);
	setState(TO_CONNECT);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_G()" x="978" y="308">		<text>+ ctrl_G():
	setHover(TO_CREATE);
	setState(TO_CREATE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_R()" x="978" y="311">		<text>+ ctrl_R():
	setHover(TO_CREATE_SON);
	setState(TO_CONNECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="1155" y="424">		<text>+ RIGHT:
	setTitulo(null);
	unSelectAll();
	draw();
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1186" y="423">		<text>+ LEFT:
	setTitulo(null);
	draw();
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_D()" x="1157" y="518">		<text>+ ctrl_D():
	setHover(TO_DELETE);
	setState(TO_DELETE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_G()" x="1157" y="512">		<text>+ ctrl_G():
	setHover(TO_UNSELECT);
	setState(NORMAL);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_R()" x="1157" y="515">		<text>+ ctrl_R():
	setHover(TO_CREATE_SON);
	setState(TO_CONNECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1135" y="568">		<text>+ LEFT:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1132" y="561">		<text>+ key_ctrl_down + LEFT:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1149" y="551">		<text>+ key_ctrl_down + LEFT:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1074" y="672">		<text>+ key_ctrl_down + LEFT:
- Não faz nada e impede mouse_left_up de agir com o key_ctrl_down.</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="!mod" x="1033" y="651">		<text>+ modForm(mouse):
	setState(WAITING1+TO_CREATE,[mod]);	//Envia [mod]</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1104" y="606">		<text>+ [mod]:
- Há um mod criado.
	addAndSelect([mod]);
	setState(NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1104" y="609">		<text>+ [!mod]:
- Não há mod criado.</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1099" y="602">		<text>+ key_ctrl_down + LEFT:</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1111" y="601">		<text>+ [mod]:
- Há um mod criado.
- O [mod] se torna son dos modsSelec.
	relateMods(modsSelec,[mod]);
	draw();
	setState(MOVE+TO_CREATE,[mod]);	//Envia [mod]</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1111" y="604">		<text>+ [!mod]:
- Não há mod criado.</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1154" y="555">		<text>+ [mod]:
- Há um mod criado.
	unSelectAll();
	draw();</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1154" y="557">		<text>+ [!mod]:
- Não há mod criado.
	createMod(mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="end" x="1160" y="556">		<text>+ end:
	setState(NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1161" y="550">		<text>+ [mod]:
- Há um mod criado.
	setState(MOVE+TO_CREATE,[mod]);	//Envia [mod]</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1161" y="553">		<text>+ [!mod]:
- Não há mod criado.
	createMod(mouse);
	setState(TO_CREATE);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="CTRL" x="1210" y="554">		<text>+ CTRL:</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1081" y="614">		<text>+ [mod]:
- Há um mod criado.
	[mod].setLocal(mouse);			//Muda o X e Y do [mod] de acordo com o mouse
	relateMods(modsSelec,[mod]);		//O [mod] se torna son dos modsSelec
	setState(DRAG+TO_CREATE,[mod]);	//Envia newMod</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1087" y="614">		<text>+ [!mod]:
- Não há mod criado.</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1131" y="571">		<text>+ [mod]:
- Há um mod criado.
- Cria uma área de seleção branca.
	addAndSelect([mod]);
	setArea(TO_SELECT,false,mouse);
	setState(SELECT_AREA+NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1138" y="571">		<text>+ [!mod]:
- Não há mod criado.
- Cria uma área de seleção verde.
. Todos os mods dentro são selecionados para criar, os fora são deselecionados.
	setArea(TO_CREATE,false,mouse);
	setState(SELECT_AREA+TO_CREATE);	//Não envia mod</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1131" y="565">		<text>+ [mod]:
- Há um mod criado.
- Cria uma área de seleção azul.
	[mod].setLocal(mouse);		//Muda o X e Y do [mod] de acordo com o mouse
	setArea(TO_CREATE_PAI,true,mouse);
	setState(SELECT_AREA+TO_CREATE,[mod]);	//Envia [mod]</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1138" y="565">		<text>+ [!mod]:
- Não há mod criado.
- Cria uma área de seleção verde.
. Todos os mods dentro são selecionados para criar.
	setArea(TO_CREATE,true,mouse);
	setState(SELECT_AREA+TO_CREATE);	//Não envia mod</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1197" y="570">		<text>+ [mod]:
- Há um mod criado.
- Teoricamente bloqueado pelo key_ctrl_up e key_ctrl_up+mouse_left_up. Fica por precaução.
- Extende uma área de seleção branca.
. Todos os objs dentro são selecionados, os fora são deselecionados.
	addAndSelect([mod]);
	setArea(TO_SELECT,true,mouse);
	setState(SELECT_AREA+NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1204" y="570">		<text>+ [!mod]:
- Não há mod criado.
- Extende uma área de seleção verde.
. Todos os mods dentro são selecionados para criar, os fora são deselecionados.
	setArea(TO_CREATE,false,mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1197" y="564">		<text>+ [mod]:
- Há um mod criado.
- Extende uma área de seleção azul.
. Todos os mods dentro são selecionados para serem pais, os fora são deselecionados.
	[mod].setLocal(X,Y);	//Muda o X e Y do [mod] de acordo com o mouse
	setArea(TO_CREATE_PAI,true,mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1204" y="564">		<text>+ [!mod]:
- Não há mod criado.
- Extende uma área de seleção verde.
. Todos os mods dentro são selecionados para criar.
	setArea(TO_CREATE,true,mouse);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1099" y="627">		<text>+ LEFT:</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1104" y="626">		<text>+ [mod]:
- Há um mod criado.
	addAndSelect([mod]);
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1099" y="622">		<text>+ key_ctrl_down + LEFT:</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1111" y="621">		<text>+ [mod]:
- Há um mod criado.
- O [mod] se torna son dos modsSelec.
	relateMods(modsSelec,[mod]);
	draw();
	setState(DRAG_ALL+MOVE+TO_CREATE,[mod]);	//Envia [mod]</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1111" y="624">		<text>+ [!mod]:
- Não há mod criado.</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1148" y="582">		<text>+ LEFT:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1148" y="577">		<text>+ key_ctrl_down + LEFT:</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1153" y="581">		<text>+ [mod]:
- Há um mod criado.
	unSelectAll();
	draw();</text>	</mod>	<mod border="8" color="A3E7FF" icons="" title="[!mod]" x="1153" y="583">		<text>+ [!mod]:
- Não há mod criado.
	createMod(mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="end" x="1159" y="582">		<text>+ end:
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1160" y="576">		<text>+ [mod]:
- Há um mod criado.
	setState(DRAG_ALL+MOVE+TO_CREATE,[mod]);	//Envia [mod]</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1160" y="579">		<text>+ [!mod]:
- Não há mod criado.
	createMod(mouse);
	setState(DRAG_ALL+TO_CREATE);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1221" y="549">		<text>+ [mod]:
- Há um mod criado.
- Usa a área verde para selecionar.
. Todos os objs dentro são selecionados, os fora são deselecionados.
	addAndSelect([mod]);
	setArea(TO_SELECT,false);
	selecao.setEmpty();
	draw();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1221" y="552">		<text>+ [!mod]:
- Não há mod criado.</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1228" y="543">		<text>+ [mod]:
- Há um mod criado.
- O [mod] se torna son dos modsSelec.
	relateMod([mod]);
	unSelectAll();
	draw();
	setState(MOVE+TO_CREATE,[mod]);	//Envia [mod]</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1228" y="546">		<text>+ [!mod]:
- Não há mod criado.</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1216" y="581">		<text>+ LEFT:
- Teoricamente bloqueado pelo key_ctrl_up e key_ctrl_up+mouse_left_up. Fica por precaução.
	selecao.setEmpty();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1216" y="575">		<text>+ key_ctrl_down + LEFT:
	selecao.setEmpty();</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="modsSelec&gt;0" x="1227" y="585">		<text>+ modsSelec&gt;0:
	newMod=createModRelacionado(mouse,modsSelec);
	setState(DRAG_ALL+MOVE+TO_CREATE,newMod);	//Envia newMod</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="modsSelec==0" x="1227" y="582">		<text>+ modsSelec==0:
	draw();
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="modsSelec&gt;0" x="1234" y="579">		<text>+ modsSelec&gt;0:
	newMod=createModRelacionado(mouse,modsSelec);
	setState(DRAG_ALL+MOVE+TO_CREATE,newMod);	//Envia newMod</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="modsSelec==0" x="1234" y="576">		<text>+ modsSelec==0:
	draw();
	setState(DRAG_ALL+TO_CREATE);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1221" y="580">		<text>+ [mod]:
- Há um mod criado.
- Extende uma área de seleção branca.
. Todos os objs dentro são selecionados, os fora são deselecionados.
	addAndSelect([mod]);
	setArea(TO_SELECT,false);
	selecao.setEmpty();
	draw();
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1221" y="583">		<text>+ [!mod]:
- Não há mod criado.</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1228" y="574">		<text>+ [mod]:
- Há um mod criado.
- O [mod] se torna son dos modsSelec.
	relateMod([mod]);
	unSelectAll();
	draw();
	setState(DRAG_ALL+MOVE+TO_CREATE,[mod]);	//Envia [mod]</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1228" y="577">		<text>+ [!mod]:
- Não há mod criado.</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="MIDDLE +&#10;WAITING1 +&#10;NORMAL" x="985" y="325">		<text>+ MIDDLE+WAITING1+NORMAL:
- Decide se move a tela com o drag ou move.
	setCursor(SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="987" y="334">		<text>+ MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1001" y="326">		<text>+ MIDDLE:
	setState(AUTO_DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="AUTO_DRAG_ALL +&#10;NORMAL" x="1010" y="344">		<text>+ AUTO_DRAG_ALL+NORMAL:
- A tela é movida automaticamente.
	setCursor(AUTODRAG);
	startAutoDrag();	//Ativa a função que move a tela automaticamente.</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="971" y="297">		<text>+ MIDDLE:
	setState(MIDDLE+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="982" y="344">		<text>+ MIDDLE:
	setState(NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="995" y="344">		<text>+ MIDDLE:
	draw();
	setState(MIDDLE+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="995" y="347">		<text>+ RIGHT:
	draw();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="996" y="341">		<text>+ LEFT:
	draw();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="!cox" x="1139" y="509">		<text>+ !cox:
	setState(WAITING1+TO_CREATE);	//Não envia nada</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="cox" x="1140" y="506">		<text>+ cox:
	seg=getSeg(mouse);
	setState(WAITING2+TO_CREATE,seg);	//Envia seg</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[seg]" x="1110" y="608">		<text>+ [seg]:
- Há um seg selecionado.
	createNod([seg].cox,mouse,true);
	setState(NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!seg]" x="1110" y="611">		<text>+ [!seg]:
- Não há um seg selecionado.
	newMod=createModRelacionado(mouse,modsSelec);
	setState(MOVE+TO_CREATE,newMod);	//Envia newMod</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="869" y="312">		<text>+ LEFT:
	setState(DRAG_ALL+WAITING1+TO_DELETE);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1104" y="629">		<text>+ [!mod]:
- Não há mod criado.</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[seg]" x="1110" y="628">		<text>+ [seg]:
- Há um seg selecionado.
	createNod([seg].cox,mouse,true);
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!seg]" x="1110" y="631">		<text>+ [!seg]:
- Não há um seg selecionado.
	newMod=createModRelacionado(mouse,modsSelec);
	setState(DRAG_ALL+MOVE+TO_CREATE,newMod);	//Envia newMod</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1074" y="650">		<text>+ key_ctrl_down + LEFT:
- Não faz nada e impede mouse_left_up de agir com o key_ctrl_down.
- Teoricamente bloqueado pelo key_ctrl_down+LEFT. Fica por precaução.</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="CTRL" x="1138" y="304">		<text>+ CTRL:
	setArea(TO_SELECT,false);	//Retira os que estão fora da área</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[seg]" x="1117" y="603">		<text>+ [seg]:
- Há um seg selecionado.
	createNod([seg].cox,mouse,true);
	setState(TO_CREATE);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!seg]" x="1117" y="606">		<text>+ [!seg]:
- Não há um seg selecionado.
	newMod=createModRelacionado(mouse,modsSelec);
	setState(MOVE+TO_CREATE,newMod);	//Envia newMod</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[seg]" x="1117" y="623">		<text>+ [seg]:
- Há um seg selecionado.
	createNod([seg].cox,mouse,true);
	setState(DRAG_ALL+TO_CREATE);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!seg]" x="1117" y="626">		<text>+ [!seg]:
- Não há um seg selecionado.
	newMod=createModRelacionado(mouse,modsSelec);
	setState(DRAG_ALL+MOVE+TO_CREATE,newMod);	//Envia newMod</text>	</mod>	<mod border="0" color="FFFF00" icons="" title="TO_CONNECT" x="808" y="501">		<text>+ TO_CONNECT:
- Um mod brilha em amarelo.
	setCursor(SON+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="793" y="501">		<text>+ MIDDLE:
	setState(DRAG_ALL+TO_CONNECT);</text>	</mod>	<mod border="0" color="FFFF00" icons="" title="DRAG_ALL +&#10;TO_CONNECT" x="808" y="517">		<text>+ DRAG_ALL+TO_CONNECT:
- A tela é movida.
	setCursor(DRAG+SON+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="810" y="524">		<text>+ MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="824" y="517">		<text>+ MIDDLE:
	setState(TO_CONNECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_move" x="808" y="504">		<text>+ mouse_move:
	unSelectAllMods();
	mod=getMod(mouse);
	selectToBeSon(mod);
	draw();</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="mod" x="789" y="497">		<text>+ mod:
	setState(WAITING2+TO_CONNECT,mod);	//Envia mod</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="794" y="498">		<text>+ LEFT:
	mod=getMod(mouse);
	if(mod==Mestre)mod=null;	//Mestre deve ser ignorado</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="!mod" x="788" y="500">		<text>+ !mod:
	setState(WAITING1+TO_CONNECT);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_D()" x="800" y="511">		<text>+ ctrl_D():
	setHover(TO_DELETE);
	setState(TO_DELETE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_G()" x="800" y="505">		<text>+ ctrl_G():
	setHover(TO_CREATE);
	setState(TO_CREATE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_R()" x="800" y="508">		<text>+ ctrl_R():
	setHover(TO_UNSELECT);
	setState(NORMAL);</text>	</mod>	<mod border="0" color="FFFF00" icons="" title="WAITING2 +&#10;TO_CONNECT" x="850" y="614">		<text>+ WAITING2+TO_CONNECT:
- Decide se cria o cox seguindo o mouse com drag ou move.
- Ele possui mod.
	if(Ghost==0){
		setCursor(SON+SELECT);
	}else{
		setCursor(PAI+SELECT);
	}</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="835" y="613">		<text>+ MIDDLE:
	setState(DRAG_ALL+WAITING2+TO_CONNECT,[mod]);	//Envia [mod]</text>	</mod>	<mod border="0" color="FFFF00" icons="" title="DRAG_ALL +&#10;WAITING2 +&#10;TO_CONNECT" x="850" y="630">		<text>+ DRAG_ALL+WAITING2+TO_CONNECT:
- A tela é movida.
- Ele possui mod.
	if(Ghost==0){
		setCursor(DRAG+SON+SELECT);
	}else{
		setCursor(DRAG+PAI+SELECT);
	}</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="866" y="636">		<text>+ MIDDLE:
	setState(WAITING2+TO_CONNECT,[mod]);	//Envia [mod]</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="852" y="621">		<text>+ LEFT:
- Começa a criar cox, conectado ao son.
	Ghost.setLocal(mouse);					//Muda o X e Y do Ghost de acordo com o mouse
	relateToGhost([mod]);
	setState(DRAG+TO_CONNECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="866" y="612">		<text>+ key_ctrl_down + LEFT:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="866" y="617">		<text>+ LEFT:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT +&#10;MIDDLE" x="852" y="639">		<text>+ LEFT + MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="FFFF00" icons="" title="WAITING1 +&#10;TO_CONNECT" x="822" y="553">		<text>+ WAITING1+TO_CONNECT:
- Decide se cria um cox ou seleciona uma área amarela.
	if(Ghost==0){
		setCursor(SON+SELECT);
	}else{
		setCursor(PAI+SELECT);
	}</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="824" y="570">		<text>+ LEFT:
	Ghost.setLocal(X,Y);			//Muda o X e Y do Ghost de acordo com o mouse</text>	</mod>	<mod border="0" color="FFFF00" icons="" title="SELECT_AREA +&#10;TO_CONNECT" x="733" y="555">		<text>+ SELECT_AREA+TO_CONNECT:
- Uma área amarela seleciona todos os mods dentro.
	if(Ghost==0){
		setCursor(AREA_SON+SELECT);
	}else{
		setCursor(AREA_PAI+SELECT);
	}</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="821" y="560">		<text>+ key_ctrl_down + LEFT:
	Ghost.setLocal(X,Y);			//Muda o X e Y do Ghost de acordo com o mouse</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="718" y="555">		<text>+ MIDDLE:
	setState(DRAG_ALL+SELECT_AREA+TO_CONNECT);</text>	</mod>	<mod border="0" color="FFFF00" icons="" title="DRAG_ALL +&#10;SELECT_AREA +&#10;TO_CONNECT" x="733" y="586">		<text>+ DRAG_ALL+SELECT_AREA+TO_CONNECT:
- A tela é movida.
	if(Ghost==0){
		setCursor(DRAG+AREA_SON+SELECT);
	}else{
		setCursor(DRAG+AREA_PAI+SELECT);
	}</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="751" y="597">		<text>+ MIDDLE:
	setState(SELECT_AREA+TO_CONNECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="838" y="555">		<text>+ LEFT:
	deleteGhostCoxs();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="751" y="552">		<text>+ key_ctrl_down + LEFT:
	selecao.setEmpty();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="838" y="551">		<text>+ key_ctrl_down + LEFT:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="807" y="552">		<text>+ MIDDLE:
	setState(DRAG_ALL+WAITING1+TO_CONNECT);</text>	</mod>	<mod border="0" color="FFFF00" icons="" title="DRAG_ALL +&#10;WAITING1 +&#10;TO_CONNECT" x="822" y="582">		<text>+ DRAG_ALL+WAITING1+TO_CONNECT:
- A tela é movida.
	if(Ghost==0){
		setCursor(DRAG+SON+SELECT);
	}else{
		setCursor(DRAG+PAI+SELECT);
	}</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="838" y="587">		<text>+ MIDDLE:
	setState(WAITING1+TO_CONNECT);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs&gt;0" x="850" y="553">		<text>+ Ghost.coxs&gt;0:
- Há cox criado.
- Cria nod nos coxs novos.
	createNodOnGhostCoxs(mouse);
	setState(MOVE+TO_CONNECT);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs==0" x="850" y="550">		<text>+ Ghost.coxs==0:
- Não há cox criado.
	setState(TO_CONNECT);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="modsSelec&gt;0" x="756" y="562">		<text>+ modsSelec&gt;0:</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="modsSelec==0" x="756" y="558">		<text>+ modsSelec==0:
	deleteGhostCoxs();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="751" y="560">		<text>+ LEFT:
	selecao.setEmpty();</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="modsSelec&gt;0" x="763" y="555">		<text>+ modsSelec&gt;0:</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="modsSelec==0" x="763" y="550">		<text>+ modsSelec==0:
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT +&#10;MIDDLE" x="824" y="591">		<text>+ LEFT + MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs&gt;0" x="871" y="619">		<text>+ Ghost.coxs&gt;0:
- Há cox criado.
- Cria coxs, conectando sons a pais.
	relateToMods([mod]);
	deleteGhostCoxs();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs==0" x="871" y="616">		<text>+ Ghost.coxs==0:
- Não há cox criado.
- Começa a criar cox, conectado ao son.
	Ghost.setLocal(mouse);					//Muda o X e Y do Ghost de acordo com o mouse
	relateToGhost([mod]);
	setState(MOVE+TO_CONNECT);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs&gt;0" x="878" y="613">		<text>+ Ghost.coxs&gt;0:
- Há cox criado.
- Cria coxs, conectando sons a pais.
	relateToMods([mod]);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs==0" x="878" y="611">		<text>+ Ghost.coxs==0:
- Não há cox criado.
- Começa a criar cox, conectado ao son.
	Ghost.setLocal(mouse);					//Muda o X e Y do Ghost de acordo com o mouse
	relateToGhost([mod]);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="MOVE +&#10;TO_CONNECT" x="910" y="652">		<text>+ MOVE+TO_CONNECT:
- Um mod brilha em azul.
	setCursor(PAI+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="895" y="652">		<text>+ MIDDLE:
	setState(DRAG_ALL+MOVE+TO_CONNECT);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="DRAG_ALL +&#10;MOVE +&#10;TO_CONNECT" x="910" y="661">		<text>+ DRAG_ALL+MOVE+TO_CONNECT:
- A tela é movida.
	setCursor(DRAG+PAI+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="912" y="670">		<text>+ MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="926" y="662">		<text>+ MIDDLE:
	setState(MOVE+TO_CONNECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="791" y="626">		<text>+ LEFT:
	Ghost.setLocal(mouse);	//Muda o X e Y do Ghost de acordo com o mouse
	unSelectAll();
	mod=getMod(mouse);
	if(mod){
		selectToBePai(mod);
	}
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="805" y="617">		<text>+ key_ctrl_down + LEFT:
	mod=getMod(mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="mod" x="817" y="616">		<text>+ mod:
- Cria coxs, conectando sons a pais.
	relateToMods(mod);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="end" x="817" y="619">		<text>+ end:
	setState(MOVE+TO_CONNECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="805" y="622">		<text>+ LEFT:
	mod=getMod(mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="mod" x="810" y="621">		<text>+ mod:
- Cria coxs, conectando sons a pais.
	relateToMods(mod);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="DRAG +&#10;TO_CONNECT" x="789" y="619">		<text>+ DRAG+TO_CONNECT:
- O cox segue o mouse com drag.
	setCursor(MOVE+SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="774" y="618">		<text>+ MIDDLE:
	setState(DRAG_ALL+DRAG+TO_CONNECT);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="DRAG_ALL +&#10;DRAG +&#10;TO_CONNECT" x="789" y="635">		<text>+ DRAG_ALL+DRAG+TO_CONNECT:
- A tela é movida.
	setCursor(DRAG+MOVE+SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="805" y="642">		<text>+ MIDDLE:
	setState(DRAG+TO_CONNECT);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="mod" x="891" y="648">		<text>+ mod:
	setState(WAITING2+TO_CONNECT,mod);	//Envia mod</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="896" y="649">		<text>+ LEFT:
	mod=getMod(mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="!mod" x="890" y="651">		<text>+ !mod:
	setState(WAITING1+TO_CONNECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_move" x="910" y="656">		<text>+ mouse_move:
	Ghost.setLocal(mouse);	//Muda o X e Y do Ghost de acordo com o mouse
	unSelectAllMods();
	mod=getMod(mouse);
	if(mod){
		selectToBePai(mod);
	}
	draw();</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs&gt;0" x="827" y="573">		<text>+ Ghost.coxs&gt;0:
- Há cox criado.
- Cria uma área de seleção azul.
. Todos os mods dentro são selecionados para serem pai, os fora são deselecionados.
  Os mods que são son do Ghost não são selecionados.
	setArea(TO_CREATE_PAI,false,mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs==0" x="815" y="573">		<text>+ Ghost.coxs==0:
- Não há cox criado.
- Cria uma área de seleção amarela.
. Todos os mods dentro são selecionados para serem son, os fora são deselecionados.
	setArea(TO_CREATE_SON,false,mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs&gt;0" x="827" y="564">		<text>+ Ghost.coxs&gt;0:
- Há cox criado.
- Cria uma área de seleção azul.
. Todos os mods dentro são selecionados para serem pai.
  Os mods que são son do Ghost não são selecionados.
	setArea(TO_CREATE_PAI,true,mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs==0" x="815" y="564">		<text>+ Ghost.coxs==0:
- Não há cox criado.
- Cria uma área de seleção amarela.
. Todos os mods dentro são selecionados para serem son.
	setArea(TO_CREATE_SON,true,mouse);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="736" y="574">		<text>+ LEFT:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="733" y="567">		<text>+ key_ctrl_down + LEFT:</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs&gt;0" x="739" y="577">		<text>+ Ghost.coxs&gt;0:
- Há cox criado.
- Extende uma área de seleção azul.
. Todos os mods dentro são selecionados para serem pai, os fora são deselecionados.
	Ghost.setLocal(mouse);			//Muda o X e Y do Ghost de acordo com o mouse
	setArea(TO_CREATE_PAI,false,mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs==0" x="727" y="577">		<text>+ Ghost.coxs==0:
- Não há cox criado.
- Extende uma área de seleção amarela.
. Todos os mods dentro são selecionados para serem son, os fora são deselecionados.
	setArea(TO_CREATE_SON,false,mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs&gt;0" x="739" y="571">		<text>+ Ghost.coxs&gt;0:
- Há cox criado.
- Extende uma área de seleção azul.
. Todos os mods dentro são selecionados para serem pai.
	Ghost.setLocal(mouse);			//Muda o X e Y do Ghost de acordo com o mouse
	setArea(TO_CREATE_PAI,true,mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs==0" x="727" y="571">		<text>+ Ghost.coxs==0:
- Não há cox criado.
- Extende uma área de seleção amarela.
. Todos os mods dentro são selecionados para serem son.
	setArea(TO_CREATE_SON,true,mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs&gt;0" x="765" y="564">		<text>+ Ghost.coxs&gt;0:
- Há cox criado.
- Cria coxs, conectando sons a pais.
	relateToMods(modsSelec);
	deleteGhostCoxs();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs==0" x="765" y="561">		<text>+ Ghost.coxs==0:
- Não há cox criado.
- Começa a criar coxs, conectados a sons.
	Ghost.setLocal(mouse);			//Muda o X e Y do Ghost de acordo com o mouse
	relateToGhost(modsSelec);
	setState(MOVE+TO_CONNECT);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs&gt;0" x="772" y="556">		<text>+ Ghost.coxs&gt;0:
- Há cox criado.
- Cria coxs, conectando sons a pais.
	relateToMods(modsSelec);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs==0" x="772" y="554">		<text>+ Ghost.coxs==0:
- Não há cox criado.
- Começa a criar coxs, conectados a sons.
	Ghost.setLocal(mouse);	//Muda o X e Y do Ghost de acordo com o mouse
	relateToGhost(modsSelec);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs&gt;0" x="773" y="551">		<text>+ Ghost.coxs&gt;0:
- Há cox criado.
	setState(MOVE+TO_CONNECT);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs==0" x="773" y="548">		<text>+ Ghost.coxs==0:
- Não há cox criado.
	setState(TO_CONNECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT +&#10;MIDDLE" x="736" y="598">		<text>+ LEFT + MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="end" x="783" y="555">		<text>+ end:
	setState(MOVE+TO_CONNECT);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="end" x="825" y="576">		<text>+ end:
	setState(SELECT_AREA+TO_CONNECT);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="end" x="825" y="567">		<text>+ end:
	setState(SELECT_AREA+TO_CONNECT);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="end" x="889" y="612">		<text>+ end:
	setState(MOVE+TO_CONNECT);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="end" x="810" y="624">		<text>+ end:
	deleteGhostCoxs();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT +&#10;MIDDLE" x="791" y="644">		<text>+ LEFT + MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="805" y="632">		<text>+ key_ctrl_down + LEFT:
	mod=getMod(mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="mod" x="817" y="631">		<text>+ mod:
- Cria coxs, conectando sons a pais.
	relateToMods(mod);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="end" x="817" y="634">		<text>+ end:
	setState(DRAG_ALL+MOVE+TO_CONNECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="805" y="637">		<text>+ LEFT:
	mod=getMod(mouse);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="mod" x="810" y="636">		<text>+ mod:
- Cria coxs, conectando sons a pais.
	relateToMods(mod);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="end" x="810" y="639">		<text>+ end:
	deleteGhostCoxs();
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="866" y="625">		<text>+ key_ctrl_down + LEFT:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="866" y="631">		<text>+ LEFT:</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs&gt;0" x="871" y="633">		<text>+ Ghost.coxs&gt;0:
- Há cox criado.
- Cria coxs, conectando sons a pais.
	relateToMods([mod]);
	deleteGhostCoxs();
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs==0" x="871" y="630">		<text>+ Ghost.coxs==0:
- Não há cox criado.
- Começa a criar cox, conectado ao son.
	Ghost.setLocal(mouse);					//Muda o X e Y do Ghost de acordo com o mouse
	relateToGhost([mod]);
	setState(DRAG_ALL+MOVE+TO_CONNECT);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs&gt;0" x="878" y="627">		<text>+ Ghost.coxs&gt;0:
- Há cox criado.
- Cria coxs, conectando sons a pais.
	relateToMods([mod]);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs==0" x="878" y="625">		<text>+ Ghost.coxs==0:
- Não há cox criado.
- Começa a criar cox, conectado ao son.
	Ghost.setLocal(mouse);					//Muda o X e Y do Ghost de acordo com o mouse
	relateToGhost([mod]);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="end" x="889" y="626">		<text>+ end:
	setState(DRAG_ALL+MOVE+TO_CONNECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="838" y="584">		<text>+ LEFT:
	deleteGhostCoxs();
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="838" y="580">		<text>+ key_ctrl_down + LEFT:</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs&gt;0" x="850" y="582">		<text>+ Ghost.coxs&gt;0:
- Há cox criado.
- Cria nod nos coxs novos.
	createNodOnGhostCoxs(mouse);
	setState(DRAG_ALL+MOVE+TO_CONNECT);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs==0" x="850" y="579">		<text>+ Ghost.coxs==0:
- Não há cox criado.
	setState(DRAG_ALL+TO_CONNECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="751" y="583">		<text>+ key_ctrl_down + LEFT:
	selecao.setEmpty();</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="modsSelec&gt;0" x="756" y="594">		<text>+ modsSelec&gt;0:</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="modsSelec==0" x="756" y="590">		<text>+ modsSelec==0:
	deleteGhostCoxs();
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="751" y="592">		<text>+ LEFT:
	selecao.setEmpty();</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="modsSelec&gt;0" x="763" y="587">		<text>+ modsSelec&gt;0:</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="modsSelec==0" x="763" y="581">		<text>+ modsSelec==0:
	draw();</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs&gt;0" x="765" y="596">		<text>+ Ghost.coxs&gt;0:
- Há cox criado.
- Cria coxs, conectando sons a pais.
	relateToMods(modsSelec);
	deleteGhostCoxs();
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs==0" x="765" y="593">		<text>+ Ghost.coxs==0:
- Não há cox criado.
- Começa a criar coxs, conectados a sons.
	Ghost.setLocal(mouse);			//Muda o X e Y do Ghost de acordo com o mouse
	relateToGhost(modsSelec);
	setState(DRAG_ALL+MOVE+TO_CONNECT);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs&gt;0" x="772" y="588">		<text>+ Ghost.coxs&gt;0:
- Há cox criado.
- Cria coxs, conectando sons a pais.
	relateToMods(modsSelec);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs==0" x="772" y="586">		<text>+ Ghost.coxs==0:
- Não há cox criado.
- Começa a criar coxs, conectados a sons.
	Ghost.setLocal(mouse);			//Muda o X e Y do Ghost de acordo com o mouse
	relateToGhost(modsSelec);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs&gt;0" x="773" y="583">		<text>+ Ghost.coxs&gt;0:
- Há cox criado.
	setState(DRAG_ALL+MOVE+TO_CONNECT);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs==0" x="773" y="580">		<text>+ Ghost.coxs==0:
- Não há cox criado.
	setState(DRAG_ALL+TO_CONNECT);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="end" x="783" y="587">		<text>+ end:
	setState(DRAG_ALL+MOVE+TO_CONNECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1172" y="419">		<text>+ LEFT:
- Cria uma área de seleção branca.
. Todos os objs dentro são selecionados, os fora são deselecionados.
  Os nods com os coxs selecionados não podem ser deselecionados.
	setTitulo(null);
	setArea(TO_SELECT,false,mouse);
	setState(SELECT_AREA+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1169" y="415">		<text>+ key_ctrl_down + LEFT:
- Cria uma área de seleção branca.
. Todos os objs dentro são selecionados.
	setTitulo(null);
	setArea(TO_SELECT,true,mouse);
	setState(SELECT_AREA+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="1131" y="605">		<text>+ RIGHT:
	if([mod]){
		addAndSelect([mod]);
	}else if([nod]){
		addAndSelect([nod]);
	}
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="1118" y="556">		<text>+ RIGHT:
	addAndSelect([mod]);
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="1183" y="548">		<text>+ RIGHT:
	selecao.setEmpty();
	addAndSelect([mod]);
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="1068" y="606">		<text>+ RIGHT:
	addAndSelect([mod]);
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="868" y="300">		<text>+ RIGHT:
	unSelectAll();
	draw();
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="832" y="344">		<text>+ RIGHT:
	unSelectAll();
	draw();
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="773" y="342">		<text>+ RIGHT:
	selecao.setEmpty();
	unSelectAll();
	draw();
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="1111" y="298">		<text>+ RIGHT:
	selecao.setEmpty();
	unSelectAll();
	draw();
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="1092" y="345">		<text>+ RIGHT:
	unSelectAll();
	draw();
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="1055" y="299">		<text>+ RIGHT:
	unSelectAll();
	draw();
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="8" color="33CCFF" icons="" title="RIGHT" x="1145" y="347">		<text>+ RIGHT:
	savedObjs=new List&lt;Objeto&gt;(modsSelec+nodsSelec);
	addUndo(savedObjs,mouse-oldLocal,MOVE);
	unSelectAll();
	draw();
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="793" y="504">		<text>+ RIGHT:
	unSelectAll();
	draw();
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="807" y="555">		<text>+ RIGHT:
	deleteGhostCoxs();
	unSelectAll();
	draw();
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="718" y="558">		<text>+ RIGHT:
	deleteGhostCoxs();
	selecao.setEmpty();
	unSelectAll();
	draw();
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="835" y="616">		<text>+ RIGHT:
	deleteGhostCoxs();
	unSelectAll();
	draw();
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="774" y="621">		<text>+ mouse_right_down:
	deleteGhostCoxs();
	unSelectAll();
	draw();
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="895" y="655">		<text>+ RIGHT:
	deleteGhostCoxs();
	unSelectAll();
	draw();
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1156" y="406">		<text>+ LEFT:
	setCursor(EDIT_TITLE+SELECT);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_D()" x="958" y="355">		<text>+ ctrl_D():
	setHover(TO_DELETE);
	setState(DRAG_ALL+TO_DELETE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_G()" x="958" y="349">		<text>+ ctrl_G():
	setHover(TO_CREATE);
	setState(DRAG_ALL+TO_CREATE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_R()" x="958" y="352">		<text>+ ctrl_R():
	setHover(TO_CREATE_SON);
	setState(DRAG_ALL+TO_CONNECT);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_D()" x="1157" y="534">		<text>+ ctrl_D():
	setHover(TO_DELETE);
	setState(DRAG_ALL+TO_DELETE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_G()" x="1157" y="528">		<text>+ ctrl_G():
	setHover(TO_UNSELECT);
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_R()" x="1157" y="531">		<text>+ ctrl_R():
	setHover(TO_CREATE_SON);
	setState(DRAG_ALL+TO_CONNECT);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_D()" x="800" y="528">		<text>+ ctrl_D():
	setHover(TO_DELETE);
	setState(DRAG_ALL+TO_DELETE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_G()" x="800" y="522">		<text>+ ctrl_G():
	setHover(TO_CREATE);
	setState(DRAG_ALL+TO_CREATE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_R()" x="800" y="525">		<text>+ ctrl_R():
	setHover(TO_UNSELECT);
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_D()" x="874" y="323">		<text>+ ctrl_D():
	setHover(TO_UNSELECT);
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_G()" x="874" y="317">		<text>+ ctrl_G():
	setHover(TO_CREATE);
	setState(DRAG_ALL+TO_CREATE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_R()" x="874" y="320">		<text>+ ctrl_R():
	setToConnect();
	setHover(TO_CREATE_SON);
	setState(DRAG_ALL+TO_CONNECT);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_D()" x="1190" y="559">		<text>+ ctrl_D():
	addAndSelect([mod]);
	setArea(TO_DELETE,false);
	setState(SELECT_AREA+TO_DELETE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_G()" x="1190" y="553">		<text>+ ctrl_G():
	addAndSelect([mod]);
	setArea(TO_SELECT,false);
	setState(SELECT_AREA+NORMAL);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_R()" x="1190" y="556">		<text>+ ctrl_R():
	addAndSelect([mod]);
	setArea(TO_CREATE_SON,false);
	setState(SELECT_AREA+TO_CONNECT);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_D()" x="1190" y="593">		<text>+ ctrl_D():
	addAndSelect([mod]);
	setArea(TO_DELETE,false);
	setState(DRAG_ALL+SELECT_AREA+TO_DELETE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_G()" x="1190" y="587">		<text>+ ctrl_G():
	addAndSelect([mod]);
	setArea(TO_SELECT,false);
	setState(DRAG_ALL+SELECT_AREA+NORMAL);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_R()" x="1190" y="590">		<text>+ ctrl_R():
	addAndSelect([mod]);
	setArea(TO_CREATE_SON,false);
	setState(DRAG_ALL+SELECT_AREA+TO_CONNECT);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_D()" x="724" y="567">		<text>+ ctrl_D():
	deleteGhostCoxs();
	setArea(TO_DELETE,false);
	setState(SELECT_AREA+TO_DELETE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_G()" x="724" y="561">		<text>+ ctrl_G():
	deleteGhostCoxs();
	setArea(TO_CREATE,false);
	setState(SELECT_AREA+TO_CREATE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_R()" x="724" y="564">		<text>+ ctrl_R():
	deleteGhostCoxs();
	setArea(TO_SELECT,false);
	setState(SELECT_AREA+NORMAL);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_D()" x="724" y="598">		<text>+ ctrl_D():
	deleteGhostCoxs();
	setArea(TO_DELETE,false);
	setState(DRAG_ALL+SELECT_AREA+TO_DELETE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_G()" x="724" y="592">		<text>+ ctrl_G():
	deleteGhostCoxs();
	setArea(TO_CREATE,false);
	setState(DRAG_ALL+SELECT_AREA+TO_CREATE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_R()" x="724" y="595">		<text>+ ctrl_R():
	deleteGhostCoxs();
	setArea(TO_SELECT,false);
	setState(DRAG_ALL+SELECT_AREA+NORMAL);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_D()" x="779" y="351">		<text>+ ctrl_D():
	setArea(TO_SELECT,false);
	setState(SELECT_AREA+NORMAL);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_G()" x="779" y="345">		<text>+ ctrl_G():
	setArea(TO_CREATE,false);
	setState(SELECT_AREA+TO_CREATE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_R()" x="779" y="348">		<text>+ ctrl_R():
	setArea(TO_CREATE_SON,false);
	setState(SELECT_AREA+TO_CONNECT);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_D()" x="779" y="372">		<text>+ ctrl_D():
	setArea(TO_SELECT,false);
	setState(DRAG_ALL+SELECT_AREA+NORMAL);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_G()" x="779" y="366">		<text>+ ctrl_G():
	setArea(TO_CREATE,false);
	setState(DRAG_ALL+SELECT_AREA+TO_CREATE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_R()" x="779" y="369">		<text>+ ctrl_R():
	setArea(TO_CREATE_SON,false);
	setState(DRAG_ALL+SELECT_AREA+TO_CONNECT);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_D()" x="1117" y="310">		<text>+ ctrl_D():
	setArea(TO_DELETE,false);
	setState(SELECT_AREA+TO_DELETE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_G()" x="1117" y="304">		<text>+ ctrl_G():
	setArea(TO_CREATE,false);
	setState(SELECT_AREA+TO_CREATE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_R()" x="1117" y="307">		<text>+ ctrl_R():
	setArea(TO_CREATE_SON,false);
	setState(SELECT_AREA+TO_CONNECT);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_D()" x="1117" y="330">		<text>+ ctrl_D():
	setArea(TO_DELETE,false);
	setState(DRAG_ALL+SELECT_AREA+NORMAL);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_G()" x="1117" y="324">		<text>+ ctrl_G():
	setArea(TO_CREATE,false);
	setState(DRAG_ALL+SELECT_AREA+TO_CREATE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_R()" x="1117" y="327">		<text>+ ctrl_R():
	setArea(TO_CREATE_SON,false);
	setState(DRAG_ALL+SELECT_AREA+TO_CONNECT);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_D()" x="1003" y="355">		<text>+ ctrl_D():
	setHover(TO_DELETE);
	setState(TO_DELETE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_G()" x="1003" y="349">		<text>+ ctrl_G():
	setHover(TO_CREATE);
	setState(TO_CREATE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="ctrl_R()" x="1003" y="352">		<text>+ ctrl_R():
	setHover(TO_CREATE_SON);
	setState(TO_CONNECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="CTRL" x="1138" y="324">		<text>+ CTRL:
	setArea(TO_SELECT,false);	//Retira os que estão fora da área</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="CTRL" x="801" y="366">		<text>+ CTRL:
	setArea(TO_DELETE,false);	//Retira os que estão fora da área</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="CTRL" x="800" y="345">		<text>+ CTRL:
	setArea(TO_DELETE,false);	//Retira os que estão fora da área</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="CTRL" x="745" y="592">		<text>+ CTRL:
	setArea(TO_CREATE_SON,false);	//Retira os que estão fora da área</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="CTRL" x="745" y="561">		<text>+ CTRL:
	setArea(TO_CREATE_SON,false);	//Retira os que estão fora da área</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1215" y="553">		<text>+ [mod]:
- Há um mod criado.
	addAndSelect([mod]);
	setArea(TO_SELECT,false);
	setState(SELECT_AREA+NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1215" y="556">		<text>+ [!mod]:
- Não há mod criado.
	setArea(TO_CREATE,false);	//Retira os que estão fora da área</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="CTRL" x="1210" y="590">		<text>+ CTRL:</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1215" y="589">		<text>+ [mod]:
- Há um mod criado.
	addAndSelect([mod]);
	setArea(TO_SELECT,false);
	setState(DRAG_ALL+SELECT_AREA+NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1215" y="592">		<text>+ [!mod]:
- Não há mod criado.
	setArea(TO_CREATE,false);	//Retira os que estão fora da área</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="MOVE +&#10;NORMAL" x="1144" y="380">		<text>+ MOVE+NORMAL:
- Todos os modsSelec e nodsSelec são movidos.
	setCursor(MOVE+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_move" x="1142" y="384">		<text>+ mouse_move:
	//Muda o X e Y dos modsSelec e nodsSelec de acordo com o mouse.
	for(mod:modsSelec)mod.setLocal(mouse);
	for(nod:nodsSelec)nod.setLocal(mouse);
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1130" y="377">		<text>+ LEFT:
	savedObjs=new List&lt;Objeto&gt;(objsSelec);
	addUndoable(savedObjs,false);
	setState(NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1129" y="380">		<text>+ MIDDLE:
	setState(DRAG_ALL+MOVE+NORMAL);</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="DRAG_ALL +&#10;MOVE +&#10;NORMAL" x="1142" y="389">		<text>+ DRAG_ALL+MOVE+NORMAL:
- A tela é movida.
	setCursor(DRAG+MOVE+SELECT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1144" y="398">		<text>+ MIDDLE:
	tree.setLocal(mouse);	//Muda o X e Y do tree de acordo com o mouse
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="MIDDLE" x="1158" y="390">		<text>+ MIDDLE:
	setState(MOVE+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1128" y="389">		<text>+ LEFT:
	savedObjs=new List&lt;Objeto&gt;(objsSelec);
	addUndoable(savedObjs,false);
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="1129" y="383">		<text>+ RIGHT:
	savedObjs=new List&lt;Objeto&gt;(objsSelec);
	addUndoable(savedObjs,false);
	unSelectAll();
	draw();
	setState(RIGHT+WAITING1+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_ctrl_down +&#10;LEFT" x="1106" y="351">		<text>+ key_ctrl_down + LEFT:
- Cria uma área de seleção branca.
. Todos os objs dentro são selecionados.
	setArea(TO_SELECT,true,mouse);
	setState(SELECT_AREA+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="874" y="297">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="874" y="312">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="892" y="312">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="883" y="316">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="838" y="342">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="856" y="342">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="847" y="346">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="856" y="360">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="847" y="364">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="779" y="340">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="789" y="348">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="799" y="340">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_up" x="794" y="345">		<text>+ key_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="789" y="369">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="799" y="360">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_up" x="795" y="366">		<text>+ key_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="1061" y="297">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1079" y="297">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1070" y="302">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1079" y="321">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1070" y="326">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1137" y="299">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="1117" y="299">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1127" y="307">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_up" x="1132" y="304">		<text>+ key_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1137" y="319">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1127" y="327">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_up" x="1132" y="324">		<text>+ key_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="1098" y="343">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1116" y="343">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1107" y="348">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1116" y="361">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1107" y="366">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1166" y="345">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1167" y="357">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="1151" y="345">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1158" y="349">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1158" y="362">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="1135" y="380">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="1133" y="390">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1151" y="390">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1142" y="395">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1179" y="409">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="1161" y="409">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1170" y="412">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1170" y="428">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1179" y="424">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="1161" y="424">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1199" y="450">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1190" y="455">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1190" y="468">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1199" y="463">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="1157" y="508">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1174" y="523">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1165" y="527">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="977" y="297">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_doubleClick" x="971" y="304">		<text>+ mouse_doubleClick:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="994" y="326">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="985" y="331">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="975" y="344">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="966" y="348">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="1001" y="344">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="1124" y="554">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1142" y="554">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1133" y="558">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1141" y="580">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1132" y="585">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="1189" y="546">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1199" y="557">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1209" y="546">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_up" x="1204" y="554">		<text>+ key_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1209" y="581">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1199" y="593">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_up" x="1204" y="590">		<text>+ key_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="1074" y="604">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1092" y="604">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1083" y="608">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1092" y="626">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1083" y="631">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1154" y="605">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1155" y="620">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1146" y="625">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1145" y="609">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="1137" y="605">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="1050" y="652">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1067" y="652">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="1067" y="675">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_down" x="1055" y="656">		<text>+ key_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_down" x="1055" y="680">		<text>+ key_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_up" x="1063" y="656">		<text>+ key_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_up" x="1063" y="680">		<text>+ key_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1058" y="683">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="799" y="501">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="808" y="521">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="817" y="517">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="813" y="553">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="831" y="553">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="822" y="557">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="822" y="588">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="831" y="583">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="724" y="556">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="744" y="587">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="744" y="555">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="734" y="564">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="734" y="595">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_up" x="739" y="592">		<text>+ key_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_up" x="739" y="561">		<text>+ key_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="859" y="614">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="859" y="630">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="798" y="636">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="798" y="619">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="910" y="667">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="850" y="618">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="789" y="641">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="789" y="623">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="850" y="636">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="780" y="619">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="841" y="614">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_down" x="901" y="652">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_up" x="919" y="662">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[seg]" x="1084" y="617">		<text>+ [seg]:
- Há um seg selecionado.
	newNod=createNod([seg].cox,mouse,false);
	unSelect(newNod);
	setState(DRAG+TO_CREATE,newNod);	//Envia newNod</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!seg]" x="1090" y="617">		<text>+ [!seg]:
- Não há seg criado.
	newMod=createModRelacionado(mouse,modsSelec);
	setState(DRAG+TO_CREATE,newMod);	//Envia newMod</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1174" y="616">		<text>+ [mod]:
- Há um mod criado.
	setState(DRAG_ALL+MOVE+TO_CREATE,[mod]);	//Envia [mod]</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1174" y="619">		<text>+ [!mod]:
- Não há mod criado.
	addAndSelect([nod]);
	setState(DRAG_ALL+NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[!mod]" x="1173" y="604">		<text>+ [!mod]:
- Não há mod criado.
	addAndSelect([nod]);
	setState(NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="[mod]" x="1173" y="601">		<text>+ [mod]:
- Há um mod criado.
	setState(MOVE+TO_CREATE,[mod]);	//Envia [mod]</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="icons" x="1028" y="-82">		<text>+ icons:
- Menu de "Arquivo":
	Novo.png
	Abrir.png
	Salvar.png
	Salvar Como.png
	Exportar.png
	Sair.png
- Menu de "Editar":
	Desfazer.png
	Refazer.png
	. Menu de "Módulo":
		Editar Título.png
		Relacionar.png
	Criar.png
	Deletar.png
	Recortar.png
	Copiar.png
	Copiar Como Imagem.png
	Colar.png
	Excluir.png
	Selecionar Tudo.png
	Deselecionar Tudo.png
- Menu de "Exibir":
	Tela Cheia.png
	. Menu de "Zoom":
		Aumentar.png
		Diminuir.png
	Centralizar Câmera.png
	Quebra Automática de Linha.png
	Mostrar Caracteres Escondidos.png
	Separar Janela de Texto.png
	Auto-Focar Janela de Texto.png
	Mostrar Grade.png
Pesquisar.png
Texto.png
Anotações.png
</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="MindSort" x="1020" y="-107">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="main" x="1028" y="-72">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="menu" x="1028" y="-10">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="MindSort" x="1094" y="-67">		<text>+ MindSort:
- O início de todo o processo, a janela principal.

public class MindSort{
//MAIN(EXECUTE)
	public static void main(String[]args);
//VAR GLOBAIS
	protected String titulo;
	protected String ini;
//LINK
	private File link;
		public File getFileLink();
//TREE
	private Tree tree;
		public Tree getTree();
		public void setTree(Tree tree);
//UI
	private final MindSortUI UI;
		public MindSortUI getUI();
//MAIN
	public MindSort(String[]args);
//ICONES
	protected Image getImage(String nome);
//FILE CHOOSER
	public File choose(String titulo,Image icone,boolean saveAsMind);
//NOVO
	public void novo(File mind);
//ABRIR
	public void abrir(File mind);
//SALVAR
	private boolean saving;
	public void salvar(File mind);
	private void salvar(File mind,int tentativas);
	public boolean salvarAntes();
	public void writeFile(File mind);
//EXPORTAR
	public void exportar(File png);
//FECHAR
	public void fechar();
//.INI
	public boolean getIniConfig();
		private String getString(String linha);
		private int getInteger(String linha);
		private Font getFont(String linha);
		private Cor getCor(String linha);
		private boolean getBoolean(String linha);
	public boolean setConfigIni();
//FOLDERS
	public boolean updateIconFolder();
	public boolean updateLanguageFolder(String idiomaFiltro);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Menu" x="1039" y="-1">		<text>+ Menu:
- Menu com cor própria.

public class Menu extends JMenu{
	public Menu(JMenuBar menu,String nome);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Janela" x="1036" y="-41">		<text>+ Janela:
- Janela que pode ser ligada à janela principal ou ser separada.

public class Janela{
//VAR GLOBAIS
	private JFrame janelaPai;
	private JFrame janela;
		public JFrame getSolidInstance();
	private JanelaVidro janelaVidro;
		public JanelaVidro getTransparentInstance();
//PAINEL
	private JRootPane painel;
		public JRootPane getPainel();
//DEFAULT FORM
	private int dialogDefaultWidth;
		public int getDialogDefaultWidth();
		public void setDialogDefaultWidth(int width);
	private int dialogDefaultHeight;
		public int getDialogDefaultHeight();
		public void setDialogDefaultHeight(int height);
//LOCK
	private boolean isLocked;
		public void setLocked(boolean locked);
		public boolean isLocked();
//MAIN
	public Janela(JFrame janelaPai);
//FUNCS
//ELEMENTOS
	public void add(Component elemento);
	public void remove(Component elemento);
//LOCAL
	public int getX();
	public int getY();
	public void setLocation(int x,int y);
//FORM
	public int getWidth();
	public int getHeight();
	public void setSize(int width,int height);
	public Rectangle getBounds();
	public void setBounds(Rectangle area);
	private boolean horizontal;
	private Point getLimitedLocation(int x,int y);
	private Dimension getLimitedSize(int width,int height);
	private Rectangle getLimitedBounds(int x,int y,int width,int height);
	private Rectangle getLimitedBounds(Rectangle newBounds);
	private Dimension windowSize;
	private void limitBounds();
//GERAIS
	public void setTitle(String titulo);
	public void setMinimumSize(Dimension size);
	public void setBackground(Color cor);
	public void setAlwaysOnTop(boolean topo);
	public void setIconImage(Image imagem);
	public void requestFocus();
	public boolean isFocused();
	public void addKeyListener(KeyAdapter k);
	public void setMenu(JMenuBar menu);
	public boolean isDragging();
	public void show(boolean visible);
	public void updateLang();
	public void addWindowListenerOnClosed(Runnable action);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Botao" x="1032" y="-5">		<text>+ Botao:
- Botão com cor própria.
- Seu atalho pode ser configurado.

public class Botao extends JMenuItem{
//AÇÃO
	public void setAction(AbstractAction acao);
//MAIN
	public Botao(JMenuBar menu,String nome);
//FUNCS
	public void setAtalho(int mask,int key,boolean showMask,boolean showKey);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Toggle" x="1032" y="3">		<text>+ Toggle:
- Toggle com cor própria.
- Seu atalho pode ser configurado.

public class Toggle extends JMenuItem{
//COR
	private Color corPadrao;
//PRESSIONADO
	private boolean pressed;
		public void setToggle(boolean pressed);
		public boolean isPressed();
//AÇÃO
	private Runnable acao;
		public void setAction(Runnable acao);
//MAIN
	public Toggle(JMenuBar menu,String nome);
//FUNCS
	public void setAtalho(int mask,int key,boolean showMask,boolean showKey);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Searcher" x="1036" y="-19">		<text>+ Searcher:
- O procurador de textos.

public class Searcher{
//VAR GLOBAIS
	protected Tree tree;
	protected MatchMade matches;
//UI
	private final SearcherUI UI;
		public SearcherUI getUI();
//MAIN
	public Searcher(Tree tree);
//FUNCS
	public void chamar();
	public void dispensar();
	public void reset();
	protected void researchMatch(String newTexto);
//PROCURAR
	private int index;
	protected void listar(boolean frente);
	protected void procurar(String termo,boolean frente,boolean onlySelected,boolean wholeWord,boolean diffMaiuscMinusc);
//DESTACAR
	protected void destacar(String termo,boolean onlySelected,boolean wholeWord,boolean diffMaiuscMinusc);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="FontChoser" x="1040" y="-59">		<text>+ FontChooser:
- O seletor de fontes.

public class FontChooser extends JComponent{
//RESPOSTAS
	public enum Option...
	protected Option resposta;
//VAR GLOBAIS
	private static final Font FONTE;
	private static final Font DEFAULT_FONTE;
//NOMES
	private static final String[]NOMES_OPTIONS;
	//TEXTO DO NOME SELECIONADO
		private JTextField nomeTexto;
			public JTextField getNomeTexto();
	//LISTA DE NOMES
		private JList nomesLista;
			public JList getNomesLista();
			public String getSelectedNome();
			public void setSelectedNome(String name);
	//PAINEL DOS NOMES
		private JPanel nomePainel;
			protected JPanel getNomePainel();
//ESTILOS
	private static final int[]ESTILOS;
	private static final String[]ESTILOS_OPTIONS;
	//TEXTO DO ESTILO SELECIONADO
		private JTextField estiloTexto;
			public JTextField getEstiloTexto();
	//LISTA DE ESTILOS
		private JList estilosLista;
			public JList getEstilosLista();
			public int getSelectedEstilo();
			public void setSelectedEstilo(int estilo);
	//PAINEL DOS ESTILOS
		private JPanel estiloPainel;
			protected JPanel getEstiloPainel();
//TAMANHOS
	private static final String[]TAMANHOS;
	private static final String[]TAMANHOS_OPTIONS;
	//TEXTO DO TAMANHO SELECIONADO
		private JTextField tamanhoTexto;
			public JTextField getTamanhoTexto();
	//LISTA DE TAMANHOS
		private JList tamanhosLista;
			public JList getTamanhosLista();
			public int getSelectedTamanho();
			public void setSelectedTamanho(int size);
	//PAINEL DOS TAMANHOS
		private JPanel tamanhoPainel;
			protected JPanel getTamanhoPainel();
//EXEMPLO
	//TEXTO DO EXEMPLO
		private JTextField exemploTexto;
			protected JTextField getSampleTextField();
	//PAINEL DO EXEMPLO
		private JPanel exemploPainel;
			protected JPanel getExemploPainel();
	protected void updateExemplo();
//LISTENER: DISPARA COM A SELEÇÃO DE ITEM
	protected class ListSelectionAction implements ListSelectionListener...
//LISTENER: DISPARA COM O FOCO DE TEXTO
	protected class TextoFocusAction extends FocusAdapter...
//LISTENER: DISPARA COM O INPUT DE TECLAS
	protected class TextoKeyAction extends KeyAdapter...
//LISTENER: DISPARA COM A EDIÇÃO DE TEXTO
	protected class ListDocumentAction implements DocumentListener...
//MAIN
	public FontChooser();
//FUNCS
	public Font getSelectedFont();
	public void setSelectedFont(Font fonte);
	public Option showDialog(Component janela);
		protected JDialog createDialog(Component janela);
//BOTÃO OK
	protected class DialogOKAction extends AbstractAction...
//BOTÃO CANCELAR
	protected class DialogCancelAction extends AbstractAction...
}</text>	</mod>	<mod border="0" color="999999" icons="" title="Arquivos" x="924" y="-115">		<text>+ Arquivos:</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="element" x="818" y="-97">		<text>+ element:
- Interfaces originais.</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Painel" x="814" y="-88">		<text>+ Painel:
- Usado no lugar de JPanel, é necessário para se ter uma janela com fundo transparente.

public class Painel extends JPanel{
//JANELA
	private Window janela;				//Link para a janela de origem
		public Window getJanela();
//ELEMENTOS
	private List&lt;Elemento&gt;elems;		//Lista de seus Elementos
		public List&lt;Elemento&gt;getElems();
		public void add(Elemento elem);
		public void del(Elemento elem);
//MAIN
	public Painel(Window janela);	//Pode apenas ser chamado se dado uma janela
//FUNCS
@Override
	public Point getToolTipLocation(MouseEvent m);	//Coloca o tooltip no canto para que ele não consuma clicks do mouse
//DRAW
@Override
	protected void paintComponent(Graphics quadro);	//Override o paint do JPanel
}
</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Elemento" x="803" y="-92">		<text>+ Elemento:
- Colocado em um Painel, possue um "print" que é atualizado apenas quando necessário.

public class Elemento{
//PAINEL(PAI)
	protected Painel painel;			//Seu Painel de origem
		public Painel getPainel();
//LOCAL
	protected int x;
		public int getX();
		public void setX(int x);
	protected int y;
		public int getY();
		public void setY(int y);
	public Point getLocation();
	public void setLocation(int x,int y);
//FORM
	protected int width;
		public int getWidth();
		public void setWidth(int width);
	protected int height;
		public int getHeight();
		public void setHeight(int height);
	public Dimension getSize();
	public void setSize(int width,int height);
	public Rectangle getBounds();
	public Rectangle getRelativeBounds();
	public void setBounds(int x,int y,int width,int height);
	public void setBounds(Rectangle r);
//IMAGEM
	protected Image print;			//Imagem que é utilizada para não se precisar redesenhar tudo
		protected Image getPrint();
	private Image buffer;			//Imagem onde os componentes do Item são desenhados
	private boolean update;		//Define se a área do desenho deve ser atualizada
		private void update();
//VISIBILIDADE
	protected boolean visible;	//Se é visível
		public boolean isVisible();
		public void setVisible(boolean visible);
//MAIN
	public Elemento(Painel painel);	//Pode apenas ser chamado se dado um Painel
//CLEAR
	public void clearDraw();	//Apaga o buffer e o print, deixando um fundo transparente
		private void clear(Graphics2D imagemEdit);	//Apaga uma imagem
//DRAW
	public synchronized void draw();	//Chamado pelo Painel
	protected void draw(Graphics2D imagemEdit);	//Deve ser overrided pelo extended, onde é desenhado os componentes
}
</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="cursores" x="809" y="-45">		<text>+ cursores:
- Imagens que são unidas para criar um cursor.
- Setas:
	NORMAL.png
	SELECT.png
- Modos:
	MOVE.png
	CREATE.png
	DELETE.png
	SON.png
	PAI.png
	EDIT_TITLE.png
- Areas:
	AREA_CREATE.png
	AREA_DELETE.png
	AREA_PAI.png
	AREA_SELECT.png
	AREA_SON.png
- Ações:
	DRAG.png
	AUTODRAG.png
</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="tree" x="815" y="-83">		<text>+ tree:
- Interface de organização de idéias.</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="ObjetoFocusListener" x="778" y="-62">		<text>+ ObjetoFocusListener:
- É ativado quando o Tree tem um obj focado ou desfocado.

public interface ObjetoFocusListener{
	public void objetoFocused(Objeto obj);
	public void objetoUnFocused(Objeto obj);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Cursor" x="773" y="-70">		<text>+ Cursor:
- Agrupa os comandos e imagens do cursor.

public class Cursor{
//ST
	private final CursorST ST;
		public CursorST getST();
		public int getState();
		public void set(int stateIndex);
//VAR GLOBAIS
	protected JFrame janela;						//Janela de origem
	public final static int CURSOR_SIZE;	//O tamanho das imagens do cursor
//MAIN
	public Cursor(JFrame janela);			//Pode apenas ser chamado se dado uma janela
//FUNCS
	public void set(int state);						//Muda a imagem do cursor dado uma combinação
		private Image getCursor(String nome);	//Devolve uma imagem, utilizada para criar uma imagem de cursor
//COMANDOS
	public final static int NOTHING;
	public final static int LEFT;
	public final static int MIDDLE;
	public final static int RIGHT;
	public final static int SHIFT;
	public final static int CTRL;
	public static boolean match(MouseEvent m,int... keys);	//Identifica se o input do mouse inclui os botões dados
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Selecao" x="795" y="-58">		<text>+ Selecao:
- A área criada ao selecionar um grupo de Objetos.

public class Selecao{
//ST
	private final SelecaoST ST;
		public SelecaoST getST();
		public SelecaoST.State getState();
		public void setState(SelecaoST.State state);
//UI
	private final SelecaoUI UI;
		public SelecaoUI getUI();
		public void draw(Graphics2D imagemEdit);
//LOCAL
	private int ancoraXIndex;
		public int getAncoraXIndex();
		public int getAncoraX();
	private int ancoraYIndex;
		public int getAncoraYIndex();
		public int getAncoraY();
	public void setAncoraIndex(int x,int y);
//FORM
	private int areaXIndex;
		public int getAreaXIndex();
		public int getAreaX();
	private int areaYIndex;
		public int getAreaYIndex();
		public int getAreaY();
	public void setAreaIndex(int x,int y);
	public Rectangle getFormIndex();
	public Rectangle getForm();
	public boolean intersects(Rectangle forma);
	public boolean intersects(Path2D.Float forma);
	public void setEmpty();
	public boolean isEmpty();
//MAIN
	public Selecao();
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Tree" x="769" y="-31">		<text>+ Tree:
- A interface, o principal.

public class Tree extends Elemento{
//ST
	private final TreeST ST;
		public TreeST getST();
		public int getState();
		public TreeST.State getStateContent(int state);
		public void setState(int stateIndex,Objeto...objs);
//UI
	private final TreeUI UI;
		public TreeUI getUI();
//LOCAL
	private static int X;
		public static int getLocalX();
	private static int Y;
		public static int getLocalY();
	public static Point getLocal();
	public static void setLocal(int x,int y);
//VAR GLOBAIS
	public static int UNIT;
//MÓDULOS ESPECIAIS
	private static Modulo MESTRE;
		public static Modulo getMestre();
	private static Modulo GHOST;
		public static Modulo getGhost();
//CONFIGURAÇÕES
	private int objetosLimite;
		public int getObjetosLimite();
		public void setObjetosLimite(int limite);
	private boolean showGrid;
		public boolean isShowingGrid();
		public void setShowGrid(boolean show);
	private boolean antialias;
		public boolean isAntialias();
		public void setAntialias(boolean antialias);
	private boolean enabled;
		public void setEnabled(boolean enabled);
		public boolean isEnabled();
//AÇÕES
	private Actions actions;
		public Actions getActions();
//UNDO-REDO
	private UndoRedo undoRedo;
		public UndoRedo getUndoRedoManager();
//LISTENER: DISPARA COM O MUDAR DE FOCO DE UM OBJETO
	private List&lt;ObjetoFocusListener&gt;objetoListeners;
		public void addObjetoListener(ObjetoFocusListener objetoListener);
		public void triggerObjetoListener(Objeto obj,boolean isFocused);
//OBJS
	private int objsListaMaxSize;
	private ListaObjeto objetos;
		public ListaObjeto getObjetos();
	//ADD
		public boolean add(int index,Objeto obj);
		public boolean add(Objeto obj);
	//DEL
		public boolean del(Objeto obj);
//SELECTED OBJS
	private ListaObjeto selectedObjetos;
		public ListaObjeto getSelectedObjetos();
	//SELECT
		public boolean select(Objeto obj);
		public void selectTree(Objeto obj);
		public void selectAllMods();
		public void selectAllCoxs();
		public void selectAllNods();
		public void selectAll();
		public boolean selectToBeCreator(Objeto obj);
		public boolean selectToBeSon(Objeto obj);
		public boolean selectToBePai(Objeto obj);
		public boolean selectToBeDeleted(Objeto obj);
	//UNSELECT
		public boolean unSelect(Objeto obj);
		public void unSelectTree(Objeto obj);
		public void unSelectAllMods();
		public void unSelectAllCoxs();
		public void unSelectAllNods();
		public void unSelectAll();
//VISIBLE OBJETOS
		private HashMap&lt;Integer,Modulo&gt;visibleMods;
			public HashMap&lt;Integer,Modulo&gt;getVisibleMods();
		private HashMap&lt;Integer,Conexao&gt;visibleCoxs;
			public HashMap&lt;Integer,Conexao&gt;getVisibleCoxs();
		private HashMap&lt;Integer,Nodulo&gt;visibleNods;
			public HashMap&lt;Integer,Nodulo&gt;getVisibleNods();
		private HashMap&lt;Point,Chunk&gt;chunks;
			public HashMap&lt;Point,Chunk&gt;getChunks();
			public void addToChunk(Objeto obj,Rectangle chunksIndexes);
			public void delDeChunk(Objeto obj,Rectangle chunksIndexes);
			public Rectangle getChunksIndexes(int xIndex,int yIndex,int widthIndex,int heightIndex);
			public Rectangle getChunksIndexes(Rectangle areaIndex);
//MAIN
	public Tree(Painel painel);
//FUNCS
	public void clear();
//DRAW
@Override
	public synchronized void draw(Graphics2D imagemEdit);
//TAG -&gt; TREE
	public List&lt;Objeto&gt;addTree(Element mindTag,boolean replaceMestre)throws Exception;
//TREE -&gt; TAG
	public String getText(ListaObjeto lista);
//TREE -&gt; IMAGE
	public Image getImage(ListaObjeto lista);
		private Rectangle compararArea(Rectangle area,int unit,int minX,int minY,int maxX,int maxY);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Actions" x="805" y="-35">		<text>+ Actions:
- Todas as ações possíveis de Tree.

public class Actions{
//VAR GLOBAIS
	private Tree tree;
	protected Point oldMouse;
//MOUSES
	public Point mousePressed;
	public Point mouseReleased;
	public Point mouseDragged;
	public Point mouseMoved;
	public Point mouseNonGrid;
//MAIN
	public Actions(Tree tree);
//INSERIR AÇÕES
	public void putIntputs();
	public void setFocusOn(Objeto[]objs);
	private Runnable animation;
	public void animate(Point localIni,Point localFim);
	protected void startAutoDrag();
//GET OBJETO HOVER
	protected Objeto getObjetoHover(Point mouse);
	protected Modulo getModuloHover(Point mouse,Modulo...modsToIgnore);
	protected Conexao getConexaoHover(Point mouse);
//GET MOUSE POSITION
	protected Point getPosition(Point mouse);
	protected Point getGridPosition(Point mouse);
	protected Point getNonGridPosition(Point mouse);
//ZOOM
	private int setZoom(Point mouse,int rotation);
//TÍTULO
	protected void updateTituloBounds();
//ATALHOS
	public void setModo(int modo);
	//EXIBIR
		public void centralizar()
		public void zoom(int rotation);
	//EDITAR
		public void undo();
		public void redo();
		public void cut();
		public void copy();
		private class TransferableImage implements Transferable...
		public void copyAsImg();
		public void paste();
		public void delete();
		public void moveUp(boolean saltar);
		public void moveRight(boolean saltar);
		public void moveLeft(boolean saltar);
		public void moveDown(boolean saltar);
	//SELECIONAR
		public void selectAll();
		public void unSelectAll();
		public void selectSons();
		public void invertSelection();
		public void selectModSemPai();
	//MÓDULO
		public void editTitulo();
		public void createModRelacionado();
		public void startRelation();
		public void deleteMods();
	//CONEXÃO
		public void invertCox();
//RESET
	public void resetState();
//REPETIÇÕES
	//ADD/DEL
		public void addUndoable(List&lt;Objeto&gt;objs,boolean addToTree);
		public void addUndoable(Objeto obj,boolean addToTree);
		public void delUndoable(List&lt;Objeto&gt;objs);
		public void delUndoable(Objeto obj);
	//SET
		protected void setHover(SelecaoST.State state);
		protected void setArea(SelecaoST.State state,boolean addTo,int...locations);
		protected void addAndSelect(Objeto obj);
	//CREATE
		public Modulo createMod(int x,int y);
		public Modulo createModRelacionado(int x,int y,List&lt;Modulo&gt;modsPais);
		public Nodulo createNod(Segmento seg,int x,int y,boolean undoable);
		protected void createNodOnGhostCoxs(int x,int y);
	//RELATE
		protected void relateMods(List&lt;Modulo&gt;modsPais,Modulo modSon);
		protected void relateToMods(List&lt;Modulo&gt;mods);
		protected void relateToMods(Modulo mod);
		public void relateToGhost(List&lt;Modulo&gt;mods);
		public void relateToGhost(Modulo mod);
	//DELETE
		public void deleteGhostCoxs();
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Chunk" x="767" y="-74">		<text>+ Chunk:
- Grupo de objetos, carregados conforme a sua área.

public class Chunk{
//VAR GLOBAIS
	public final static int SIZE;
//OBJETOS
	private ListaObjeto objetos;
		public ListaObjeto getObjetos();
		public void add(Objeto obj);
		public void del(Objeto obj);
		public boolean isEmpty();
//LOCAL
	private int xIndex;
		public int getXIndex();
		public int getX();
	private int yIndex;
		public int getYIndex();
		public int getY();
	public Point getLocationIndex();
//FORMA
	public Rectangle getForm();
//MAIN
	public Chunk(int xIndex,int yIndex);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="UndoRedo" x="801" y="211">		<text>+ UndoRedo:
- Controla os undo/redo de Tree.

public class UndoRedo{
//TREE
	private Tree tree;
		public Tree getTree():
		public void setTree(Tree tree);
//LIMITE DE UNDO/REDO
	private int doLimite;
		public int getDoLimite();
		public void setDoLimite(int limite);
//LISTENERS: DISPARAM QUANDO UM UNDO/REDO É FEITO
	private List&lt;UndoRedoListener&gt;undoRedoListeners;
		public void addUndoRedoListener(UndoRedoListener undoRedoListener);
		public void triggerUndoRedoListener(boolean isSaved,boolean isUndo);
//SAVES
	public void addUndoLocal(Objeto[]objs,Point diff);
	public void addUndoTitulo(Modulo mod,String titulo);
	public void addUndoTexto(Objeto obj,List&lt;String&gt;texto);
	public void addUndoCor(Modulo[]mods,Cor[]cores);
	public void addUndoBorda(Objeto[]objs,Borda[]bordas);
	public void addUndoGrossura(Conexao[]coxs,Grossura[]grossuras);
	public void addUndoIcone(Modulo[]mods,Icone icone,UndoRedoIcone.Modo modo);
	public void addUndoObjeto(Objeto[]objs,UndoRedoObjeto.Modo modo);
	private void addUndo(UndoRedoNodo acao);
//UNDO
	private List&lt;UndoRedoNodo&gt;undo;
		public void undo();
//REDO
	private List&lt;UndoRedoNodo&gt;redo;
		public void redo();
//UNDO/REDO
	private void add(List&lt;UndoRedoNodo&gt;undoRedo,UndoRedoNodo acao);
	private void undoRedo(List&lt;UndoRedoNodo&gt;entrada,List&lt;UndoRedoNodo&gt;saida);
//MAIN
	public UndoRedo(Tree tree);
//RESET
	public void clear();
//FOCUS
	private void focusAndSelect(Objeto[]objs);
	private void focusAndSelect(Modulo mod);
	private void focusAndSelect(Conexao cox);
}</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="undoRedo" x="809" y="206">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="UndoRedoNodo" x="792" y="239">		<text>+ UndoRedoNodo:
- Um nodo de uma ação que pode ser salva para ser undo/redo.

public class UndoRedoNodo{
//TIPO
	public enum Tipo...
	private Tipo tipo;
		public Tipo getTipo();
//MAIN
	public UndoRedoNodo(Tipo tipo);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="UndoRedoListener" x="768" y="231">		<text>+ UndoRedoListener:
- É ativado quando o undo/redo executa uma ação.

public interface UndoRedoListener{
	public void actionUndone();
	public void actionRedone();
	public void actionSaved();
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="UndoRedoTitulo" x="789" y="251">		<text>+ UndoRedoTitulo:
- Guarda uma ação sobre o titulo de um mod.

public class UndoRedoTitulo extends UndoRedoNodo{
//TÍTULO
	private String titulo;
		public String getTitulo();
//MÓDULO
	private Modulo mod;
		public Modulo getModulo();
//MAIN
	public UndoRedoTitulo(Modulo mod,String titulo);
//INVERT
	public UndoRedoTitulo invert(String titulo);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="UndoRedoLocal" x="780" y="235">		<text>+ UndoRedoLocal:
- Guarda uma ação sobre a posição de um mod, ou nod.

public class UndoRedoLocal extends UndoRedoNodo{
//LOCAL
	private Point diferenca;
		public Point getDiferenca();
//MÓDULOS/NÓDULOS
	private Objeto[]objs;
		public Objeto[]getObjetos();
		public Objeto getObjeto(int index);
		public int getObjetosCount();
//MAIN
	public UndoRedoLocal(Objeto[]objs,Point diferenca);
//INVERT
	public UndoRedoLocal invert();
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="UndoRedoObjeto" x="780" y="243">		<text>+ UndoRedoObjeto:
- Guarda uma ação sobre a adição ou exclusão de um mod, cox, ou nod.

public class UndoRedoObjeto extends UndoRedoNodo{
//MODO
	public enum Modo...
	private Modo modo;
		public Modo getModo();
//MÓDULOS/CONEXÕES/NÓDULOS
	private Objeto[]objs;
		public Objeto[]getObjetos();
		public Objeto getObjeto(int index);
		public int getObjetosCount();
//MAIN
	public UndoRedoObjeto(Objeto[]objs,Modo modo);
//INVERT
	public UndoRedoObjeto invert();
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="UndoRedoTexto" x="800" y="247">		<text>+ UndoRedoTexto:
- Guarda uma ação sobre o texto de um mod ou cox.

public class UndoRedoTexto extends UndoRedoNodo{
//TEXTO
	private List&lt;String&gt;texto;
		public List&lt;String&gt;getTexto();
//MÓDULO/CONEXÃO
	private Objeto obj;
		public Objeto getObjeto();
//MAIN
	public UndoRedoTexto(Objeto obj,List&lt;String&gt;texto);
//INVERT
	public UndoRedoTexto invert(List&lt;String&gt;texto);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="UndoRedoIcone" x="800" y="227">		<text>+ UndoRedoIcone:
- Guarda uma ação sobre a adição ou exclusão de um icone de um mod.

public class UndoRedoIcone extends UndoRedoNodo{
//MODO
	public enum Modo...
	private Modo modo;
		public Modo getModo();
//ICONE
	private Icone icone;
		public Icone getIcone();
//MÓDULOS
	private Modulo[]mods;
		public Modulo[]getModulos();
		public Modulo getModulo(int index);
		public int getModulosCount();
//MAIN
	public UndoRedoIcone(Modulo[]mods,Icone icone,Modo modo);
//INVERT
	public UndoRedoIcone invert();
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="UndoRedoCor" x="802" y="219">		<text>+ UndoRedoCor:
- Guarda uma ação sobre a cor de um mod.

public class UndoRedoCor extends UndoRedoNodo{
//CORES
	private Cor[]cores;
		public Cor getCor(int index);
//MÓDULOS
	private Modulo[]mods;
		public Modulo[]getModulos();
		public Modulo getModulo(int index);
		public int getModulosCount();
//MAIN
	public UndoRedoCor(Modulo[]mods,Cor[]cores);
//INVERT
	public UndoRedoCor invert(Cor[]cores);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="UndoRedoBorda" x="785" y="215">		<text>+ UndoRedoBorda:
- Guarda uma ação sobre a borda de um mod, ou cox.

public class UndoRedoBorda extends UndoRedoNodo{
//BORDA
	private Borda[]bordas;
		public Borda getBorda(int index);
//MÓDULOS/CONEXÕES
	private Objeto[]objs;
		public Objeto[]getObjetos();
		public Objeto getObjeto(int index);
		public int getObjetosCount();
//MAIN
	public UndoRedoBorda(Objeto[]objs,Borda[]bordas);
//INVERT
	public UndoRedoBorda invert(Borda[]bordas);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="UndoRedoGrossura" x="780" y="223">		<text>+ UndoRedoGrossura:
- Guarda uma ação sobre a grossura de um cox.

public class UndoRedoGrossura extends UndoRedoNodo{
//GROSSURA
	private Grossura[]grossuras;
		public Grossura getGrossura(int index);
//CONEXÕES
	private Conexao[]coxs;
		public Conexao[]getConexoes();
		public Conexao getConexao(int index);
		public int getConexoesCount();
//MAIN
	public UndoRedoGrossura(Conexao[]coxs,Grossura[]grossuras);
//INVERT
	public UndoRedoGrossura invert(Grossura[]grossuras);
}</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="texto" x="810" y="188">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="ObjetoSetListener" x="798" y="193">		<text>+ ObjetoSetListener:
- É ativado quando o Texto tem o seu obj modificado.

public interface ObjetoSetListener{
	public void objetoModified(Objeto oldObj,Objeto newObj);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Texto" x="787" y="197">		<text>+ Texto:
- O texto que recebe o texto de mods e coxs.
- Utilizado em Texto de mods e coxs, e Titulo de mods.

public class Texto extends JTextPane{
//OBJETO
	private Objeto obj;
		public Objeto getObjeto();
		public void setObjeto(Objeto obj);
		public void clearObjeto();
//LISTENER: DISPARA COM O MUDAR DE OBJETO
	private List&lt;ObjetoSetListener&gt;objetoSetListeners;
		public void addObjetoSetListener(ObjetoSetListener objetoSetListener);
		public void triggerObjetoSetListener(Objeto oldObj,Objeto newObj);
//UNDO-REDO
	private UndoManager undoManager;
		public UndoManager getUndoManager();
		public void setUndoManager(UndoManager undoManager);
		public boolean undo();
		public boolean redo();
		public void crearUndo();
		public void setUndoLimit(int limite);
//EDITOR CUSTOM
	private CustomEditor editor;
		public boolean isLineWrappable();
		public void setLineWrappable(boolean wrappable);
		public boolean isLineWrapped();
		public void setLineWrap(boolean wrap);
		public boolean isAllCharsVisible();
		public void setViewAllChars(boolean hide);
//MAIN
	public Texto();
//FUNCS
	public void addEditorListener(DocumentListener listener);
	public void deleteLine();
	public void addTab(KeyEvent k);
	public void remTab();
	private void addTabbedEnter(KeyEvent k);
//DRAW
@Override
	public void paint(Graphics imagemEdit);	//Adiciona antialias LCD(Contorno colorido)
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Objeto" x="768" y="-9">		<text>+ Objeto:
- Utilizado pelo Tree, são os que aparecem na interface.

public class Objeto{
//TIPO
	public enum Tipo...
	private Objeto.Tipo tipo;
		public Objeto.Tipo getTipo();
//INDEX
	private int index;
		public int getIndex();
		public void setIndex(int index);
//MAIN
	public Objeto(Objeto.Tipo tipo);
//FUNCS
	public boolean contains(Point mouse);
@Override
	public int hashCode();						//Necessário para ser incluído em listas
@Override
	public boolean equals(Object obj);	//Necessário para ser comparado
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="ListaObjeto" x="747" y="-13">		<text>+ ListaObjeto:
- Lista que guarda listas de mods, coxs, e nods.

public class ListaObjeto{
//LISTAS
	final HashMap&lt;Integer,Objeto&gt;listaAll;
		public HashMap&lt;Integer,Objeto&gt;getAll();
		public List&lt;Objeto&gt;getAllOrdened();
		public List&lt;Objeto&gt;getAllOrdenedInverted();
	private List&lt;Modulo&gt;listaMods;
		public List&lt;Modulo&gt;getModulos();
	private List&lt;Conexao&gt;listaCoxs;
		public List&lt;Conexao&gt;getConexoes();
	private List&lt;Nodulo&gt;listaNods;
		public List&lt;Nodulo&gt;getNodulos();
//MAIN
	public ListaObjeto(){}
//FUNCS
	public boolean has(Objeto.Tipo...tipos);					//Se possúi o tipo dado
	public static ListaObjeto toList(Objeto[]objs);			//Resolve em uma Lista
	public static ListaObjeto toList(List&lt;Objeto&gt;objs);	//Resolve em uma Lista
	public boolean isEmpty();
	public boolean contains(Objeto obj);
	public void clear();
	public int size();
//ADD
	public boolean add(Objeto obj);
	public boolean add(int index,Objeto obj);
//DEL
	public boolean del(Objeto obj);
}</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="conexao" x="804" y="0">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="modulo" x="805" y="32">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="objeto" x="810" y="-18">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Icone" x="755" y="183">		<text>+ Icone:
- Os diferentes icones que um mod pode ter.

public class Icone{
//ICONE
	private Image icone;
		public Image getIcone();
		public void setIcone(Image icone);
//LINK
	private File link;					//Link absoluto
		public String getNome();
		public String getLink();
		public void setLink(File link);
	private String relativeLink;		//Link partindo da pasta Icones
		public String getRelativeLink();
		public void setRelativeLink(String relativeLink);
//MAIN
	public Icone(Image icone,File link,String relativeLink);
//FUNCS
@Override
	public int hashCode();						//Necessário para ser incluído em listas
@Override
	public boolean equals(Object obj);	//Necessário para ser comparado
//SIZE
	public static int getSize(int unit);							//Retorna o tamanho
//DRAW
	public void draw(Graphics2D imagemEdit,int unit,int x,int y);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Borda" x="772" y="171">		<text>+ Borda:
- As diferentes bordas que um mod e cox podem ter.

public class Borda{
//BORDAS
	public static final int SOLID;							//Linha sólida
	public static final int TRACED;						//Linha com traços
	public static final int LONG_TRACED;					//Linha com traços longos
	public static final int DOTTED;						//Linha com pontos
	public static final int DOTTED_1_TRACED_1;			//Linha com 1 ponto e 1 traço
	public static final int DOTTED_2_TRACED_1;			//Linha com 2 pontos e 1 traço
	public static final int DOTTED_1_TRACED_2;			//Linha com 1 ponto e 2 traços
	public static final int DOTTED_2_TRACED_2;			//Linha com 2 pontos e 2 traços
	public static final int DOTTED_1_LONG_TRACED_1;	//Linha com 1 ponto e 1 traço longo
	public static final int DOTTED_2_LONG_TRACED_1;	//Linha com 2 pontos e 1 traço longo
	public static final int DOTTED_1_LONG_TRACED_2;	//Linha com 1 ponto e 2 traços longos
	public static final int DOTTED_2_LONG_TRACED_2;	//Linha com 2 pontos e 2 traços longos
	private int index;
		public int getIndex();
		public void setIndex(int index);
//BORDA VISUAL
	public BasicStroke getStaticVisual();				//Valor para o popup
	public BasicStroke getVisual(float borda);			//Devolve uma borda dado um dos indexes
//NOME
	public String getNome();	//Nome da borda para o popup
//MAIN
	public Borda(int index);	//Pode apenas ser chamado se dado uma grossura
//FUNCS
@Override
	public int hashCode();						//Necessário para ser incluído em listas
@Override
	public boolean equals(Object obj);	//Necessário para ser comparado
//TODAS AS BORDAS
	public static Borda[]getAllBordas();	//Lista com todas as grossuras
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Grossura" x="761" y="179">		<text>+ Grossura:
- As diferentes grossuras que um cox pode ter.

public class Grossura{
//GROSSURAS
	public static final int MEDIUM;		//Grossura padrão
	public static final int THIN;			//Fino
	public static final int WIDE;			//Grosso
	public static final int ULTRA_WIDE;	//O mais grosso possível
	private int index;
		public int getIndex();
		public void setIndex(int index);
//VALOR
	public float getStaticValor();			//Valor para o popup
	public float getValor(float borda);	//Devolve uma grossura dado um dos indexes
//NOME
	public String getNome();		//Nome da grossura para o popup
//MAIN
	public Grossura(int index);	//Pode apenas ser chamado se dado uma grossura
//FUNCS
@Override
	public int hashCode();						//Necessário para ser incluído em listas
@Override
	public boolean equals(Object obj);	//Necessário para ser comparado
//TODAS AS GROSSURAS
	public static Grossura[]getAllGrossuras();	//Lista com todas as grossuras
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Cor" x="768" y="175">		<text>+ Cor:
- As diferentes cores que tudo pode ter.

public class Cor extends Color{
//CORES
	public static Cor TRANSPARENTE;
//BRILHO
	private int brilho;				//O brilho da cor
		public int getBrilho();
		private void setBrilho(Cor cor);
		public boolean isDark();	//Se a cor é considerada escura
//MAIN
	public Cor(int r,int g,int b);						//Se dado um RGB
	public Cor(int r,int g,int b,int a):				//Se dado um RGBA
	public Cor(float r,float g,float b,float a);	//Se dado um RGBA
	public Cor(Color cor);									//Se dado uma Cor
//FUNCS
@Override
	public int hashCode();						//Necessário para ser incluído em listas
@Override
	public boolean equals(Object obj);	//Necessário para ser comparado
//CONVERSÕES
	public String toHexOpaque();					//Converte para HEX #FF00FF
	public String toHexAlpha();					//Converte para HEX #FF00FF00
	public static Cor RGBToHex(String rgb);	//Converte RGB para HEX
	public static Cor HexToRGBA(String hex)throws Exception;	//Converte HEX para RGBA
	public static int getBrightness(Color cor);	//Valor que indica a cor
//TRANSFORMAÇÕES
	public static Cor getChanged(Color cor,float brilho);			//Muda o brilho em %
	public static Cor getChanged(Color cor,int valor);				//Muda o brilho diretamente
	public static Cor getTransparent(Color cor,float opacity);	//Muda a transparência
	public static Cor getInverted(Color cor);							//Inverte a cor
	public static Cor getContraste(Cor corFundo,Cor cor,boolean esclarecer);	//Cria contraste
}</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="popup" x="810" y="68">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Popup" x="805" y="85">		<text>+ Popup:
- Uma lista de opções da interface.

public class Popup{
//TREE(PAI)
	private Tree tree;
		public Tree getTree();
//LOCAL
	private Point local;
//OBJETO
	private Objeto obj;
//PASTA DE ICONES
	private File iconesPasta;
		public File getIconePasta();
		public void setIconePasta(File link);
//VAR GLOBAIS
	public static final int BLOCO_SIZE;
	public static final int GRID_BORDA;
	public static final int BLOCO_SPACE;
//ITENS
	private Menu mod_menuBordas;
	private Item mod_editTitle;
	private Item mod_newCox;
	private Item cox_newNod;
	private Item del;
//PICKS COM POPUP
	private List&lt;IconePick&gt;mod_iconPicks;
	private CorPick mod_corPick;
	private BordaPick mod_bordaPick;
	private BordaPick cox_bordaPick;
	private GrossuraPick cox_grossuraPick;
//POPUPS
	private JPopupMenu treePopup;
	private JPopupMenu modPopup;
	private JPopupMenu coxPopup;
	private JPopupMenu nodPopup;
//FOCUS
	public static final int DELAY;
	private static Runnable focusRun;			//ITEM/MENU A FOCAR
		public static synchronized Runnable getFocus();
		public static synchronized void setFocus(Runnable focus);
	private static boolean goingToFocus;	//SE IRÁ FOCAR EM UM MENU/ITEM
		public static synchronized boolean getGoingToFocus();
		public static synchronized void setGoingToFocus(boolean focus);
//MAIN
	public Popup(Tree tree);
//SHOW
	public void show(Point local,Objeto obj);
	public void close();
	public static void showTooltip(boolean show);
//UPDATE
	public void update();
	//UPDATE ICONES
		private Menu getMenuIcon(File pastaIcon);
			private void setMenuIcon(Menu menu,File pasta,String subPasta);
	//UPDATE CORES
		public void setCoresPaleta(Cor[][]coresPaleta);
	public boolean isShowing();
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Bloco" x="764" y="73">		<text>+ Bloco:
- Bloco de seleção de opções.

public class Bloco extends Rectangle{
//FOCO
	private boolean focus;
		public void setFocus(boolean foco){focus=foco;}
		public boolean isFocused(){return focus;}
//MAIN
	public Bloco(){}
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Item" x="784" y="77">		<text>+ Item:
- Um item que possúi delay antes de abrir.

public class Item extends JMenuItem{
//TREE
	private Tree tree;
		public Tree getTree();
		public void setTree(Tree tree);
//BLOCOS
	public void unfocusAll();	//USADO PELOS EXTENDS
//MAIN
	private final Item item;
	public Item(String titulo,Tree tree);
//FUNCS
@Override
	public void setEnabled(boolean enabled);
//FOCO
	private Runnable focusDelayed(Item item);
	private void focus(Item item);
@Override
	protected void processMouseEvent(MouseEvent m);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Menu" x="798" y="81">		<text>+ Menu:
- Um menu que possúi delay antes de abrir.

public class Menu extends JMenu{
//MAIN
	private final Menu menu=this;
	public Menu(String titulo);
//FUNCS
@Override
	public void setEnabled(boolean enabled);
//FOCO
	private Runnable focusDelayed(Menu menu);
	private void focus(Menu menu);
@Override
	protected void processMouseEvent(MouseEvent m);
}</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="icon" x="806" y="148">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="IconeBloco" x="786" y="153">		<text>+ IconeBloco:
- Bloco de seleção de Icones.

public class IconeBloco extends Bloco{
//ICONE
	private Icone icone;
		public Icone getIcone();
		public void setIcone(Icone icone);
//MAIN
	public IconeBloco(IconePick pick,int x,int y,int size,Icone icone);
	public IconeBloco(IconePick pick);
	private void set(IconePick pick);
//DRAW
	public void draw(Graphics imagemEdit);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="IconePick" x="799" y="157">		<text>+ IconePick:
- Seletor de Icones.

public class IconePick extends Item{
//MÓDULOS
	private List&lt;Modulo&gt;selectedMods;
		public void setModSelec(List&lt;Modulo&gt;modSelec);
		public List&lt;Modulo&gt;getSelectedMods();
//ICONES
	private List&lt;List&lt;IconeBloco&gt;&gt;iconesBlocos;
//LISTENER: DISPARA QUANDO MODS TEM SEUS ICONES MUDADOS
	private List&lt;IconePickListener&gt;iconePickListeners;
		public List&lt;IconePickListener&gt;getIconePickListeners();
		public void addIconePickListener(IconePickListener iconePickListener);
		public void triggerIconePickListener(Icone icone,boolean isAdding);
//TOOLTIP
	private IconeBloco toolTipBloco;
		public void setToolTipBloco(IconeBloco bloco);
	@Override
		public Point getToolTipLocation(MouseEvent m);
//VARS GLOBAIS
	public static List&lt;Icone&gt;ICONES;
//MAIN
	public IconePick(Tree tree,File iconesPasta,String iconeSubPasta,List&lt;Modulo&gt;modSelec,double minWidth);
//FUNCS
@Override
	public void unfocusAll();
//DRAW
@Override
	public void paint(Graphics imagemEdit);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="CorPick" x="785" y="117">		<text>+ CorPick:
- Seletor de Cores.

public class CorPick extends Item{
//MÓDULOS SELECIONADOS
	private List&lt;Modulo&gt;selectedMods;
		public void setSelectedMods(List&lt;Modulo&gt;selectedMods);
//PALETA DE CORES
	public static Cor[][]PALETA_DEFAULT;
//BLOCOS DE CORES
	private List&lt;List&lt;CorBloco&gt;&gt;coresBlocos;
	private CorBloco corBloco;
		public CorBloco getBlocoPrincipal();
//BLOCO DO COLORPICK
	private CorPickBloco corPickBloco;
//LISTENER: DISPARA QUANDO MODS TEM SUAS CORES MUDADAS
	private List&lt;CorPickListener&gt;corPickListeners;
		public List&lt;CorPickListener&gt;getCorPickListeners();
		public void addCorPickListener(CorPickListener corPickListener);
		public void triggerCorPickListener(Cor[]oldCores,Cor newCor);
//MAIN
	public CorPick(Tree tree,List&lt;Modulo&gt;selectedMods);
//FUNCS
@Override
	public void unfocusAll();
//DRAW
@Override
	public void paint(Graphics imagemEdit);
}</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="color" x="805" y="108">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="IconePickListener" x="782" y="161">		<text>+ IconePickListener:
- É ativado quando um icone é adicionado ou removido.

public interface IconePickListener{
	public void iconAdded(Modulo[]mods,Icone icone);
	public void iconRemoved(Modulo[]mods,Icone icone);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="CorPickListener" x="771" y="125">		<text>+ CorPickListener:
- É ativado quando uma cor é mudada.

public interface CorPickListener{
	public void colorModified(Modulo[]mods,Cor[]oldCores,Cor newCor);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="CorBloco" x="799" y="113">		<text>+ CorBloco:
- Bloco de seleção de Cores.

public class CorBloco extends Bloco{
//COR
	private Cor cor;
		public Cor getCor();
		public void setCor(Cor cor);
		public void setCor(Color cor);
//MAIN
	public CorBloco(CorPick pick,int x,int y,int size,Cor cor);
	public CorBloco(CorPick pick);
	private void set(CorPick pick);
//DRAW
	public void draw(Graphics imagemEdit);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="BordaPick" x="787" y="99">		<text>+ BordaPick:
- Seletor de Bordas.

public class BordaPick extends Item{
//MÓDULOS/CONEXÕES SELECIONADOS
	private List&lt;Modulo&gt;selectedMods;
		public void setSelectedMods(List&lt;Modulo&gt;selectedMods);
	private List&lt;Conexao&gt;selectedCoxs;
		public void setSelectedCoxs(List&lt;Conexao&gt;selectedCoxs);
//BORDAS
	private List&lt;List&lt;BordaBloco&gt;&gt;bordasBlocos;
//LISTENER: DISPARA QUANDO MODS/COXS TEM SUA BORDA MUDADA
	private List&lt;BordaPickListener&gt;bordaPickListeners;
		public List&lt;BordaPickListener&gt;getBordaPickListeners();
		public void addBordaPickListener(BordaPickListener bordaPickListener);
		public void triggerBordaPickListener(Borda[]oldBordas,Borda newBorda);
//TOOLTIP
	private BordaBloco toolTipBloco;
		public BordaBloco getTooltipBloco();
		public void setToolTipBloco(BordaBloco bloco);
	@Override
		public Point getToolTipLocation(MouseEvent m);
//MAIN
	public BordaPick(Tree tree,List&lt;Modulo&gt;selectedMods,List&lt;Conexao&gt;selectedCoxs);
//FUNCS
@Override
	public void unfocusAll();
//DRAW
@Override
	public void paint(Graphics imagemEdit);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="BordaPickListener" x="773" y="103">		<text>+ GrossuraPickListener:
- É ativado quando uma borda é mudada.

public interface BordaPickListener{
	public void bordaModified(Objeto[]objs,Borda[]oldBordas,Borda newBorda);
}</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="borda" x="805" y="90">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="BordaBloco" x="797" y="95">		<text>+ BordaBloco:
- Bloco de seleção de Bordas.

public class BordaBloco extends Bloco{
//BORDA
	private Borda borda;
		public Borda getBorda();
		public void setBorda(Borda borda);
//MAIN
	public BordaBloco(BordaPick pick,int x,int y,int size,Borda borda);
	public BordaBloco(BordaPick pick);
	private void set(BordaPick pick);
//DRAW
	public void draw(Graphics imagemEdit);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="GrossuraPick" x="783" y="139">		<text>+ GrossuraPick:
- Seletor de Grossuras.

public class GrossuraPick extends Item{
//CONEXÕES SELECIONADAS
	private List&lt;Conexao&gt;selectedCoxs;
		public void setSelectedCoxs(List&lt;Conexao&gt;selectedCoxs);
		public List&lt;Conexao&gt;getSelectedCoxs();
//GROSSURAS
	private List&lt;GrossuraBloco&gt;grossurasBlocos;
//LISTENER: DISPARA QUANDO COXS TEM SUA GROSSURA MUDADA
	private List&lt;GrossuraPickListener&gt;grossuraPickListeners;
		public List&lt;GrossuraPickListener&gt;getGrossuraPickListeners();
		public void addGrossuraPickListener(GrossuraPickListener grossuraPickListener);
		public void triggerGrossuraPickListener(Grossura[]oldGrossuras,Grossura newGrossura);
//TOOLTIP
	private GrossuraBloco toolTipBloco;
		public void setToolTipBloco(GrossuraBloco bloco);
	@Override
		public Point getToolTipLocation(MouseEvent m);
//MAIN
	public GrossuraPick(Tree tree,List&lt;Conexao&gt;selectedCoxs);
//FUNCS
@Override
	public void unfocusAll();
//DRAW
@Override
	public void paint(Graphics imagemEdit);
}
</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="GrossuraPickListener" x="767" y="143">		<text>+ GrossuraPickListener:
- É ativado quando a grossura é mudada.

public interface GrossuraPickListener{
	public void grossuraModified(Conexao[]coxs,Grossura[]oldGrossuras,Grossura newGrossura);
}</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="grossura" x="804" y="130">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="GrossuraBloco" x="795" y="135">		<text>+ GrossuraBloco:
- Bloco de seleção de Grossuras.

public class GrossuraBloco extends Bloco{
//GROSSURA
	private Grossura grossura;
		public Grossura getGrossura();
		public void setGrossura(Grossura grossura);
//MAIN
	public GrossuraBloco(GrossuraPick pick,int x,int y,int size,Grossura grossura);
	public GrossuraBloco(GrossuraPick pick);
	private void set(GrossuraPick pick);
//DRAW
	public void draw(Graphics imagemEdit);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Conexao" x="734" y="19">		<text>+ Conexao:
- Linha que conecta os mods.
- Configurações:
. Borda.
. Grossura.
. Nódulos.

public class Conexao extends Objeto{
//ST
	private final ConexaoST ST;
		public ConexaoST getST();
		public ConexaoST.State getState();
		public void setState(ConexaoST.State state);
//UI
	private final ConexaoUI UI;
		public ConexaoUI getUI();
		public void draw(Graphics2D imagemEdit,int unit);
//LOCAL
	public int getX1Index();
	public int getX1(int unit);
	public int getY1Index();
	public int getY1(int unit);
	public int getX2Index();
	public int getX2(int unit);
	public int getY2Index();
	public int getY2(int unit);
//FORMA
	public Path2D.Float getFormIndex();
	public Path2D.Float getForm(int unit):
@Override
	public boolean contains(Point mouse);
	public Segmento segmentContains(Point mouse);
//LISTENER: DISPARA COM O MUDAR DE BOUNDS DE UM OBJETO
	public static List&lt;ObjetoBoundsListener&gt;boundsListeners;
		public static void addBoundsListener(ObjetoBoundsListener boundsListener);
//MÓDULOS
	private Modulo pai;
		public Modulo getPai();
		public void setPai(Modulo mod);
	private Modulo son;
		public Modulo getSon()
		public void setSon(Modulo mod);
//NÓDULOS
	private List&lt;Nodulo&gt;nodulos;
		public List&lt;Nodulo&gt;getNodulos();
		public boolean addNodulo(Nodulo nod);
		public boolean delNodulo(Nodulo nod);
//SEGMENTOS
	private List&lt;Segmento&gt;segmentos;
		public List&lt;Segmento&gt;getSegmentos();
		private boolean addSegmentos(Nodulo nod);
		private boolean delSegmentos(Nodulo nod);
//BORDA
	private Borda borda;
		public Borda getBorda();
		public boolean setBorda(Borda borda);
//GROSSURA
	private Grossura grossura;
		public Grossura getGrossura();
		public boolean setGrossura(Grossura grossura);
//TEXTO
	private List&lt;String&gt;texto;
		public List&lt;String&gt;getTexto();
		public void setTexto(List&lt;String&gt;texto);
		public void setTexto(String texto);
		public String getText();
//POSIÇÃO DO CURSOR
	private int caret;
		public void setCaret(int caret);
		public int getCaret();
//MAIN
	public Conexao(Modulo pai,Modulo son);
//FUNCS
@Override
	public int hashCode();
@Override
	public boolean equals(Object obj);
//TAG -&gt; COX
	public static Conexao getConexao(Element coxTag,HashMap&lt;Integer,Modulo&gt;ids);
//COX -&gt; TAG
	public void addToXML(Document xml,Element mindTag,HashMap&lt;Modulo,Integer&gt;ids);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Segmento" x="777" y="10">		<text>+ Segmento:
- Linha que conecta os nods de um cox.

public class Segmento extends Objeto{
//ST
	private final SegmentoST ST;
		public SegmentoST getST();
		public SegmentoST.State getState();
		public void setState(SegmentoST.State state);
//CONEXÃO
	public Conexao conexao;
		public Conexao getConexao();
		public void setConexao(Conexao cox);
//PONTAS
	private Objeto ponta1;
		public Objeto getPonta1();
		public void setPonta1(Objeto obj);
	private Objeto ponta2;
		public Objeto getPonta2();
		public void setPonta2(Objeto obj);
//LOCAL
	public int getX1Index();
	public int getX1(int unit);
	public int getY1Index();
	public int getY1(int unit);
	public int getX2Index();
	public int getX2(int unit);
	public int getY2Index();
	public int getY2(int unit);
//FORMA
	public Line2D getForm(int unit);
	public boolean contains(Point mouse);
//MAIN
	public Segmento(Conexao cox,Objeto obj1,Objeto obj2);
//FUNCS
@Override
	public int hashCode();
@Override
	public boolean equals(Object obj);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="ObjetoBoundsListener" x="791" y="-5">		<text>+ ObjetoBoundsListener:
- É ativado quando um obj muda de local ou tamanho.

public interface ObjetoBoundsListener{
	public void boundsChanged(Objeto obj,Rectangle oldBoundsIndex,Rectangle newBoundsIndex);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Modulo" x="711" y="37">		<text>+ Modulo:
- Bloco de texto, que anota idéias.
- Configurações:
. Local.
. Cor.
. Icones.
. Borda.
. Título.
. Texto.
  Posição do cursor.
. Conexões.

public class Modulo extends Objeto{
//ST
	private final ModuloST ST;
		public ModuloST getST();
		public ModuloST.State getState();
		public void setState(ModuloST.State state);
//UI
	private final ModuloUI UI;
		public ModuloUI getUI();
		public void draw(Graphics2D imagemEdit,int unit);
//LOCAL
	private int xIndex;
		public int getXIndex();
		public int getX(int unit);
		public int getMeioXIndex();
		public int getMeioX(int unit);
		public void setXIndex(int x);
	private int yIndex;
		public int getYIndex();
		public int getY(int unit);
		public int getMeioYIndex();
		public int getMeioY(int unit);
		public void setYIndex(int y);
	public Point getLocationIndex();
	public Point getLocation(int unit);
	public void justSetLocationIndex(int x,int y);
	public void setLocationIndex(int x,int y);
//FORMA
	private int widthIndex;
		public int getWidthIndex();
		public int getWidth(int unit);
	private int heightIndex;
		public int getHeightIndex();
		public int getHeight(int unit);
	public Dimension getSizeIndex();
	public Rectangle getFormIndex();
	public Rectangle getForm(int unit);
	public void justSetSize();
	public void setSize();
@Override
	public boolean contains(Point mouse);
//LISTENER: DISPARA COM O MUDAR DE BOUNDS DE UM OBJETO
	private static List&lt;ObjetoBoundsListener&gt;boundsListeners;
		public static void addBoundsListener(ObjetoBoundsListener boundsListener);
		private void triggerBoundsListener(Rectangle modOldBounds,Rectangle[]coxsOldBounds);
//COR
	private Cor cor;
		public Cor getCor();
		public void setCor(Cor cor);
//BORDA
	private Borda borda;
		public Borda getBorda();
		public boolean setBorda(Borda borda);
//ICONES
	private List&lt;Icone&gt;icones;
		public List&lt;Icone&gt;getIcones();
		public boolean justAddIcone(Icone icone);
		public boolean addIcone(Icone icone);
		public Icone delIcone(Icone icone);
		public boolean isIconified();
//TITULO
	protected String[]titulo;
		public String getTitle();
		public void justSetTitle(String titulo);
		public void setTitle(String titulo);
//TEXTO
	private List&lt;String&gt;texto;
		public List&lt;String&gt;getTexto();
		public String getText();
		public void setTexto(List&lt;String&gt;texto);
		public void setTexto(String texto);
//POSIÇÃO DO CURSOR
	private int caret;
	public int getCaret(){return caret;}
		public void setCaret(int caret){this.caret=caret;}
//CONEXÕES
	private List&lt;Conexao&gt;conexoes;
		public List&lt;Conexao&gt;getConexoes();
		public boolean addConexao(Conexao cox);
		public boolean delConexao(Conexao cox);
//MAIN
	public Modulo();
	public Modulo(int x,int y,String titulo);
	public static Font getFont(int unit);
	public Font getRelativeFont(int unit);
@Override
	public int hashCode();
@Override
	public boolean equals(Object obj);
//TAG -&gt; MOD
	public static Modulo getModulo(Element modTag)throws Exception;
//MOD -&gt; TAG
	public void addToXML(Document xml,Element mindTag);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Nodulo" x="765" y="55">		<text>+ Nodulo:
- Ponto que dobra o cox.
- Configurações:
. Local.

public class Nodulo extends Objeto{
//ST
	private final NoduloST ST;
		public NoduloST getST();
		public NoduloST.State getState();
		public void setState(NoduloST.State state);
//UI
	private final NoduloUI UI;
		public NoduloUI getUI();
		public void draw(Graphics2D imagemEdit,int unit);
//VAR GLOBAIS
	public float getRoundValue(int unit);
//BOUNDS
	private int xIndex;
		public int getXIndex();
		public int getX(int unit);
	private int yIndex;
		public int getYIndex();
		public int getY(int unit);
	public Point getLocationIndex();
	public Point getLocation(int unit);
	public void justSetLocationIndex(int x,int y);
	public void setLocationIndex(int x,int y);
//FORMA
	public float getSize(int unit);
	public Rectangle getFormIndex();
	public Rectangle getForm(int unit);
@Override
	public boolean contains(Point mouse);
//LISTENER: DISPARA COM O MUDAR DE BOUNDS DE UM OBJETO
	private static List&lt;ObjetoBoundsListener&gt;boundsListeners;
		public static void addBoundsListener(ObjetoBoundsListener boundsListener);
		private void triggerBoundsListener(Rectangle nodOldBounds,Rectangle coxOldBounds);
//CONEXÃO
	private Conexao conexao;
		public Conexao getConexao();
		public void setConexao(Conexao cox):
//INDEX ON COX
	private int indexOnCox;
		public int getIndexOnCox();
		public void setIndexOnCox(int index);
//MAIN
	public Nodulo(Conexao cox,int x,int y);
//FUNCS
@Override
	public int hashCode();
@Override
	public boolean equals(Object obj);
//TAG -&gt; NOD
	public static Nodulo getNodulo(Element nodTag,Conexao cox);
//NOD -&gt; TAG
	public void addToXML(Document xml,Element coxTag);
}</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Duplicate.png" title="Java" x="925" y="-32">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="" title="CustomColumnFactory" x="784" y="203">		<text>private class CustomColumnFactory implements ViewFactory{
//&lt;CARACTER_CUSTOM&gt;
	private class CustomLabelView extends LabelView...
//&lt;/CARACTER_CUSTOM&gt;
//&lt;PARÁGRAFO_CUSTOM&gt;
	private class CustomParagraphView extends ParagraphView...
//&lt;/PARÁGRAFO_CUSTOM&gt;
//FUNCS
@Override
	public View create(javax.swing.text.Element elem);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="CustomLabelView" x="775" y="206">		<text>private class CustomLabelView extends LabelView{
//MAIN
	public CustomLabelView(javax.swing.text.Element elem);
//FUNCS
@Override
	public float getMinimumSpan(int axis);
//DRAW
@Override
	public void paint(Graphics g,Shape a);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="CustomParagraphView" x="789" y="206">		<text>private class CustomParagraphView extends ParagraphView{
//MAIN
	public CustomParagraphView(Element elem);
//FUNCS
@Override
	public float nextTabStop(float x,int tabOffset);
@Override
	public void layout(int width,int height);
@Override
	public float getMinimumSpan(int axis);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="Tipo" x="763" y="-7">		<text>public enum Tipo{
	MODULO,
	CONEXAO,
	NODULO,
	SEGMENTO;
	public boolean is(Objeto.Tipo... tipos);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="State" x="792" y="22">		<text>public enum State{
	UNSELECTED,
	SELECTED,
	HIGHLIGHTED,
	TO_BE_CREATOR,
	TO_BE_DELETED;
	public boolean is(Conexao.State... states);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="State" x="786" y="15">		<text>public enum State{
	UNSELECTED,
	TO_BE_CREATOR;
	public boolean is(Segmento.State... states);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="State" x="793" y="61">		<text>public enum State{
	UNSELECTED,
	SELECTED,
	HIGHLIGHTED,
	TO_BE_CREATOR,
	TO_BE_DELETED;
	public boolean is(Nodulo.State... states);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="Cores" x="793" y="47">		<text>public static class Cores{
	public static Cor FUNDO;
	public static Cor SELECT;
	public static Cor CREATE;
	public static Cor PAI;
	public static Cor SON;
	public static Cor DELETE;
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="State" x="793" y="43">		<text>public enum State{
	UNSELECTED,
	SELECTED,
	HIGHLIGHTED,
	TO_BE_CREATOR,
	TO_BE_SON,
	TO_BE_PAI,
	TO_BE_DELETED;
	public boolean is(Modulo.State... states);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="State" x="800" y="-51">		<text>public enum State{
	TO_UNSELECT,		//Usado apenas em seleções
	TO_SELECT,			//Área branca
	TO_CREATE,			//Área verde
	TO_CREATE_SON,	//Área amarela
	TO_CREATE_PAI,	//Área azul
	TO_DELETE;			//Área vermelha
	public boolean is(Selecao.State... states);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="DialogOKAction" x="1051" y="-59">		<text>protected class DialogOKAction extends AbstractAction{	//Ação do botão de OK
//VAR GLOBAIS
	protected static final String ACTION_NAME;
	private JDialog dialog;
//MAIN
	protected DialogOKAction(JDialog dialog);
//FUNCS
	public void actionPerformed(ActionEvent a);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="DialogCancelAction" x="1051" y="-57">		<text>protected class DialogCancelAction extends AbstractAction{	//Ação do botão de Cancelar
//VAR GLOBAIS
	protected static final String ACTION_NAME;
	private JDialog dialog;
//MAIN
	protected DialogCancelAction(JDialog dialog);
//FUNCS
	public void actionPerformed(ActionEvent a);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="Option" x="1050" y="-62">		<text>public enum Option{
	APPROVE_OPTION,
	CANCEL_OPTION,
	ERROR_OPTION;
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="ListSelectionAction" x="1051" y="-54">		<text>protected class ListSelectionAction implements ListSelectionListener{
//TEXTO
	private JTextComponent texto;
//MAIN
	public ListSelectionAction(JTextComponent texto);
//FUNCS
	public void valueChanged(ListSelectionEvent l);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="TextoFocusAction" x="1051" y="-52">		<text>protected class TextoFocusAction extends FocusAdapter{
//TEXTO
	private JTextComponent texto;
//MAIN
	public TextoFocusAction(JTextComponent texto);
//FUNCS
	public void focusGained(FocusEvent f);
	public void focusLost(FocusEvent f);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="TextoKeyAction" x="1051" y="-50">		<text>protected class TextoKeyAction extends KeyAdapter{
//LISTA
	private JList lista;
//MAIN
	public TextoKeyAction(JList lista);
//FUNCS
	public void keyPressed(KeyEvent k);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="ListDocumentAction" x="1051" y="-48">		<text>protected class ListDocumentAction implements DocumentListener{
//LISTA
	private JList lista;
//MAIN
	public ListDocumentAction(JList lista);
//FUNCS
	public void insertUpdate(DocumentEvent d);
	public void removeUpdate(DocumentEvent d);
	public void changedUpdate(DocumentEvent d);
	private void update(DocumentEvent d);
	public class ListSelector implements Runnable{
	//INDEX
		private int index;
	//MAIN
		public ListSelector(int index);
	//FUNCS
		public void run();
	}
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="Tipo" x="787" y="240">		<text>public enum Tipo{
	LOCAL,
	TITULO,
	TEXTO,
	COR,
	BORDA,
	GROSSURA,
	ICONE,
	OBJETO;
	public boolean is(UndoRedoNodo.Tipo... tipos);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="Modo" x="775" y="244">		<text>public enum Modo{
	ADD,
	DEL;
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="Modo" x="795" y="228">		<text>public enum Modo{
	ADD,
	DEL;
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="State" x="800" y="-28">		<text>private class State{
	private Action mousePressed;
		public Action getMousePressedAction();
		public void setMousePressedAction(Action action);
	private Action mouseReleased;
		public Action getMouseReleasedAction();
		public void setMouseReleasedAction(Action action);
	private Action mouseCliqued;
		public Action getMouseCliquedAction();
		public void setMouseCliquedAction(Action action);
	private Action mouseDragged;
		public Action getMouseDraggedAction();
		public void setMouseDraggedAction(Action action);
	private Action mouseMoved;
		public Action getMouseMovedAction();
		public void setMouseMovedAction(Action action);
	private Action keyPressed;
		public Action getKeyPressedAction();
		public void setKeyPressedAction(Action action);
	private Action keyReleased;
		public Action getKeyReleasedAction();
		public void setKeyReleasedAction(Action action):
	private Action created;
		public Action getCreateAction();
		public void setCreateAction(Action action):
	private Action connected;
		public Action getConnectAction();
		public void setConnectAction(Action action);
	private Action deleted;
		public Action getDeleteAction();
		public void setDeleteAction(Action action);
	private Modulo mod;
		public void setModulo(Modulo mod);
		public Modulo getModulo();
	private Conexao cox;
		public void setConexao(Conexao cox);
		public Conexao getConexao();
	private Nodulo nod;
		public void setNodulo(Nodulo nod);
		public Nodulo getNodulo();
	private Segmento seg;
		public void setSegmento(Segmento seg);
		public Segmento getSegmento();
	private Action action;
		public void setAction(Action action);
		public Action getAction();
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="Action" x="800" y="-25">		<text>private abstract class Action{
	public void run();
	public void run(MouseEvent m);
	public void run(KeyEvent k);
}</text>	</mod>	<mod border="0" color="009900" icons="" title="Menu" x="1134" y="-66">		<text>+ Menu:

</text>	</mod>	<mod border="0" color="00C817" icons="" title="Arquivo" x="1139" y="-64">		<text>+ Arquivo:
- Menu do arquivo .mind sendo editado.
</text>	</mod>	<mod border="0" color="00C817" icons="" title="Editar" x="1153" y="-64">		<text>+ Editar:
- Menu das ações.
</text>	</mod>	<mod border="0" color="00C817" icons="" title="Módulo" x="1156" y="-55">		<text>+ Módulo:
- Menu das ações nos Módulos.
</text>	</mod>	<mod border="0" color="00C817" icons="" title="Exibir" x="1182" y="-64">		<text>+ Exibir:
- Menu da interface.
</text>	</mod>	<mod border="0" color="00C817" icons="" title="Configurar" x="1201" y="-64">		<text>+ Configurar:
- Menu das configurações do programa.
</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Novo" x="1143" y="-61">		<text>+ Novo:
- Cria um novo arquivo .mind.
- Ctrl-N
	if(salvarAntes()){
		novo(choose("Novo"));
		abrir(link);
	}
</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Abrir..." x="1143" y="-59">		<text>+ Abrir...:
- Abre um arquivo .mind.
- Ctrl-A
	if(salvarAntes()){
		abrir(choose("Abrir"));
	}</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Salvar" x="1143" y="-55">		<text>+ Salvar:
- Salva um arquivo .mind.
- Ctrl-S
	tree.getTexto().setEnabled(false);
	if(link==null)novo(choose("Salvar"));
	salvar(link);
	tree.getTexto().setEnabled(true);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Salvar Como..." x="1143" y="-53">		<text>+ Salvar Como...:
- Salva um novo arquivo .mind.
- Ctrl+Shift-S
	novo(choose("Salvar Como"));</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Sair" x="1143" y="-45">		<text>+ Sair:
- Fecha o programa.
- Ctrl-W
	if(salvarAntes())fechar();</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Pesquisar" x="1210" y="-64">		<text>+ Pesquisar:
- Abre o pesquisador de texto.
- Ctrl-F</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Desfazer" x="1156" y="-61">		<text>+ Desfazer:
- Desfaz uma ação.
- Ctrl-Z
	undo();</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Refazer" x="1156" y="-59">		<text>+ Refazer:
- Refaz uma ação.
- Ctrl-Y
	redo();</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Editar Título" x="1159" y="-52">		<text>+ Editar Título:
- Abre o editor de título do Módulo.
- F2
	editTitulo();</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Relacionar" x="1159" y="-50">		<text>+ Relacionar:
- Inicia o modo de relacionar Módulos.
- Ctrl-R
	setModo(TO_CONNECT);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Criar Relacionados aos Selecionados" x="1159" y="-46">		<text>+ Criar Relacionados aos Selecionados:
- Cria um Módulo, descendente dos selecionados.
- Ctrl+Alt-G
	createModRelacionado();</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Relacionar Selecionados" x="1159" y="-44">		<text>+ Relacionar Selecionados:
- Inicia uma relação, relacionando os selecionados.
- Ctrl+Alt-R
	startRelation();</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Excluir Selecionados" x="1159" y="-42">		<text>+ Excluir Selecionados:
- Exclui os Módulos selecionados.
- Ctrl+Alt-D
	deleteMods();</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Selecionar Sem Antecedentes" x="1159" y="-38">		<text>+ Selecionar Sem Antecedentes:
- Seleciona todos os Módulos sem pais.
- Ctrl-P
	selectModSemPai();</text>	</mod>	<mod border="0" color="00C817" icons="" title="------" x="1143" y="-57">		<text/>	</mod>	<mod border="0" color="00C817" icons="" title="------" x="1143" y="-47">		<text/>	</mod>	<mod border="0" color="00C817" icons="" title="------" x="1156" y="-57">		<text/>	</mod>	<mod border="0" color="00C817" icons="" title="------" x="1159" y="-48">		<text/>	</mod>	<mod border="0" color="00C817" icons="" title="------" x="1159" y="-40">		<text/>	</mod>	<mod border="0" color="00C817" icons="" title="------" x="1156" y="-6">		<text/>	</mod>	<mod border="0" color="00FF00" icons="" title="Criar" x="1156" y="-31">		<text>+ Criar:
- Inicia o modo de criar Objetos.
- Ctrl-G
	setModo(TO_CREATE);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Deletar" x="1156" y="-29">		<text>+ Deletar:
- Inicia o modo de deletar Objetos.
- Ctrl-D
	setModo(TO_DELETE);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Recortar" x="1156" y="-4">		<text>+ Recortar:
- Recorta Objetos selecionados.
- Ctrl-X
	cut();</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Copiar" x="1156" y="-2">		<text>+ Copiar:
- Copia Objetos selecionados.
- Ctrl-C
	copy();</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Colar" x="1156" y="2">		<text>+ Colar:
- Cola Objetos da área de transferência.
- Ctrl-V
	paste();</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Excluir" x="1156" y="4">		<text>+ Excluir:
- Deleta Objetos selecionados.
- Excluir
	delete();</text>	</mod>	<mod border="0" color="00C817" icons="" title="------" x="1156" y="6">		<text/>	</mod>	<mod border="0" color="00FF00" icons="" title="Selecionar Tudo" x="1156" y="8">		<text>+ Selecionar Tudo:
- Seleciona todos os Objetos.
- Ctrl-A
	selectAll();</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Deselecionar Tudo" x="1156" y="10">		<text>+ Deselecionar Tudo:
- Deseleciona todos os Objetos.
- Escape
	unSelectAll();</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Selecionar Descendentes" x="1156" y="12">		<text>+ Selecionar Descendentes:
- Seleciona os descendentes imediatos dos objetos.
- Shift
	selectSons();</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Inverter Seleção" x="1156" y="14">		<text>+ Inverter Seleção:
- Deseleciona os selecionados e seleciona todos os outros.
- Ctrl-I
	invertSelection();</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Tela Cheia" x="1185" y="-61">		<text>+ Tela Cheia:
- Muda o modo fullscreen.
- F11
	fullscreen(fullscreen.isPressed());
	if(fullscreen.isPressed()){
		isToSeparateText=separateText.isPressed();
		separateText.setToggle(true);
	}else{
		separateText.setToggle(isToSeparateText);
	}
	separateText.setEnabled(!fullscreen.isPressed());</text>	</mod>	<mod border="0" color="00C817" icons="" title="Zoom" x="1185" y="-59">		<text>+ Zoom:
- Menu do zoom.</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Aumentar" x="1188" y="-56">		<text>+ Aumentar:
- Aumenta o zoom com foco no centro.
- Ctrl-Igual
	zoom(1);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Diminuir" x="1188" y="-54">		<text>+ Diminuir:
- Diminúi o zoom com desfoco no centro.
- Ctrl-Menos
	zoom(-1);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Restaurar Para Padrão" x="1188" y="-43">		<text>+ Restaurar Para Padrão:
- Restaura o zoom para o valor inicial padrão.
- Ctrl-0
	zoom(8-UNIT);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Centralizar Câmera" x="1185" y="-39">		<text>+ Centralizar Câmera:
- Centraliza a tela nos Objetos selecionados ou no Mestre.
- Ctrl-E
	centralizar();</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Quebra Automática de Linha" x="1185" y="-35">		<text>+ Quebra Automática de Linha:
- Quebra a linha no editor de texto.
- Ctrl-Q</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Mostrar Caracteres Escondidos" x="1185" y="-33">		<text>+ Mostrar Caracteres Escondidos:
- Mostra caractéres invisíveis no editor de texto.
- Ctrl-M</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Separar Janela de Texto" x="1185" y="-31">		<text>+ Separar Janela de Texto:
- Separa a janela do editor de texto em uma independente.
- Ctrl-L</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Auto-Focar Janela de Texto" x="1185" y="-29">		<text>+ Auto-Focar Janela de Texto:
- Auto-Foca na janela que estiver abaixo do cursor.</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Mostrar Grade" x="1185" y="-25">		<text>+ Mostrar Grade:
- Mostra a grade onde os Módulos e Nódulos são fixos.</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Fonte" x="1206" y="-61">		<text>+ Fonte:
- Abre um selecionador de fontes.</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Limite de Objetos..." x="1206" y="-53">		<text>+ Limite de Objetos...:
- Abre um selecionador de números de objetos.</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Limite de Desfazer/Refazer..." x="1206" y="-51">		<text>+ Limite de Desfazer/Refazer...:
- Abre um selecionador de números de undo/redo.</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Salvar Configurações" x="1206" y="-47">		<text>+ Salvar Configurações:
- Salva as configurações em um arquivo .ini.</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Restaurar Para Padrão" x="1206" y="-45">		<text>+ Restaurar Para Padrão:
- Deleta o arquivo .ini.</text>	</mod>	<mod border="0" color="00C817" icons="" title="------" x="1185" y="-27">		<text/>	</mod>	<mod border="0" color="00C817" icons="" title="------" x="1185" y="-37">		<text/>	</mod>	<mod border="0" color="00C817" icons="" title="------" x="1185" y="-41">		<text/>	</mod>	<mod border="0" color="00C817" icons="" title="------" x="1206" y="-49">		<text/>	</mod>	<mod border="0" color="00C817" icons="" title="------" x="1206" y="-59">		<text/>	</mod>	<mod border="0" color="009900" icons="" title="Toolbox" x="839" y="78">		<text/>	</mod>	<mod border="0" color="00C817" icons="" title="Tree" x="847" y="63">		<text/>	</mod>	<mod border="0" color="00C817" icons="" title="Modulo" x="847" y="69">		<text/>	</mod>	<mod border="0" color="00C817" icons="" title="Conexao" x="846" y="87">		<text/>	</mod>	<mod border="0" color="00C817" icons="" title="Nodulo" x="847" y="99">		<text/>	</mod>	<mod border="0" color="00FF00" icons="" title="Novo Módulo" x="850" y="66">		<text>+ Novo Módulo:
- Cria novo mod no local.
	newMod=createMod(mouse);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Icones" x="850" y="72">		<text>+ Icones:
- Adiciona/Deleta icones dos mods.</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Cores" x="850" y="74">		<text>+ Cores:
- Muda a cor dos mods.</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Bordas" x="850" y="76">		<text>+ Bordas:
- Muda a borda dos mods.</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Editar Título" x="850" y="78">		<text>+ Editar Título:
- Muda o título do mod.
	editTitulo();</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Novo Relacionado" x="850" y="80">		<text>+ Novo Relacionado:
- Cria novo mod, ligado ao mod atual.
	newMod=createModRelacionado(mouse,modsSelec);
	setState(MOVE+TO_CREATE,newMod);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Nova Relação" x="850" y="82">		<text>+ Nova Relação:
- Começa novo cox, ligado no mod.
	Ghost.setLocal(mouse);
	relateToGhost(modsSelec);
	setState(MOVE+TO_CONNECT);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Deletar" x="850" y="84">		<text>+ Deletar:
- Deleta mod.
	delete();</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Bordas" x="850" y="90">		<text>+ Bordas:
- Muda a borda dos coxs.</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Novo Nodo" x="850" y="94">		<text>+ Novo Nodo:
- Cria novo nodo no meio do Cox.
	if(obj!=SEGMENTO)return;
	createNod((Segmento)obj,local,true);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Deletar" x="850" y="96">		<text>+ Deletar:
- Deleta cox.
	delete();</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Deletar" x="850" y="102">		<text>+ Deletar:
- Deleta nod.
	delete();</text>	</mod>	<mod border="0" color="0000FF" icons="" title="Modulo&#10;States" x="645" y="-17">		<text>+ Modulo States:
- UNSELECTED		Cor normal.
- SELECTED			Cor invertida. Borda branca.
- HIGHLIGHTED		Cor mais brilhante/escura.
- TO_BE_CREATOR	Cor verde. Borda verde.
- TO_BE_SON		Cor amarela. Borda amarela.
- TO_BE_PAI		Cor azul. Borda azul.
- TO_BE_DELETED	Cor vermelha. Borda vermelha.</text>	</mod>	<mod border="0" color="0000FF" icons="" title="Segmento&#10;States" x="682" y="77">		<text>+ Segmento States:
- UNSELECTED		Vazio.
- TO_BE_CREATOR	Borda verde.</text>	</mod>	<mod border="0" color="0000FF" icons="" title="Nodulo&#10;States" x="652" y="50">		<text>+ Nodulo States:
- UNSELECTED		Cor normal.
- SELECTED			Cor invertida. Borda branca.
- HIGHLIGHTED		Cor mais brilhante/escura ou invertida.
- TO_BE_CREATOR	Cor verde. Borda verde.
- TO_BE_DELETED	Cor vermelha. Borda vermelha.</text>	</mod>	<mod border="0" color="0000FF" icons="" title="Conexao&#10;States" x="627" y="20">		<text>+ Conexao States:
- UNSELECTED		Cor normal.
- SELECTED			Cor invertida. Borda branca.
- HIGHLIGHTED		Cor mais brilhante/escura ou invertida.
- TO_BE_CREATOR	Cor verde. Borda verde.
- TO_BE_DELETED	Cor vermelha. Borda vermelha.</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="UNSELECTED" x="643" y="-8">		<text/>	</mod>	<mod border="0" color="00C81B" icons="" title="TO_BE_CREATOR" x="622" y="-14">		<text/>	</mod>	<mod border="0" color="FFFF00" icons="" title="TO_BE_SON" x="622" y="-7">		<text/>	</mod>	<mod border="0" color="0099CC" icons="" title="TO_BE_PAI" x="622" y="0">		<text/>	</mod>	<mod border="0" color="29CCFF" icons="" title="set(TO_BE_CREATOR)" x="641" y="1">		<text>+ set(TO_BE_CREATOR):
- Ativado por input.
	state=TO_BE_CREATOR;</text>	</mod>	<mod border="0" color="29CCFF" icons="" title="set(UNSELECTED)" x="622" y="-11">		<text>+ set(UNSELECTED):
- Ativado por input.
	state=UNSELECTED;</text>	</mod>	<mod border="0" color="29CCFF" icons="" title="set(TO_BE_SON)" x="642" y="4">		<text>+ set(TO_BE_SON):
- Ativado por input.
	state=TO_BE_SON;</text>	</mod>	<mod border="0" color="29CCFF" icons="" title="set(UNSELECTED)" x="620" y="-4">		<text>+ set(UNSELECTED):
- Ativado por input.
	state=UNSELECTED;</text>	</mod>	<mod border="0" color="29CCFF" icons="" title="set(TO_BE_PAI)" x="642" y="7">		<text>+ set(TO_BE_PAI):
- Ativado por input.
	state=TO_BE_PAI;</text>	</mod>	<mod border="0" color="29CCFF" icons="" title="set(UNSELECTED)" x="620" y="3">		<text>+ set(UNSELECTED):
- Ativado por input.
	state=UNSELECTED;</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="set(SELECTED)" x="642" y="-5">		<text>+ set(SELECTED):
- Ativado por input
	state=SELECTED;
	for(cox:coxs)cox.setState(HIGHLIGHTED);</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="SELECTED" x="660" y="-12">		<text/>	</mod>	<mod border="0" color="33CCFF" icons="" title="set(UNSELECTED)" x="658" y="-9">		<text>+ set(UNSELECTED):
- Ativado por input.
		//Se há algum cox SELECTED, o mod deve ser HIGHLIGHTED.
	for(cox:coxs)if(cox==SELECTED){
		state=HIGHLIGHTED;
		break;
	}
	if(SELECTED)state=UNSELECTED;	//Deseleciona
		//Apenas se o cox for HIGHLIGHTED, ele é UNSELECTED.
	for(cox:coxs)if(cox==HIGHLIGHTED)cox.setState(UNSELECTED);
		//Se ainda há algum cox HIGHLIGHTED, o mod deve ser HIGHLIGHTED.
	if(!UNSELECTED)for(cox:coxs)if(cox==HIGHLIGHTED){
		state=HIGHLIGHTED;
		break;
	}</text>	</mod>	<mod border="0" color="F2F2F2" icons="" title="HIGHLIGHTED" x="659" y="-1">		<text/>	</mod>	<mod border="0" color="33CCFF" icons="" title="set(SELECTED)" x="625" y="30">		<text>+ set(SELECTED):
- Ativado por input.
- case(UNSELECTED|HIGHLIGHTED):
	state=SELECTED;
	for(nod:nods)nod.setState(HIGHLIGHTED);
	pai.setState(HIGHLIGHTED);
	son.setState(HIGHLIGHTED);</text>	</mod>	<mod border="1" color="29CCFF" icons="" title="set(HIGHLIGHTED)" x="642" y="-2">		<text>+ set(HIGHLIGHTED):
	state=HIGHLIGHTED;</text>	</mod>	<mod border="1" color="29CCFF" icons="" title="set(HIGHLIGHTED)" x="625" y="33">		<text>+ set(HIGHLIGHTED):
	state=HIGHLIGHTED;
	for(nod:nods)nod.setState(HIGHLIGHTED);
	pai.setState(HIGHLIGHTED);
	son.setState(HIGHLIGHTED);</text>	</mod>	<mod border="1" color="29CCFF" icons="" title="set(HIGHLIGHTED)" x="658" y="5">		<text>+ set(HIGHLIGHTED):
	state=UNSELECTED;
		//Se há algum cox SELECTED ou HIGHLIGHTED, o mod deve ser HIGHLIGHTED.
	for(cox:coxs)if(cox==(SELECTED|HIGHLIGHTED)){
		state=HIGHLIGHTED;
		break;
	}</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="SELECTED" x="644" y="22">		<text/>	</mod>	<mod border="0" color="F2F2F2" icons="" title="HIGHLIGHTED" x="643" y="31">		<text/>	</mod>	<mod border="0" color="33CCFF" icons="" title="set(UNSELECTED)" x="642" y="25">		<text>+ set(UNSELECTED):
- Ativado por input.
		//Se um dos mods estiver SELECTED, o cox é HIGHLIGHTED.
	if(son==SELECTED|pai==SELECTED){
		state=HIGHLIGHTED;
		for(nod:nods)nod.setState(HIGHLIGHTED);
		pai.setState(HIGHLIGHTED);
		son.setState(HIGHLIGHTED);
	}else{
		state=UNSELECTED;
			//Apenas se forem HIGHLIGHTED, eles são UNSELECTED.
		for(nod:nods)if(nod==HIGHLIGHTED)nod.setState(UNSELECTED);
		if(pai==HIGHLIGHTED)pai.setState(UNSELECTED);
		if(son==HIGHLIGHTED)son.setState(UNSELECTED);
	}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="UNSELECTED" x="626" y="27">		<text/>	</mod>	<mod border="1" color="29CCFF" icons="" title="set(UNSELECTED)" x="642" y="34">		<text>+ set(UNSELECTED):
	state=UNSELECTED;
		//Se um dos mods estiver SELECTED, o cox é HIGHLIGHTED.
	if(pai==SELECTED|son==SELECTED)state=HIGHLIGHTED;
		//Se um dos nods estiver SELECTED, o cox é HIGHLIGHTED.
	if(UNSELECTED)for(nod:nods)if(NOD==SELECTED){
		state=HIGHLIGHTED;
		break;
	}
	if(UNSELECTED){	//Nenhum dos mods e nods está SELECTED
		for(nod:nods)nod.setState(UNSELECTED);
		pai.set(UNSELECTED);
		son.set(UNSELECTED);
	}else{				//Algum dos mods e nods está SELECTED
		for(nod:nods)nod.setState(HIGHLIGHTED);
		pai.set(HIGHLIGHTED);
		son.set(HIGHLIGHTED);
	}</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="set(SELECTED)" x="666" y="70">		<text>+ set(SELECTED):
- Ativado por input.
	state=SELECTED;
	cox.setState(HIGHLIGHTED);</text>	</mod>	<mod border="1" color="29CCFF" icons="" title="set(HIGHLIGHTED)" x="649" y="64">		<text>+ set(HIGHLIGHTED):
	state=HIGHLIGHTED;</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="SELECTED" x="668" y="54">		<text/>	</mod>	<mod border="0" color="F2F2F2" icons="" title="HIGHLIGHTED" x="667" y="64">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="" title="UNSELECTED" x="650" y="58">		<text/>	</mod>	<mod border="0" color="33CCFF" icons="" title="set(TO_BE_DELETED)" x="621" y="10">		<text>+ set(TO_BE_DELETED):
- Ativado por input.
	state=UNSELECTED;
	for(cox:coxs)cox.setState(UNSELECTED);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="set(UNSELECTED)" x="610" y="36">		<text>+ set(UNSELECTED):
- Ativado por input.
	if(pai==TO_BE_DELETED|son==TO_BE_DELETED)return;
	state=UNSELECTED;
	for(nod:nods)nod.setState(UNSELECTED);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="set(UNSELECTED)" x="666" y="57">		<text>+ set(UNSELECTED):
- Ativado por input.
	if(cox==SELECTED){
		state=HIGHLIGHTED;
	}else{
		state=UNSELECTED;
			//Apenas se o cox for HIGHLIGHTED, ele é UNSELECTED.
		if(cox==HIGHLIGHTED)cox.setState(UNSELECTED);
			//Se cox continua HIGHLIGHTED, ele é HIGHLIGHTED junto.
		if(cox==HIGHLIGHTED)state=HIGHLIGHTED;
	}</text>	</mod>	<mod border="1" color="29CCFF" icons="" title="set(UNSELECTED)" x="666" y="67">		<text>+ set(UNSELECTED):
	if(cox!=(SELECTED|HIGHLIGHTED)){
		state=UNSELECTED;
	}</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="set(TO_BE_DELETED)" x="641" y="10">		<text>+ set(TO_BE_DELETED):
- Ativado por input.
	if(this==MESTRE)return;	//Mestre não pode ser TO_BE_DELETED
	state=TO_BE_DELETED;
	for(cox:coxs)cox.setState(TO_BE_DELETED);</text>	</mod>	<mod border="0" color="FF0000" icons="" title="TO_BE_DELETED" x="622" y="7">		<text/>	</mod>	<mod border="0" color="33CCFF" icons="" title="set(TO_BE_DELETED)" x="624" y="39">		<text>+ set(TO_BE_DELETED):
- Ativado por input.
	state=TO_BE_DELETED;
	for(nod:nods)nod.setState(TO_BE_DELETED);</text>	</mod>	<mod border="0" color="FF0000" icons="" title="TO_BE_DELETED" x="610" y="33">		<text/>	</mod>	<mod border="0" color="33CCFF" icons="" title="set(TO_BE_DELETED)" x="648" y="70">		<text>+ set(TO_BE_DELETED):
- Ativado por input.
	state=TO_BE_DELETED;</text>	</mod>	<mod border="0" color="FF0000" icons="" title="TO_BE_DELETED" x="633" y="64">		<text/>	</mod>	<mod border="0" color="33CCFF" icons="" title="set(UNSELECTED)" x="633" y="67">		<text>+ set(UNSELECTED):
- Ativado por input.
	if(cox==TO_BE_DELETED)return;
	state=UNSELECTED;</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="set(UNSELECTED)" x="610" y="26">		<text>+ set(UNSELECTED):
- Ativado por input.
	state=UNSELECTED;
	for(nod:nods)nod.setState(UNSELECTED);
	for(seg:segs)nod.setState(UNSELECTED);</text>	</mod>	<mod border="1" color="0099CC" icons="" title="set(UNSELECTED)" x="633" y="57">		<text>+ set(UNSELECTED):
	state=UNSELECTED;</text>	</mod>	<mod border="1" color="29CCFF" icons="" title="set(UNSELECTED)" x="666" y="84">		<text>+ set(UNSELECTED):
	state=UNSELECTED;</text>	</mod>	<mod border="1" color="29CCFF" icons="" title="set(TO_BE_CREATOR)" x="624" y="36">		<text>+ set(TO_BE_CREATOR):
	state=TO_BE_CREATOR;
	for(nod:nods)nod.setState(TO_BE_CREATOR);</text>	</mod>	<mod border="1" color="29CCFF" icons="" title="set(TO_BE_CREATOR)" x="648" y="67">		<text>+ set(TO_BE_CREATOR):
	state=TO_BE_CREATOR;</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="UNSELECTED" x="681" y="85">		<text/>	</mod>	<mod border="0" color="33CCFF" icons="" title="set(TO_BE_CREATOR)" x="679" y="88">		<text>+ set(TO_BE_CREATOR):
- Ativado por input.
	state=TO_BE_CREATOR;
	cox=TO_BE_CREATOR;</text>	</mod>	<mod border="0" color="00C81B" icons="" title="TO_BE_CREATOR" x="610" y="23">		<text/>	</mod>	<mod border="0" color="00C81B" icons="" title="TO_BE_CREATOR" x="633" y="54">		<text/>	</mod>	<mod border="0" color="00C81B" icons="" title="TO_BE_CREATOR" x="666" y="81">		<text/>	</mod>	<mod border="0" color="33CCFF" icons="" title="set(SELECTED)" x="658" y="2">		<text>+ set(SELECTED):
- Ativado por input
	state=SELECTED;
	for(cox:coxs)cox.setState(HIGHLIGHTED);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="set(SELECTED)" x="642" y="37">		<text>+ set(SELECTED):
- Ativado por input.
	state=SELECTED;
	for(nod:nods)nod.setState(HIGHLIGHTED);
	pai.setState(HIGHLIGHTED);
	son.setState(HIGHLIGHTED);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="set(SELECTED)" x="649" y="61">		<text>+ set(SELECTED):
- Ativado por input.
	state=SELECTED;
	cox.setState(HIGHLIGHTED);</text>	</mod>	<mod border="0" color="0000FF" icons="" title="Cursor States" x="777" y="-65">		<text>+ Cursor States:
- NORMAL				Seta.
- SELECT				Seta branca.
- AUTODRAG			Setas grandes juntas em um +

- MOVE				Setas abaixo.
- CREATE				+ verde abaixo.
- DELETE				X vermelho abaixo.
- SON					Uma conexão com um dos mods amarelo abaixo.
- PAI					Uma conexão com um dos mods azul abaixo.
- EDIT_TITLE		Um T abaixo.

- AREA_SELECT		Uma área branca abaixo.
- AREA_CREATE		Uma área verde abaixo.
- AREA_DELETE		Uma área vermelha abaixo.
- AREA_SON			Uma área amarela abaixo.
- AREA_PAI			Uma área azul abaixo.

- DRAG				Setas no lado.
</text>	</mod>	<mod border="0" color="0000FF" icons="" title="Selecao States" x="785" y="-53">		<text>+ Selecao States:
- TO_SELECT		Cor branca. Borda branca.
- TO_CREATE		Cor verde. Borda verde.
- TO_CREATE_SON	Cor amarela. Borda amarela.
- TO_CREATE_PAI	Cor azul. Borda azul.
- TO_DELETE		Cor vermelha. Borda vermelha.</text>	</mod>	<mod border="0" color="0000FF" icons="" title="Actions&#10;States" x="985" y="229">		<text/>	</mod>	<mod border="0" color="646464" icons="" title="Ordem" x="992" y="229">		<text>+ Ordem:
- NORMAL
. MIDDLE+DRAG_ALL
	-LEFT+WAITING1+NORMAL
	. DRAG_ALL+LEFT+WAITING1+NORMAL
		- SELECT_AREA
		. DRAG_ALL+SELECT_AREA
	- LEFT+WAITING2+NORMAL
	. DRAG_ALL+LEFT+WAITING2+NORMAL
		- DRAG
		. DRAG_ALL+DRAG
	- EDIT_TITLE
	. DRAG_ALL+EDIT_TITLE
	- RIGHT+WAITING1+NORMAL
	. RIGHT+DRAG_ALL
- TO_CREATE
. DRAG_ALL+TO_CREATE
	- WAITING1+TO_CREATE
	. DRAG_ALL+WAITING1+TO_CREATE
		- SELECT_AREA+TO_CREATE
		. DRAG_ALL+SELECT_AREA+TO_CREATE
	- WAITING2+TO_CREATE
	. DRAG_ALL+WAITING2+TO_CREATE
		- DRAG+TO_CREATE
		. DRAG_ALL+DRAG+TO_CREATE
	- MOVE+TO_CREATE
	. DRAG_ALL+MOVE+TO_CREATE
		- SELECT_AREA+MOVE+TO_CREATE
		. DRAG_ALL+SELECT_AREA+MOVE+TO_CREATE
- TO_CONNECT_SON
. DRAG_ALL+TO_CONNECT_SON
	- WAITING1+TO_CONNECT_SON
	. DRAG_ALL+WAITING1+TO_CONNECT_SON
		- SELECT_AREA+TO_CONNECT_SON
		. DRAG_ALL+SELECT_AREA+TO_CONNECT_SON
	- WAITING2+TO_CONNECT_SON
	. DRAG_ALL+WAITING2+TO_CONNECT_SON
- MOVE+TO_CONNECT_PAI
. DRAG_ALL+MOVE+TO_CONNECT_PAI
	- WAITING1+TO_CONNECT_PAI
		- SELECT_AREA+TO_CONNECT_PAI
		. DRAG_ALL+SELECT_AREA+TO_CONNECT_PAI
		- DRAG+TO_CONNECT_PAI
		. DRAG_ALL+DRAG+TO_CONNECT_PAI
- TO_DELETE
. DRAG_ALL+TO_DELETE
	- WAITING1+TO_DELETE
	. DRAG_ALL+WAITING1+TO_DELETE
		- SELECT_AREA+TO_DELETE
		. DRAG_ALL+SELECT_AREA+TO_DELETE
</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="[0-9]" x="995" y="240">		<text>+ [0-9]:
- NORMAL
- TO_CREATE
- TO_CONNECT
- TO_DELETE
- EDIT_TITLE</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="[0-9]0" x="995" y="238">		<text>+ [0-9]0:
- DRAG
- MOVE
- SELECT_AREA</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="[0-9]00" x="995" y="236">		<text>+ [0-9]00:
- WAITING1
- WAITING2
- WAITING3</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="[0-9]000" x="995" y="234">		<text>+ [0-9]000:
- LEFT
- MIDDLE
- RIGHT</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="[0-9]0000" x="995" y="232">		<text>+ [0-9]0000:
- DRAG_ALL
- AUTO_DRAG_ALL</text>	</mod>	<mod border="0" color="0000FF" icons="" title="Funções" x="1026" y="26">		<text>* Funções:

+ getObj(mouse):
	objHover=null;
	if(objHover==null)for(mod:modsVisi){
		if(mod.contains(mouse)&amp;&amp;mod!=Ghost)objHover=mod;
	}
	if(objHover==null)for(nod:nodsVisi){
		if(nod.contains(mouse))objHover=nod;
	}
	if(objHover==null)for(cox:coxsVisi){
		if(cox.contains(mouse))objHover=cox;
	}
	return objHover;

+ getMod(mouse,...modsToIgnore):
	modHover=null;
	for(mod:modsVisi){
		toIgnore=false;
		if(modsToIgnore&gt;0)for(modToIgnore:modsToIgnore){
			if(mod==modToIgnore){
				toIgnore=true;
				break;
			}
		}
		if(toIgnore||mod==Ghost)continue;
		if(mod.contains(mouse))modHover=mod;
	}
	return modHover;

+ getCox(mouse):
	coxHover=null;
	for(cox:coxsVisi){
		if(cox.contains(mouse))coxHover=cox;
	}
	return coxHover;

+ getNod(mouse):
	nodHover=null;
	for(nod:nodsVisi){
		if(nod.contains(mouse))nodHover=nod;
	}
	return nodHover;
</text>	</mod>	<mod border="0" color="0099CC" icons="" title="zoom(zoom)" x="1079" y="46">		<text>+ zoom(zoom):
- Muda o zoom com foco no centro.
</text>	</mod>	<mod border="0" color="0099CC" icons="" title="setModo(modo)" x="1044" y="32">		<text>+ setModo(modo):
- Muda o modo em que os objs são tratados.
	if(titulo.isVisible())return;
	switch(modo){
		case TO_CREATE:
			if(getCreateAction()!=null)getCreateAction().run();
		break;
		case TO_CONNECT:
			if(getConnectAction()!=null)getConnectAction().run();
		break;
		case TO_DELETE:
			if(getDeleteAction()!=null)getDeleteAction().run();
		break;
	}</text>	</mod>	<mod border="0" color="0099CC" icons="" title="createModRelacionado()" x="1057" y="21">		<text>+ createModRelacionado():
- Cria um Módulo, descendente dos selecionados.
	if(titulo.isVisible())return;
	deleteGhostCoxs();
	selecao.setEmpty();
	</text>	</mod>	<mod border="0" color="0099CC" icons="" title="startRelation()" x="1057" y="26">		<text>+ startRelation():
- Inicia uma relação, relacionando os selecionados.
	if(titulo.isVisible())return;
	deleteGhostCoxs();
	selecao.setEmpty();
	Ghost.setLocal(mouse);			//Muda o X e Y do Ghost de acordo com o mouse
	relateToGhost(modsSelec);
	unSelectAll();
	draw();</text>	</mod>	<mod border="0" color="0099CC" icons="" title="deleteMods()" x="1057" y="29">		<text>+ deleteMods():
- Exclui os Módulos selecionados.
	if(titulo.isVisible())return;
	deleteGhostCoxs();
	selecao.setEmpty();
	unSelect(Mestre);
	if(modsSelec==0)return;
	selectedMods=new List&lt;Objeto&gt;(modsSelec);
	unSelectAll();
	for(mod:selectedMods){
		select(mod);
		for(cox:mod.coxs){
			select(cox);
		}
	}
	delete();</text>	</mod>	<mod border="0" color="0099CC" icons="" title="editTitulo()" x="1057" y="18">		<text>+ editTitulo():
- Abre o editor de título do Módulo.
- Muda o State de NORMAL para EDIT_TITLE.
	if(!NORMAL)return;
	if(modsSelec!=1)return;
	setTitulo(modsSelec(0));
	setState(EDIT_TITLE);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="unSelectAll()" x="1066" y="73">		<text>+ unSelectAll():
- Deseleciona todos os Objetos.
	if(titulo.isVisible()){
		setTitulo(null);
	}
	unSelectAll();
	resetState();</text>	</mod>	<mod border="8" color="0099CC" icons="" title="delete()" x="1075" y="67">		<text>+ delete():
- Deleta Objetos selecionados.
	if(titulo.isVisible())return;
	unSelect(Mestre);
	if(objsSelec==0)return;
	for(cox:coxsSelec){
		for(nod:cox.nods){
			select(nod);
		}
	}
	for(mod:modsSelec){
		for(cox:mod.coxs){
			select(cox);
		}
	}
	oldObjs=new List&lt;Objeto&gt;(objsSelec);
	while(objsSelec&gt;0)del(objsSelec(0));
	addUndo(oldObjs,ADD);
	resetState();</text>	</mod>	<mod border="0" color="0099CC" icons="" title="selectSons()" x="1066" y="75">		<text>+ selectSons():
- Seleciona os descendentes imediatos dos objetos.
	if(titulo.isVisible())return;
	List&lt;Objeto&gt;objs=new List&lt;&gt;();
	objs.addAll(modsSelec);
	objs.addAll(coxsSelec);
	for(obj:objs)selectTree(obj);
	resetState();</text>	</mod>	<mod border="0" color="0099CC" icons="" title="resetState()" x="1039" y="58">		<text>+ resetState():
	deleteGhostCoxs();
	selecao.setEmpty();
	if(stateContains(TO_CREATE)){
		if([mod]){
			addUndoable([mod],false);
		}else if([nod]){
			addUndoable([nod],false);
		}
	}
	draw();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="centralizar()" x="1079" y="48">		<text>+ centralizar():
- Centraliza a tela nos Objetos selecionados ou no Mestre.
	if(titulo.isVisible())return;
	oldLocal=tree.getLocal();
	if(objsSelec==0){
		setFocusOn(Mestre);
	}else{
		setFocusOn(objsSelec);
	}
	animate(oldLocal,tree.getLocal())
	resetState();</text>	</mod>	<mod border="0" color="0099CC" icons="" title="selectAll()" x="1066" y="71">		<text>+ selectAll():
- Seleciona todos os Objetos.
	if(titulo.isVisible())return;
	selectAll();
	resetState();</text>	</mod>	<mod border="0" color="0099CC" icons="" title="undo()" x="1075" y="54">		<text>+ undo():
- Desfaz uma ação.
	if(titulo.isVisible())return;
	unSelectAll();
	undo();
	resetState();</text>	</mod>	<mod border="0" color="0099CC" icons="" title="redo()" x="1075" y="56">		<text>+ redo():
- Refaz uma ação.
	if(titulo.isVisible())return;
	unSelectAll();
	redo();
	resetState();</text>	</mod>	<mod border="0" color="0099CC" icons="" title="cut()" x="1075" y="59">		<text>+ ctrl_X():
- Recorta Objetos selecionados.
	if(titulo.isVisible())return;
	texto=getXML(objsSelec);
	setClipboard(texto);
	delete();</text>	</mod>	<mod border="0" color="0099CC" icons="" title="copy()" x="1075" y="61">		<text>+ copy():
- Copia Objetos selecionados.
	if(titulo.isVisible())return;
	texto=getXML(objsSelec);
	setClipboard(texto);
	resetState();</text>	</mod>	<mod border="8" color="0099CC" icons="" title="paste()" x="1075" y="65">		<text>+ paste():
- Cola Objetos da área de transferência.
- Muda o State para MOVE+NORMAL.
	if(titulo.isVisible())return;
	unSelectAll();
	lista=addTree(getClipboard(),false);
	for(obj:lista)select(obj);
	if(objsSelec==0)return;
	newObjs=new List&lt;Objeto&gt;(objsSelec);
	addUndo(newObjs,DEL);
	setFocusOn(newObjs);
	deleteGhostCoxs();
	selecao.setEmpty();
	if(stateContains(TO_CREATE)){
		if([mod]){
			addUndoable([mod],false);
		}else if([nod]){
			addUndoable([nod],false);
		}
	}
	draw();
	setState(MOVE+NORMAL);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="invertSelection()" x="1066" y="78">		<text>+ invertSelection():
- Deseleciona os selecionados e seleciona todos os outros.
	if(titulo.isVisible())return;
	List&lt;Objeto&gt;objs=new List&lt;&gt;(objsSelec);
	selectAll();
	for(obj:objs)unSelect(obj);
	resetState();</text>	</mod>	<mod border="0" color="0099CC" icons="" title="selectModSemPai()" x="1066" y="81">		<text>+ selectModSemPai():
	if(titulo.isVisible())return;
	List&lt;Objeto&gt;objs=new List&lt;&gt;(objsSelec);
	selectAll();
	for(obj:objs)unSelect(obj);
	resetState();</text>	</mod>	<mod border="0" color="00FFFF" icons="" title="Significados" x="989" y="226">		<text>+ Significados:
- Cores:
. Azul-claro:							State.
. Azul:									Input do usuário.
. Azul-esbotado:						Parte do input.
. Azul-escuro:						Funções.
. Azul-bem-escuro:					Grupo de funções.
- Borda:
. Pontilhado:							É extensão de outro.
. Tracejado:							É chamado por outro.
. Tracejado-longo com 1 ponto:	Executa modificação no arquivo .mind final.</text>	</mod>	<mod border="0" color="646464" icons="" title="Listas de Objetos" x="1021" y="38">		<text>+ Listas de Objetos:
- objsAll.
. modsAll.
. coxsAll.
. nodsAll.
- objsSelec.
. modsSelec.
. coxsSelec.
. nodsSelec.
- modsVisi.
- coxsVisi.
- nodsVisi.</text>	</mod>	<mod border="0" color="646464" icons="" title="Actions" x="978" y="229">		<text>+ Actions:
- mousePressed();
- mouseReleased();
- mouseCliqued();
- mouseDragged();
- mouseMoved();
- keyPressed();
- keyReleased();
- ctrl_G();
- ctrl_R();
- ctrl_D();
</text>	</mod>	<mod border="0" color="0099CC" icons="" title="addUndoable(objs,addToTree)" x="1014" y="45">		<text>+ addUndoable(objs,addToTree):
	allObjs=toList(objs).getAllOrdened();
	for(obj:allObjs)switch(){
		case MODULO:
			mod=obj;
			for(cox:mod.coxs){
				objs.add(cox);
				for(nod:cox.nods)objs.add(nod);
			}
		break;
		case CONEXAO:
			cox=obj;
			for(nod:cox.nods)objs.add(nod);
		break;
		case NODULO:break;
		case SEGMENTO:break;
		if(addToTree)for(obj:allObjs)add(obj);
		reverse(allObjs);
		addUndoObjeto(allObjs,DEL);
	}</text>	</mod>	<mod border="0" color="0099CC" icons="" title="delUndoable(objs)" x="1014" y="48">		<text>+ delUndoable(objs):
	lista=toList(objs);
	for(cox:lista.coxs){
		for(nod:cox.nods)lista.add(nod);
	}
	for(mod:lista.nods){
		for(cox:mod.coxs){
			lista.add(cox);
			for(nod:cox.nods)lista.add(nod);
		}
	}
	objs=lista.getAllOrdenedInverted();
	for(obj:objs)del(obj);
	reverse(objs);
	addUndoObjeto(objs,ADD);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs==0" x="1069" y="28">		<text>+ Ghost.coxs==0:
	setState(NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="Ghost.coxs&gt;0" x="1069" y="25">		<text>+ Ghost.coxs&gt;0:
	setState(MOVE+TO_CONNECT);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="modsSelec==0" x="1073" y="22">		<text>+ modsSelec==0:
	unSelectAll();
	draw();
	setState(NORMAL);</text>	</mod>	<mod border="0" color="A3E7FF" icons="" title="modsSelec&gt;0" x="1073" y="19">		<text>+ modsSelec&gt;0:
	newMod=createModRelacionado(mouse,modsSelec);
	setState(MOVE+TO_CREATE,newMod);	//Envia newMod</text>	</mod>	<mod border="0" color="00C817" icons="" title="Opções" x="1188" y="-52">		<text>+ Opções:
- Menu das opções de zoom.</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Zoom x1" x="1191" y="-49">		<text>+ Zoom x1:
- Muda o zoom com foco no centro com proporção 1:1.
- Ctrl-1
	zoom(8-UNIT);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Zoom x2" x="1191" y="-47">		<text>+ Zoom x2:
- Muda o zoom com foco no centro com proporção 1:2.
- Ctrl-2
	zoom(16-UNIT);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Zoom x3" x="1191" y="-45">		<text>+ Zoom x3:
- Muda o zoom com foco no centro com proporção 1:3.
- Ctrl-3
	zoom(24-UNIT);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="RIGHT" x="1127" y="392">		<text>+ RIGHT:
	savedObjs=new List&lt;Objeto&gt;(objsSelec);
	addUndoable(savedObjs,false);
	unSelectAll();
	draw();
	setState(DRAG_ALL+RIGHT+NORMAL);</text>	</mod>	<mod border="0" color="0099CC" icons="" title="createModRelacionado(x,y,modsPais)" x="1011" y="54">		<text>+ createModRelacionado(x,y,modsPais):
- Cria um mod no local x,y, relacionado aos modsPais.
	newMod=new Modulo(x,y);					//Cria um newMod no local x,y dado
	if(modsPais==1){							//Se houver apenas 1 modPai
		mod=modsPais[0];
		newMod.setCor(mod.getCor());			//newMod recebe cor de modPai
		newMod.setBorda(mod.getBorda());	//newMod recebe borda de modPai
	}
	add(newMod);
	relateMods(modsPais,newMod);
	draw();
	return newMod;</text>	</mod>	<mod border="0" color="0000FF" icons="" title="Repetições" x="1003" y="43">		<text>+ Repetições:
- Funções para ações repetidas.</text>	</mod>	<mod border="0" color="0099CC" icons="" title="createNod(seg,x,y,undoable)" x="1011" y="57">		<text>+ createNod(seg,x,y,undoable):
- Cria um nod em um seg dado, no local x,y.
	index=[seg].cox.getIndex([seg]);
	newNod=new Nodulo([seg].cox,x,y);	//Cria um newNod no local x,y dado
	newNod.setIndexOnCox(index);			//Determina seu index no cox
	if(undoable){
		addUndoable(newNod,true);			//Adiciona e pode ser undo
	}else add(newNod);						//Adiciona apenas
	unSelectAll();							//Deseleciona tudo
	if(!undoable)select(newNod);			//Seleciona newNod
	draw();</text>	</mod>	<mod border="0" color="0099CC" icons="" title="createMod(x,y)" x="1011" y="52">		<text>+ createMod(x,y):
- Cria um mod no local x,y.
	newMod=new Modulo(x,y);	//Cria um newMod no local x,y dado
	addUndoable(newMod,true);	//Adiciona e pode ser undo
	unSelectAll();				//Deseleciona tudo
	select(newMod);				//Seleciona newMod
	draw();
	return newMod;</text>	</mod>	<mod border="0" color="0099CC" icons="" title="setArea(state,addTo,locations...)" x="981" y="52">		<text>+ setArea(state,addTo,locations...):
	allChunksIndexes=null;
	newChunksIndexes=null;
	switch(locations){
		default:
			if(!addTo)switch(state){
				case TO_SELECT:
				case TO_DELETE:	unSelectAll();		break;
				default:				unSelectAllMods();	break;
			}
			selecao.setState(state);					//Muda o state da área
			allChunksIndexes=getChunksIndexes(selecao.getForm());	//Os chunks na área
			newChunksIndexes=allChunksIndexes;
		break;
		case 4:
			if(!addTo)switch(state){
				case TO_SELECT:
				case TO_DELETE:	unSelectAll();		break;
				default:				unSelectAllMods();	break;
			}
			selecao.setState(state);					//Muda o state da área
			selecao.setAncora(locations[0],locations[1]);	//Determina o local com o x1,y1 dado
			selecao.setArea(locations[2],locations[3]);	//Determina o tamanho com o x2,y2 dado
			allChunksIndexes=getChunksIndexes(selecao.getForm());	//Os chunks na área
			newChunksIndexes=allChunksIndexes;
		break;
		case 2:
			areaOld=selecao.getForm();
			selecao.setArea(locations[0],locations[1]);	//Determina o tamanho com o x,y dado
			areaNew=selecao.getForm();
			areaAll=(min(areaOld,areaNew),max(areaOld,areaNew));
			allChunksIndexes=getChunksIndexes(areaAll);	//Os chunks na nova área + antiga área
			newChunksIndexes=getChunksIndexes(areaNew);	//Os chunks na nova área
		break;
	}
	for(chunk:allChunksIndexes){				//Navega apenas pelos chunks visíveis
		if(newChunksIndexes.chunk.isInside()){	//Se chunk é totalmente incluído na área
			for(obj:chunk.objs){				//Os objs são automaticamente selec
				switch(state){
					case TO_SELECT:		select(obj);					break;
					case TO_CREATE:		selectToBeCreator(obj);	break;
					case TO_CREATE_SON:	selectToBeSon(obj);			break;
					case TO_CREATE_PAI:	selectToBePai(obj);			break;
					case TO_DELETE:		selectToBeDeleted(obj);	break;
				}
			}
		}else{
	 		for(mod:chunk.mods){
				if(selecao.inclui(mod)){		//Se selecao inclui mod
					switch(state){
						case TO_SELECT:		select(mod);					break;
						case TO_CREATE:		selectToBeCreator(mod);	break;
						case TO_CREATE_SON:	selectToBeSon(mod);			break;
						case TO_CREATE_PAI:	selectToBePai(mod);			break;
						case TO_DELETE:		selectToBeDeleted(mod);	break;
					}
				}else if(!addTo)unSelect(mod);	//O mod é cinza
			}
	 		for(cox:chunk.coxs){
				if(selecao.inclui(cox)){		//Se selecao inclui cox
					switch(state){
						case TO_SELECT:		select(cox);					break;
						case TO_CREATE:		break;
						case TO_CREATE_SON:	break;
						case TO_CREATE_PAI:	break;
						case TO_DELETE:		selectToBeDeleted(cox);	break;
					}
				}else if(!addTo)switch(state){
					case TO_SELECT:
					case TO_DELETE:	unSelect(cox);	break;
					default:				break;
				}
			}
	 		for(nod:chunk.nods){
				if(selecao.inclui(nod)){		//Se selecao inclui nod
					switch(state){
						case TO_SELECT:		select(nod);					break;
						case TO_CREATE:		break;
						case TO_CREATE_SON:	break;
						case TO_CREATE_PAI:	break;
						case TO_DELETE:		selectToBeDeleted(nod);	break;
					}
				}else if(!addTo)switch(state){
					case TO_SELECT:
					case TO_DELETE:	unSelect(nod);	break;
					default:				break;
				}
			}
		}
		draw();</text>	</mod>	<mod border="0" color="0099CC" icons="" title="setHover(state)" x="992" y="50">		<text>+ setHover(state):
- Muda o state do mod hover.
	unSelectAll();
	popup.close();
	modHover=getMod(mouse);
	switch(state){
		case TO_UNSELECT:default:break;
		case TO_CREATE:
			if(modHover){
				selectToBeCreator(modHover);
			}else{
				coxHover=getCox(mouse);
				if(coxHover){
					seg=coxHover.getSeg(mouse);
					selectToBeCreator(seg);
				}
			}
		break;
		case TO_CREATE_SON:
			if(modHover==Mestre)modHover=null;
			if(modHover){
				selectToBeSon(modHover);
			}
		break;
		case TO_CREATE_PAI:
			if(modHover){
				selectToBePai(modHover);
			}
		break;
		case TO_DELETE:
			if(modHover){
				selectToBeDeleted(modHover);
			}else{
				nodHover=getNod(mouse);
				if(nodHover){
					selectToBeDeleted(nodHover);
				}else{
					coxHover=getCox(mouse);
					if(coxHover){
						selectToBeDeleted(coxHover);
					}
				}
			}
		break;
	}
	draw();</text>	</mod>	<mod border="0" color="0099CC" icons="" title="relateMods(modsPais,modSon)" x="986" y="58">		<text>+ relateMods(modsPais,modSon):
	unSelectAll();
	for(modPai:modsPais){	//O modSon se torna son dos modsSelec
		if(modPai==modSon)continue;
		newCox=new Conexao(modPai,modSon);
		add(newCox);
	}
	draw();</text>	</mod>	<mod border="0" color="0099CC" icons="" title="deleteGhostCoxs()" x="1010" y="63">		<text>+ deleteGhostCoxs():
	while(Ghost.coxs&gt;0){
		del(Ghost.coxs(0));
	}
	draw();</text>	</mod>	<mod border="0" color="0099CC" icons="" title="relateToGhost(mods)" x="991" y="63">		<text>+ relateToGhost(mods):
	for(mod:mods){
		newCox=new Conexao(Ghost,mod);
		newCox.setBorda(newCox.son.getBorda());
		add(newCox);
	}
	unSelectAll();
	draw();</text>	</mod>	<mod border="0" color="0099CC" icons="" title="relateToMods(mods)" x="991" y="61">		<text>+ relateToMods(mods):
	if(Ghost.coxs==0)return;
	savedObjs=new List&lt;Objeto&gt;;
	for(mod:mods){
		for(cox:Ghost.coxs){
			newCox=new Conexao(mod,cox.son);
			newCox.setBorda(cox.getBorda());
			add(newCox);
			savedObjs.add(newCox);
			for(nod:cox.nods){
				newNod=new Nodulo(newCox,nod.x,nod.y);
				add(newNod);
				savedObjs.add(newNod);
			}
		}
	}
	addUndoable(savedObjs,false);
	unSelectAll();
	for(obj:savedObjs)select(obj);
	draw();</text>	</mod>	<mod border="0" color="0099CC" icons="" title="createNodOnGhostCoxs(x,y)" x="1011" y="59">		<text>+ createNodOnGhostCoxs(x,y):
	for(cox:Ghost.coxs){
		newNod=new Nodulo(cox,x,y);
		add(newNod);
	}
	draw();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="LEFT" x="1060" y="668">		<text>+ LEFT:
	addAndSelect(mod);
	setArea(TO_SELECT,false,mouse);
	setState(SELECT_AREA+NORMAL);</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="mouse_drag" x="1058" y="665">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="0099CC" icons="" title="addAndSelect(mod)" x="991" y="54">		<text>+ addAndSelect(mod):
	savedObjs=new List&lt;Objeto&gt;;
	savedObjs.add(mod);
	for(cox:mod.coxs)savedObjs.add(cox);
	addUndoable(savedObjs,false);
	unSelectAll();
	select(mod);
	for(cox:mod.coxs)select(cox);
	draw();</text>	</mod>	<mod border="0" color="00C817" icons="" title="Conexão" x="1156" y="-36">		<text/>	</mod>	<mod border="0" color="00FF00" icons="" title="Inverter Relação" x="1160" y="-33">		<text>+ Inverter Relação:
- Inverte a relação de Módulo-pai e Módulo-son.
	invertCox();</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Atalhos" x="1133" y="-69">		<text>* Atalhos:

+ Arquivo:
- Ctrl-N:			Cria um novo arquivo .mind.
- Ctrl-A:			Abre um arquivo .mind.
- Ctrl-S:			Salva um arquivo .mind.
- Ctrl+Shift-S:	Salva um novo arquivo .mind.
- Ctrl-W:			Fecha o programa.

+ Edição:
- Ctrl-Z:			Desfaz uma ação.
- Ctrl-Y:			Refaz uma ação.
- Ctrl-X:			Recorta Objetos selecionados.
- Ctrl-C:			Copia Objetos selecionados.
- Ctrl-V:			Cola Objetos da área de transferência.
- Excluir:			Deleta Objetos selecionados.
- Ctrl-A:			Seleciona todos os Objetos.
- Escape:			Deseleciona todos os Objetos.
- Shift:				Seleciona os descendentes imediatos dos objetos.
- Ctrl-I:			Deseleciona os selecionados e seleciona todos os outros.

+ Módulos:
- F2:					Abre o editor de título do Módulo.
- Ctrl-R:			Inicia o modo de relacionar Módulos.
- Ctrl+Alt-G:		Cria um Módulo, descendente dos selecionados.
- Ctrl+Alt-R:		Inicia uma relação, relacionando os selecionados.
- Ctrl+Alt-D:		Exclui os Módulos selecionados.
- Ctrl-P:			Seleciona todos os Módulos sem pais.

+ Conexão:

+ Exibir:
- F11:				Muda o modo fullscreen.
- Ctrl-Igual:		Aumenta o zoom com foco no centro.
- Ctrl-Menos:		Diminúi o zoom com desfoco no centro.
- Ctrl-1:			Muda o zoom com foco no centro com proporção 1:1.
- Ctrl-2:			Muda o zoom com foco no centro com proporção 1:2.
- Ctrl-3:			Muda o zoom com foco no centro com proporção 1:3.
- Ctrl-0:			Restaura o zoom para o valor inicial padrão.
- Ctrl-E:			Centraliza a tela nos Objetos selecionados ou no Mestre.
- Ctrl-Q:			Quebra a linha no editor de texto.
- Ctrl-M:			Mostra caractéres invisíveis no editor de texto.
- Ctrl-L:			Separa a janela do editor de texto em uma independente.

+ Pesquisar:
- Ctrl-F:			Abre o pesquisador de texto.

+ Anotações:
- Ctrl-T:			Abre o anotador temporário.
</text>	</mod>	<mod border="0" color="0099CC" icons="" title="invertCox()" x="1052" y="48">		<text>+ invertCox():
- Inverte a relação de modPai e modSon.
	if(titulo.isVisible())return;
	newObj=new List();
	for(cox:coxsSelec){
		if(cox.pai==Mestre)continue;
		newCox=new Conexao(cox.son,cox.pai);
		newCox.setBorda(cox.getBorda());
		newCox.setGrossura(cox.getGrossura());
		newCox.setTexto(cox.getTexto());
		newNods=new List();
		for(nod:cox.nods){
			newNod=new Nodulo(newCox,nod.x,nod.y);
			newNods.add(newNod);
		}
		newObjs.add(newCox);
		reverse(newNods);
		for(newNod:newNods){
			newObjs.add(newNod);
		}
	}
	addUndoable(newObjs,true);
	resetState();</text>	</mod>	<mod border="0" color="0000FF" icons="" title="Atalhos" x="1035" y="35">		<text>+ Atalhos:
- Funções para serem chamadas por atalhos.</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Inverter Relação" x="850" y="92">		<text>+ Inverter Relação:
- Inverte a relação de Módulo-pai e Módulo-son.
	invertCox();</text>	</mod>	<mod border="0" color="33CCFF" icons="" title="key_alt_down +&#10;LEFT" x="1069" y="305">		<text>+ key_alt_down + LEFT:
	if([cox]){
		for(cox:coxsSelec)for(nod:[cox].nods)select(nod);
	}
	//Muda o X e Y dos modsSelec e nodsSelec de acordo com o mouse.
	oldLocal=mouse;
	for(mod:modsSelec)mod.setLocal(mouse);
	for(nod:nodsSelec)nod.setLocal(mouse);
	draw();
	setState(DRAG+NORMAL);</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="configMindSort" x="1025" y="-92">		<text>+ configMindSort:
- Guarda todas as configurações do programa.
	[Settings]
		[Dimensions]
			x_Window=([0-9]+)
			y_Window=([0-9]+)
			width_Window=([0-9]+)
			height_Window=([0-9]+)
			x_TextWindow=([0-9]+)
			y_TextWindow=([0-9]+)
			width_TextWindow=([0-9]+)
			height_TextWindow=([0-9]+)
			defaultWidth_TextWindow=([0-9]+)
			defaultHeight_TextWindow=([0-9]+)
		[Font]
			font=([a-zA-ZÀ-ÿ0-9]+),([0-9]+),([0-9]+)
		[Fundo]
			showGrid=true
		[Paleta]
			cor_0_0=(#[0-9A-F]{6})
			cor_0_1=(#[0-9A-F]{6})
			cor_0_2=(#[0-9A-F]{6})
			cor_0_3=(#[0-9A-F]{6})
			cor_0_4=(#[0-9A-F]{6})
			cor_0_5=(#[0-9A-F]{6})
			cor_1_0=(#[0-9A-F]{6})
			cor_1_1=(#[0-9A-F]{6})
			cor_1_2=(#[0-9A-F]{6})
			cor_1_3=(#[0-9A-F]{6})
			cor_1_4=(#[0-9A-F]{6})
			cor_1_5=(#[0-9A-F]{6})
			cor_2_2=(#[0-9A-F]{6})
			cor_2_3=(#[0-9A-F]{6})
			cor_2_4=(#[0-9A-F]{6})
			cor_2_5=(#[0-9A-F]{6})
			cor_3_2=(#[0-9A-F]{6})
			cor_3_3=(#[0-9A-F]{6})
			cor_3_4=(#[0-9A-F]{6})
			cor_3_5=(#[0-9A-F]{6})
		[Texto]
			lineWrap=(true|false)
			showAllChars=(true|false)
			separarTextWindow=(true|false)
			autoFocarTextWindow=(true|false)
		[Limites]
			objetosLimite=([0-9]+)
			undoRedoLimite=([0-9]+)
			transparenciaNivel=([0-9]+)
</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Anotações" x="1224" y="-64">		<text>+ Anotações:
- Abre o anotador temporário.
- Ctrl-T</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="picker" x="1032" y="-77">		<text>+ picker:
	Cursor.png
	Mask.png
	Picker.png</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="CorPickBloco" x="796" y="121">		<text>+ CorPickBloco:
- Bloco do coletor de cores.

public class CorPickBloco extends Bloco{
//JANELA
	private JFrame janela;
//CURSOR
	private final BufferedImage cursorImg;
	private final BufferedImage mask;
	private final Image cursor;
//PICKER
	private CorPick pick;
	private Robot bot;
		private void setCor(Point local);
//MAIN
	public CorPickBloco(CorPick pick,int x,int y,int width,int height);
	private void set(CorPick pick);
//DRAW
	private final Image icone;
	public void draw(Graphics imagemEdit);
}</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="search" x="1032" y="-32">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="MatchMade" x="1036" y="-23">		<text>+ MatchMade:
- Uma procura feita.

public class MatchMade{
//TREE
	private Tree tree;
//LISTA
	private class SortedList&lt;T&gt; extends ArrayList&lt;T&gt;...
	private SortedList&lt;Match&gt;matches;
		public List&lt;Match&gt;getMatchs();
		public Match get(int index);
	private HashMap&lt;Integer,List&lt;Match&gt;&gt;matchesByObjs;
		public List&lt;Match&gt;getMatchsByObj(Objeto obj);
	public void add(Match match);
	public void del(Objeto obj);
	public int totalObjs();
	public int totaMatches();
//SEARCH
	private Pattern regex;
//	private boolean frente;
//	private boolean onlySelected;
//	private boolean wholeWord;
	private boolean diffMaiuscMinusc;
	public void search(String termo,boolean frente,boolean onlySelected,boolean wholeWord,boolean diffMaiuscMinusc);
		private void searchInObj(Objeto obj);
			private void searchInObjTexto(Objeto obj,boolean isTitulo,String texto);
				public void research(Objeto obj);	//APENAS PARA CONTEXTUALIZAR
				public void researchText(Objeto obj,boolean isTitulo,String texto);	//APENAS PARA CONTEXTUALIZAR
//MAIN
	public MatchMade(Tree tree);
//FUNCS
	public boolean isEmpty();
	public void clear();
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Match" x="1036" y="-27">		<text>+ Match:
- Um instante encontrado em uma procura.

public class Match implements Comparable{
//OBJETO
	private Objeto obj;
		public Objeto getObjeto();
//TEXTO OU TÍTULO
	private boolean isOnText;
		public boolean isOnText();
//INDEX
	private int selecIni;
		public int getSelectionStart();
	private int selecFim;
		public int getSelectionEnd();
//MAIN
	public Match(Objeto obj,boolean isOnText,int selecIni,int selecFim);
@Override
	public int compareTo(Object o);
}</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="janela" x="1032" y="-54">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="JanelaVidro" x="1046" y="-37">		<text>+ JanelaVidro:
- Janela transparente com uma borda customizada.

public class JanelaVidro extends JDialog{
//BORDA
	private Borda borda;
		public Borda getBorda();
//BOTÃO X
	private Botao X;
//BOTÃO SIZE MÍNIMO
	private Botao SMin;
//BOTÃO SIZE MÉDIO
	private Botao SMed;
//BOTÃO SIZE MÁXIMO
	private Botao SMax;
//TRANSPARÊNCIA
	private int transparencia;
		public int getTransparencia();
		public void setTransparencia(int transparencia);
//MAIN
	public JanelaVidro(JFrame janela);
//FUNCS
@Override
	public void setLocation(int x,int y);
@Override
	public void setSize(int width,int height);
@Override
	public void setBounds(int x,int y,int width,int height);
	private void setButtonLocations();
	private Rectangle getLimitedBounds(Rectangle newBounds);
	public void updateLang();
	private void setSizeIcons();
//DRAW
@Override
	public void paint(Graphics imagemEdit);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Borda" x="1036" y="-49">		<text>+ Borda:
- Borda customizada.

public class Borda{
//STATE
	private enum Side...
	private Side side;
		private Side getSide(Point ponto);
//JANELA(PAI)
	private Window janela;
		public Window getJanela();
//BORDAS
	public static int TOP_WIDTH;
	public static int WIDTH;
		public int getInnerX();
		public int getInnerY();
		public int getInnerWidth();
		public int getInnerHeight();
	public Rectangle getInnerBounds();
//ÁREAS DAS BORDAS
	private Rectangle getTitleBar();
	private Rectangle getTopBorder();
	private Rectangle getBottomBorder();
	private Rectangle getLeftBorder();
	private Rectangle getRightBorder();
//VAR GLOBAIS
	private static Color WINDOW_COLOR;
		public static Color getBordaCor();
		public static void setBordaCor(Color bordaCor);
	private static Color WINDOW_DISABLED_COLOR;
		public static Color getBordaDisabledCor();
		public static void setBordaDisabledCor(Color bordaCor);
	private Rectangle windowSize;
	private Point mousePressed;
	private boolean isDragging;
		public boolean isDragging();
//BOTÕES
	private List&lt;Botao&gt;botoes;
		public void add(Botao button);
//FONTE
	private Font fonte;
		public Font getFonte();
//MAIN
	public Borda(JDialog janela);
	public Borda(JFrame janela);
	private void setJanela(Window janela);
//DRAW
	public void draw(Graphics imagemEdit);
		private void drawShadow(Graphics imagemEdit);
			private void drawShadowBlock(Graphics2D imagemEdit2D,int x1,int y1,int x2,int y2,Side side);
		private void drawBorda(Graphics imagemEdit);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Botao" x="1056" y="-45">		<text>+ Botao:
- Botão utilizado na Borda.

public class Botao{
//STATES
	private enum State...
	private State state;
		private void setState(State state);
		private State getState();
//BORDA
	private Borda borda;
		public Borda getBorda();
//CORES
	public class Cor...
	private Cor cor;
		public Cor getCores();
//LEGENDA
	private JPopupMenu popup;
		public void setLegenda(String legenda);
//ACTION
	private Runnable acao;
		public void setAction(Runnable acao);
		public void click();
//LOCAL
	protected int x;
		public int getX();
		public void setX(int x);
	protected int y;
		public int getY();
		public void setY(int y);
	public Point getLocation();
	public void setLocation(int x,int y);
//FORM
	protected int width;
		public int getWidth();
		public void setWidth(int width);
	protected int height;
		public int getHeight();
		public void setHeight(int height);
	public Dimension getSize();
	public void setSize(int width,int height);
	public Rectangle getBounds();
	public Rectangle getRelativeBounds();
	public void setBounds(int x,int y,int width,int height);
	public void setBounds(Rectangle r);
//IMAGEM
	private Image print;
		private Image getPrint();
	private Image buffer;
	private boolean update;
		private void update();
//VISIBILIDADE
	private boolean visible;
		public boolean isVisible();
		public void setVisible(boolean visible);
//TITULO
	private String titulo;
		public String getTitulo();
		public void setTitulo(String titulo);
//MAIN
	public Botao(Borda borda);
//FUNCS
	private void showPopup(boolean show);
//DRAW
	public synchronized void draw();
	public void draw(Graphics imagemEdit);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="Side" x="1042" y="-49">		<text>private enum Side{
	NONE,
	ALL,
	TOP,
	TOP_RIGHT,
	RIGHT,
	BOTTOM_RIGHT,
	BOTTOM,
	BOTTOM_LEFT,
	LEFT,
	TOP_LEFT;
	private boolean is(Borda.Side... sides);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="State" x="1060" y="-40">		<text>private enum State{
	INACTIVE,
	HOVERED,
	ACTIVE,
	DRAGGED;
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="Cor" x="1057" y="-40">		<text>public class Cor{
	private Color background;
		public Color getBackground();
		public void setBackground(Color cor);
	private Color unFocusedBackground;
		public Color getBackgroundOnUnfocused();
		public void setBackgroundOnUnfocused(Color cor);
	private Color hoverBackground;
		public Color getBackgroundOnHover();
		public void setBackgroundOnHover(Color cor);
	private Color activeBackground;
		public Color getBackgroundOnActive();
		public void setBackgroundOnActive(Color cor);
	private Color foreground;
		public Color getForeground();
		public void setForeground(Color cor);
	private Color unFocusedforeground;
		public Color getForegroundOnUnfocused();
		public void setForegroundOnUnfocused(Color cor);
}</text>	</mod>	<mod border="0" color="0000FF" icons="" title="Botao&#13;&#10;States" x="1095" y="-44">		<text>+ Botao States:</text>	</mod>	<mod border="0" color="29CCFF" icons="" title="LEFT" x="1069" y="-37">		<text>+ LEFT:
	setState(ACTIVE);</text>	</mod>	<mod border="0" color="29CCFF" icons="" title="mouse_down" x="1074" y="-37">		<text>+ mouse_down:</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="HOVERED" x="1083" y="-37">		<text>+ HOVERED:
- O mouse está acima do botão.</text>	</mod>	<mod border="0" color="29CCFF" icons="" title="mouse_move" x="1082" y="-34">		<text>+ mouse_move:
	if(!contains(mouse)){
		setState(INACTIVE);
		showPopup(false);
	}</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="ACTIVE" x="1073" y="-28">		<text>+ ACTIVE:
- O mouse está pressionando o botão.</text>	</mod>	<mod border="0" color="29CCFF" icons="" title="mouse_up" x="1079" y="-28">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="646464" icons="" title="INACTIVE" x="1094" y="-37">		<text>+ INACTIVE:
- Nada ocorre.</text>	</mod>	<mod border="0" color="29CCFF" icons="" title="mouse_move" x="1093" y="-34">		<text>+ mouse_move:
	if(contains(mouse)){
		setState(HOVER);
		showPopup(true);
	}</text>	</mod>	<mod border="0" color="29CCFF" icons="" title="LEFT" x="1073" y="-22">		<text>+ LEFT:
	if(!contains(mouse)){
		setState(DRAGGED);
		showPopup(false);
	}</text>	</mod>	<mod border="0" color="29CCFF" icons="" title="mouse_drag" x="1071" y="-25">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="29CCFF" icons="" title="LEFT" x="1086" y="-28">		<text>+ LEFT:
	setState(HOVERED);
	click();</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="DRAGGED" x="1094" y="-28">		<text>+ DRAGGED:
- O mouse está pressionado, mas fora do botão.</text>	</mod>	<mod border="0" color="29CCFF" icons="" title="mouse_up" x="1101" y="-28">		<text>+ mouse_up:</text>	</mod>	<mod border="0" color="29CCFF" icons="" title="LEFT" x="1108" y="-28">		<text>+ LEFT:
	setState(INACTIVE);</text>	</mod>	<mod border="0" color="29CCFF" icons="" title="mouse_drag" x="1093" y="-25">		<text>+ mouse_drag:</text>	</mod>	<mod border="0" color="29CCFF" icons="" title="LEFT" x="1095" y="-22">		<text>+ LEFT:
	if(contains(mouse)){
		setState(ACTIVE);
		showPopup(true);
	}</text>	</mod>	<mod border="0" color="00C817" icons="" title="------" x="1206" y="-55">		<text/>	</mod>	<mod border="0" color="00FF00" icons="" title="Transparência..." x="1206" y="-57">		<text>+ Transparência...:
- Abre um selecionador de transparência.</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="Languages" x="1025" y="-97">		<text>+ Languages:&#13;
	EN-US.txt&#13;
	PT-BR.txt</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="ferramenta" x="810" y="261">		<text>+ ferramenta:
- Não são de natureza visual.</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="language" x="806" y="266">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Language" x="801" y="271">		<text>+ Language:

public class Language{
//NOME
	private String nome;
		public String getNome();
//SIGLA
	private String sigla;
		public String getSigla();
//TEXTO
	private HashMap&lt;String,String&gt;texto;
		public String get(String index,String padrao);
//MAIN
	public Language(String nome,String sigla,HashMap&lt;String,String&gt;texto);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="LanguagePackage" x="772" y="275">		<text>+ LanguagePackage:
- Um pacote de idiomas.

public class LanguagePackage{
//LANG
	private List&lt;Language&gt;langs;
		public String get(String index,String padrao);
		public Language getLanguage();
//INDEX
	private int langIndex;
		public void setLanguage(String lang);
//MAIN
	public LanguagePackage();
//FUNCS
	public boolean add(File link,String idiomaFiltro,String prefixFiltro);
	public String[]add(File link,String prefixFiltro);
		private HashMap&lt;String,String&gt;getLang(File link,String prefixFiltro);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="Options" x="1041" y="-62">		<text>public enum Options{
	ERRO,
	AVISO;
}</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Texto" x="1218" y="-64">		<text>+ Texto:
- Abre o texto.</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Exportar Como..." x="1143" y="-49">		<text>+ Exportar Como...:
- Salva um novo arquivo .png ou .jpg.
</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Copiar Como Imagem" x="1156" y="0">		<text>+ Copiar Como Imagem:&#13;
- Copia uma imagem dos Objetos selecionados.&#13;
- Ctrl-Shift-C&#13;
	copyAsImg();&#13;
</text>	</mod>	<mod border="0" color="0099CC" icons="" title="copyAsImg()" x="1075" y="63">		<text>+ copyAsImg():
- Copia uma imagem dos Objetos selecionados.
	if(titulo.isVisible())return;
	imagem==getImage(objsSelec);
	setClipboard(imagem);
	resetState();</text>	</mod>	<mod border="0" color="00C817" icons="" title="------" x="1143" y="-51">		<text/>	</mod>	<mod border="0" color="00FF00" icons="" title="Mover Para Cima" x="1159" y="-24">		<text>+ Mover Para Cima:
- Move para cima os Objetos selecionados.
- Up
	moveUp(false);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Mover Para Direita" x="1159" y="-22">		<text>+ Mover Para Direita:
- Move para direita os Objetos selecionados.
- Right
	moveRight(false);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Mover Para Esquerda" x="1159" y="-20">		<text>+ Mover Para Esquerda:
- Move para esquerda os Objetos selecionados.
- Left
	moveLeft(false);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Mover Para Baixo" x="1159" y="-18">		<text>+ Mover Para Baixo:
- Move para baixo os Objetos selecionados.
- Down
	moveDown(false);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Mover Muito Para Cima" x="1159" y="-14">		<text>+ Mover Muito Para Cima:
- Move bem para cima os Objetos selecionados.
- Ctrl-Up
	moveUp(true);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Mover Muito Para Direita" x="1159" y="-12">		<text>+ Mover Muito Para Direita:
- Move bem para direita os Objetos selecionados.
- Ctrl-Right
	moveRight(true);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Mover Muito Para Esquerda" x="1159" y="-10">		<text>+ Mover Muito Para Esquerda:
- Move bem para esquerda os Objetos selecionados.
- Ctrl-Left
	moveLeft(true);</text>	</mod>	<mod border="0" color="00FF00" icons="" title="Mover Muito Para Baixo" x="1159" y="-8">		<text>+ Mover Muito Para Baixo:
- Move bem para baixo os Objetos selecionados.
- Ctrl-Down
	moveDown(true);</text>	</mod>	<mod border="8" color="0099CC" icons="" title="moveUp(saltar)" x="1080" y="35">		<text>+ moveUp(saltar):
- Move para cima os Objetos selecionados.
	if(titulo.isVisible())return;
	if(popup.isVisible())return;
	salto=(saltar?8:1);
	if(objsSelec==0){
		tree.setLocal(tree.X,tree.Y+salto);
	}else{
		for(mod:modsSelec)mod.setLocal(mod.X,mod.Y-salto);
		for(nod:nodsSelec)nod.setLocal(nod.X,nod.Y-salto);
		savedObjs=new List&lt;Objeto&gt;(modsSelec+nodsSelec);
		addUndo(savedObjs,[0,+salto],MOVE);
	}
	draw();</text>	</mod>	<mod border="0" color="00C817" icons="" title="Mover" x="1156" y="-27">		<text>+ Mover:
- Menu das ações de mover.
</text>	</mod>	<mod border="0" color="00C817" icons="" title="------" x="1159" y="-16">		<text/>	</mod>	<mod border="8" color="0099CC" icons="" title="moveRight(saltar)" x="1080" y="37">		<text>+ moveRight(saltar):
- Move para direita os Objetos selecionados.
	if(titulo.isVisible())return;
	if(popup.isVisible())return;
	salto=(saltar?8:1);
	if(objsSelec==0){
		tree.setLocal(tree.X-salto,tree.Y);
	}else{
		for(mod:modsSelec)mod.setLocal(mod.X+salto,mod.Y);
		for(nod:nodsSelec)nod.setLocal(nod.X+salto,nod.Y);
		savedObjs=new List&lt;Objeto&gt;(modsSelec+nodsSelec);
		addUndo(savedObjs,[-salto,0],MOVE);
	}
	draw();</text>	</mod>	<mod border="8" color="0099CC" icons="" title="moveLeft(saltar)" x="1080" y="39">		<text>+ moveLeft(saltar):
- Move para esquerda os Objetos selecionados.
	if(titulo.isVisible())return;
	if(popup.isVisible())return;
	salto=(saltar?8:1);
	if(objsSelec==0){
		tree.setLocal(tree.X+salto,tree.Y);
	}else{
		for(mod:modsSelec)mod.setLocal(mod.X-salto,mod.Y);
		for(nod:nodsSelec)nod.setLocal(nod.X-salto,nod.Y);
		savedObjs=new List&lt;Objeto&gt;(modsSelec+nodsSelec);
		addUndo(savedObjs,[+salto,0],MOVE);
	}
	draw();</text>	</mod>	<mod border="8" color="0099CC" icons="" title="moveDown(saltar)" x="1080" y="41">		<text>+ moveDown(saltar):
- Move para baixo os Objetos selecionados.
	if(titulo.isVisible())return;
	if(popup.isVisible())return;
	salto=(saltar?8:1);
	if(objsSelec==0){
		tree.setLocal(tree.X,tree.Y-salto);
	}else{
		for(mod:modsSelec)mod.setLocal(mod.X,mod.Y+salto);
		for(nod:nodsSelec)nod.setLocal(nod.X,nod.Y+salto);
		savedObjs=new List&lt;Objeto&gt;(modsSelec+nodsSelec);
		addUndo(savedObjs,[0,-salto],MOVE);
	}
	draw();</text>	</mod>	<mod border="0" color="999999" icons="" title="Diagrama" x="924" y="-135">		<text>+ Diagrama:
</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="Icons" x="1025" y="-102">		<text>+ Icons:
</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="src" x="1025" y="-87">		<text>+ src:
</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="MindSortUI" x="1032" y="-63">		<text>+ MindSortUI:
- O visual de MindSort.

public class MindSortUI{
//LANG
	private static LanguagePackage LANG;
		public static LanguagePackage getLang();
		public static void addLanguage(File link,String idiomaFiltro,String prefixFiltro);
//FONTE
	public static final Font FONTE;
//AÇÕES DE BOTÕES
	private AbstractAction novoAction;
	private AbstractAction abrirAction;
	private AbstractAction salvarAction;
	private AbstractAction salvarComoAction;
	private AbstractAction sairAction;
//JANELA
	private JFrame janela;
		public JFrame getJanela();
		public void buildJanela();
			public void buildTree(Painel painel);
	private JMenuBar menu;
	private Toggle fullscreen;
		public Toggle getFullscreenButton():
	private Toggle separateText;
		public Toggle getSeparateTextButton();
	private Toggle autoFocusText;
		public Toggle getAutoFocusTextButton();
	private Toggle showGrid;
		public Toggle getShowGridButton();
	private Toggle lineWrap;
		public Toggle getLineWrapButton();
	private Toggle showAllChars;
		public Toggle getShowAllCharsButton();
	private Toggle showTexto;
		public Toggle getShowTextoButton();
	private Toggle showNotes;
		public Toggle getShowNotesButton();
		private void updateMenu();
//JANELA DO TEXTO
	private boolean mousePressed;
	private Rectangle window;
	private Janela janelaTexto;
		public Janela getJanelaTexto();
		public void buildJanelaTexto();
			private void updateJanelaTextoMenu();
//JANELA DAS ANOTAÇÕES
	private Texto notesTexto;
	private JFrame janelaNotes;
		private void buildJanelaNotes();
//SEARCHER
	private Searcher searcher;
		public void buildSeacher();
//MINDSORT
	private MindSort mind;
//MAIN
	public MindSortUI(MindSort mind);
	public void build();
//FUNCS
	public void setTreeFont(Font fonte);
	private void updateLang();
//FULLSCREEN
	public void fullscreen(boolean fullscreen);
//MENSAGEM
	public enum Options...
	public static void mensagem(String mensagem,Options tipo);
}</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="propriedades" x="806" y="166">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="utilitarios" x="826" y="-107">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="yo" x="825" y="-102">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="utilitarios" x="816" y="256">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="TreeST" x="806" y="-27">		<text>+ TreeST:
- Todos os estados de Tree.

public class TreeST{
//STATES
	public final static int NORMAL;				//[0-9]
	public final static int TO_CREATE;			//[0-9]
	public final static int TO_CONNECT;			//[0-9]
	public final static int TO_DELETE;			//[0-9]
	public final static int EDIT_TITLE;			//[0-9]
	public final static int DRAG;				//[0-9]0
	public final static int MOVE;				//[0-9]0
	public final static int SELECT_AREA;			//[0-9]0
	public final static int WAITING1;			//[0-9]00
	public final static int WAITING2;			//[0-9]00
	public final static int WAITING3;			//[0-9]00
	public final static int LEFT;				//[0-9]000
	public final static int MIDDLE;			//[0-9]000
	public final static int RIGHT;				//[0-9]000
	public final static int DRAG_ALL;			//[0-9]0000
	public final static int AUTO_DRAG_ALL;	//[0-9]0000
//STATE
	private int state;
		public int getState();
//STATE
	public class State...
		public abstract class Action...
//STATES
	private HashMap&lt;Integer,State&gt;states;
		public State getStateContent(int state);
		public State setState(int newStateIndex,Objeto...objs);
		public boolean stateContains(int state);
//TREE
	private Tree tree;
//MAIN
	public TreeST(Tree tree);
//FLUXO
	public void loadStates();
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="TreeUI" x="794" y="-23">		<text>+ TreeUI:
- O visual de Tree.

public class TreeUI{
//TREE
	private Tree tree;
//VAR GLOBAIS
	public static float getBordaValue(int unit);
//LANG
	private static LanguagePackage LANG;
		public static LanguagePackage getLang();
		public static void addLanguage(File link,String idiomaFiltro,String prefixFiltro);
//FONTE
	public static class Fonte...
		public void setFonte(Font fonte);
		public static Font getFonte();
//COR DE FUNDO
	public static Cor FUNDO;
//MENU
	public static class Menu...
//POPUP
	private Popup popup;
		public Popup getPopup();
//SELEÇÃO
	private Selecao selecao;
		public Selecao getSelecao();
//CURSOR
	private Cursor cursor;
		public Cursor getCursor();
//TITULO
	private Texto titulo;
		public Texto getTitulo();
		public void buildTitulo();
		public void setTitulo(Modulo mod);
		public void updateTituloFont();
//TEXTO
	private Texto texto;
		public Texto getTexto();
		public void buildTexto();
		public void setTexto(Objeto obj);
//MAIN
	public TreeUI(Tree tree);
	public void build();
//DRAW
	public void draw(Graphics2D imagemEdit);
		private void drawFundo(Graphics2D imagemEdit,Rectangle tela,int unit);
		private void drawObjetos(Graphics2D imagemEdit,Rectangle tela,int unit,float borda);
		private void drawFrente(Graphics2D imagemEdit);
			private void drawAutoDragLine(Graphics2D imagemEdit);
//MENSAGEM
	public enum Options...
	public static void mensagem(String mensagem,Options tipo);
}</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="segmento" x="799" y="5">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="SegmentoST" x="792" y="14">		<text>+ SegmentoST:
- Todos os estados de Segmento.

public class SegmentoST{
//STATES
	public enum State...
//STATE
	private SegmentoST.State state;
		public SegmentoST.State getState();
		public void setState(SegmentoST.State state);
//SEGMENTO
	private Segmento seg;
//MAIN
	public SegmentoST(Segmento seg);
@Override
	public int hashCode();
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="ConexaoST" x="798" y="23">		<text>+ ConexaoST:
- Todos os estados de Conexao.

public class ConexaoST{
//STATES
	public enum State...
//STATE
	private ConexaoST.State state;
		public ConexaoST.State getState();
		public void setState(ConexaoST.State state);
//CONEXÃO
	private Conexao cox;
//MAIN
	public ConexaoST(Conexao cox);
@Override
	public int hashCode();
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="ConexaoUI" x="798" y="27">		<text>+ ConexaoUI:
- O visual de Conexao.

public class ConexaoUI{
//CONEXÃO
	private Conexao cox;
//MAIN
	public ConexaoUI(Conexao cox);
//DRAW
	public void draw(Graphics2D imagemEdit,int unit);
		private void drawBrilho(Graphics2D imagemEdit,int unit,float borda);
		private void drawLinha(Graphics2D imagemEdit,int unit,float borda);
		private void drawPonta(Graphics2D imagemEdit,int unit);
			private Point2D.Float getPonta(int unit,float x1,float y1,float x2,float y2);
	public Cor getBrilhoCor(ConexaoST.State state);
	public Cor getLinhaCor(ConexaoST.State state);
}</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="nodulo" x="805" y="50">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="ModuloST" x="799" y="41">		<text>+ ModuloST:
- Todos os estados de Modulo.

public class ModuloST{
//STATES
	public enum State...
//STATE
	private State state;
		public ModuloST.State getState();
		public void setState(ModuloST.State state);
//MÓDULO
	private Modulo mod;
//MAIN
	public ModuloST(Modulo mod);
@Override
	public int hashCode();
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="ModuloUI" x="799" y="45">		<text>+ ModuloUI:
- O visual de Modulo.

public class ModuloUI{
//VAR GLOBAIS
	public static int getRoundValue(int unit);
	public static class Cores...
//MÓDULO
	private Modulo mod;
//MAIN
	public ModuloUI(Modulo mod);
//DRAW
	public void draw(Graphics2D imagemEdit,int unit);
		private void drawBrilho(Graphics2D imagemEdit,int unit,int round,float borda);
		private void drawFundo(Graphics2D imagemEdit,int unit,int round);
		private void drawBorda(Graphics2D imagemEdit,int unit,int round,float borda);
		private void drawTitulo(Graphics2D imagemEdit,int unit);
		private void drawIcone(Graphics2D imagemEdit,int unit);
	public Cor getBrilhoCor(ModuloST.State state);
	public Cor getFundoCor(ModuloST.State state);
	public Cor getBordaCor(ModuloST.State state);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="NoduloST" x="799" y="59">		<text>+ NoduloST:
- Todos os estados de Nodulo.

public class NoduloST{
//STATES
	public enum State...
//STATE
	private NoduloST.State state;
		public NoduloST.State getState();
		public void setState(NoduloST.State state);
//NODULO
	private Nodulo nod;
//MAIN
	public NoduloST(Nodulo nod);
@Override
	public int hashCode();
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="NoduloUI" x="799" y="63">		<text>+ NoduloUI:
- O visual de Nodulo.

public class NoduloUI{
//NODULO
	private Nodulo nod;
//MAIN
	public NoduloUI(Nodulo nod);
//DRAW
	public void draw(Graphics2D imagemEdit,int unit);
		private void drawBrilho(Graphics2D imagemEdit,int unit,float size,float round,float borda);
		private void drawPonto(Graphics2D imagemEdit,int unit,float size,float round);
	public Cor getBrilhoCor(NoduloST.State state);
	public Cor getPontoCor(NoduloST.State state);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="TransferableImage" x="798" y="-38">		<text>private class TransferableImage implements Transferable{
	private Image imagem;
	public TransferableImage(Image img);
	public Object getTransferData(DataFlavor flavor)throws UnsupportedFlavorException,IOException;
	public DataFlavor[]getTransferDataFlavors();
	public boolean isDataFlavorSupported(DataFlavor flavor);
}</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="main" x="811" y="-40">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="SelecaoST" x="808" y="-54">		<text>+ SelecaoST:
- Todos os estados de Selecao.

public class SelecaoST{
//STATES
	public enum State...
//STATE
	private State state;
		public SelecaoST.State getState();
		public void setState(SelecaoST.State state);
//SELEÇÃO
//	private Selecao selecao;
//MAIN
	public SelecaoST(Selecao selecao);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="SelecaoUI" x="808" y="-50">		<text>+ SelecaoUI:
- O visual de Selecao.

public class SelecaoUI{
//SELEÇÃO
	private Selecao selecao;
//MAIN
	public SelecaoUI(Selecao selecao);
//DRAW
	public void draw(Graphics2D imagemEdit);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="CursorST" x="809" y="-66">		<text>+ CursorST:
- Todos os estados de Cursor.

public class CursorST{
//STATES
	public final static int NORMAL;		//Definir uma seta
	public final static int SELECT;		//Definir uma seta brilhante
	public final static int AUTODRAG;		//Definir setas grandes juntas em um +
	public final static int MOVE;			//Adicionar setas juntas em um + abaixo
	public final static int CREATE;		//Adicionar um + verde abaixo
	public final static int DELETE;		//Adicionar um x vermelho abaixo
	public final static int SON;				//Adicionar uma conexão amarela abaixo
	public final static int PAI;				//Adicionar uma conexão azul abaixo
	public final static int EDIT_TITLE;	//Adicionar um T abaixo
	public final static int AREA_SELECT;	//Adicionar uma área branca abaixo
	public final static int AREA_CREATE;	//Adicionar uma área verde abaixo
	public final static int AREA_DELETE;	//Adicionar uma área vermelha abaixo
	public final static int AREA_SON;		//Adicionar uma área amarela abaixo
	public final static int AREA_PAI;		//Adicionar uma área azul abaixo
	public final static int DRAG;			//Adicionar setas juntas em um + ao lado
//STATE
	private int state;
		public int getState();
		public void setState(int state);
			private Image getCursor(String nome);
//CURSOR
	private Cursor cursor;
//MAIN
	public CursorST(Cursor cursor);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="Fonte" x="788" y="-22">		<text>public static class Fonte{
	public static Font FONTE;
	public static Cor FUNDO=new Cor(255,255,255);
	public static Cor FUNDO_SELECT=new Cor(155,155,155);
	public static Cor FUNDO_UNSELECT=new Cor(230,230,230);
	public static Cor DARK=new Cor(10,10,10);
	public static Cor LIGHT=new Cor(245,245,245);
	public static Cor SELECTED=new Cor(255,255,255);
	public static Cor UNSELECTED=new Cor(80,80,80);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="Menu" x="789" y="-19">		<text>public static class Menu{
	public static Cor FUNDO=new Cor(220,220,220);
	public static Cor SELECT=new Cor(154,210,255);
	public static Cor SELECT_DISABLED=new Cor(240,240,240);
	public static Cor FONTE=new Cor(10,10,10);
	public static Cor FONTE_DISABLED=new Cor(109,109,109);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="Options" x="794" y="-18">		<text>public enum Options{
	ERRO,
	AVISO;
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="" title="SortedList&lt;T&gt;" x="1044" y="-22">		<text>private class SortedList&lt;T&gt; extends ArrayList&lt;T&gt;{
	//LISTA ORDENADA(POR VALOR) COM SUBLISTAS ORDENADAS(POR INSERÇÃO)
	public boolean add(T valor);
	private int getInsertIndex(T valor);
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="SearcherUI" x="1036" y="-15">		<text>+ SearcherUI:
- O visual de Searcher.

public class SearcherUI{
//MINDSORT
	private Searcher searcher;
//MAIN
	public SearcherUI(Searcher searcher);
//VAR GLOBAIS
	private JDialog dialog;
		public JDialog getWindow();
	protected JTextField termo;
	protected JLabel resultado;
	protected JButton procurar;
	protected JButton destacar;
	protected String procurarTxt;
	protected String listarTxt;
	protected String proximoTxt;
	protected String anteriorTxt;
	public void updateInterface();
}</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="CustomEditor" x="798" y="201">		<text>+ CustomEditor:
- É ativado quando o Texto tem o seu obj modificado.

public class CustomEditor extends StyledEditorKit{
//QUEBRA DE LINHA
	private boolean lineWrappable;
		public boolean isLineWrappable();
		public void setLineWrappable(boolean wrappable);
	private boolean lineWrap;
		public boolean isLineWrapped();
		public void setLineWrap(boolean wrap);
//CARACTERES INVISÍVEIS
	private boolean viewAllChars;
		public boolean isAllCharsVisible();
		public void setViewAllChars(boolean view);
//TAMANHO DO TAB
	private int tabSize;
		public int getTabSize();
		public void setTabSize(int size);
//&lt;GRADE_CUSTOM&gt;
	private class CustomColumnFactory implements ViewFactory...
//&lt;/GRADE_CUSTOM&gt;
	private final CustomColumnFactory columnFactory;
@Override
	public ViewFactory getViewFactory();
}</text>	</mod>	<mod border="0" color="999999" icons="" title="Diagrama" x="1504" y="-473">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="src" x="1622" y="-448">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="utilities" x="1311" y="-466">		<text>+ `utilities`:&#13;
- Todos os componentes de uso genérico.&#13;
</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="tree" x="1324" y="-387">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Tree.java" x="1328" y="-351">		<text>+ `Tree.java`:&#13;
- </text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="TreeRule.java" x="1328" y="-347">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="TreeFlow.java" x="1328" y="-343">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="TreeView.java" x="1328" y="-339">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="TreePlan.java" x="1328" y="-335">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="chunck" x="1419" y="-375">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="cursor" x="1378" y="-367">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="selection-area" x="1396" y="-371">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="modulo" x="1283" y="-351">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="conexao" x="1283" y="-327">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="nodulo" x="1283" y="-279">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="segmento" x="1288" y="-323">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="popup" x="1355" y="-363">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="undo-redo-manager" x="1393" y="-448">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="texto" x="1339" y="-359">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="searcher" x="1625" y="-404">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="janela" x="1625" y="-396">		<text/>	</mod>	<mod border="0" color="33CCFF" icons="/Basics/Folder.png" title="glass-window" x="1043" y="-364">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="menu" x="1625" y="-428">		<text/>	</mod>	<mod border="0" color="0000FF" icons="/Basics/Folder.png" title="font-chooser" x="1043" y="-389">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="src" x="1316" y="-462">		<text>+ `src`:&#13;
</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="Icons" x="1622" y="-464">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="Languages" x="1622" y="-456">		<text/>	</mod>	<mod border="0" color="FFFFFF" icons="/Basics/Folder.png" title="element" x="1319" y="-399">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="tools" x="1319" y="-458">		<text>+ `tools`:&#13;
- Os sem-visual, de uso genérico.&#13;
</text>	</mod>	<mod border="0" color="FFFFFF" icons="/Basics/Empty.png" title="Elemento.java" x="1324" y="-395">		<text/>	</mod>	<mod border="0" color="FFFFFF" icons="/Basics/Empty.png" title="Painel.java" x="1324" y="-391">		<text/>	</mod>	<mod border="0" color="FF00FF" icons="/Basics/Empty.png" title="ColorGallery.java" x="1380" y="-441">		<text/>	</mod>	<mod border="0" color="FFAA00" icons="/Basics/Folder.png" title="regex-builder" x="1331" y="-439">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="text" x="1039" y="-451">		<text>+ `text`:&#13;
- Componentes referentes a texto.&#13;
</text>	</mod>	<mod border="0" color="FF00FF" icons="/Basics/Folder.png" title="color-gallery" x="1373" y="-445">		<text/>	</mod>	<mod border="0" color="FF0000" icons="/Basics/Empty.png" title="LanguageManager.java" x="1358" y="-438">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="from-scratch" x="1043" y="-447">		<text>+ `from-scratch`:&#13;
- Feitos do zero.&#13;
</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="markdown" x="1063" y="-443">		<text>+ `markdown`:&#13;
- Editor de texto de markdown feito do zero.&#13;
</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="plain" x="1049" y="-439">		<text>+ `plain`:&#13;
- Editor de texto feito do zero.&#13;
</text>	</mod>	<mod border="0" color="333333" icons="/Basics/Folder.png" title="java-based" x="1043" y="-430">		<text>+ `java-based`:&#13;
- Baseados em ´Java´.&#13;
</text>	</mod>	<mod border="0" color="000000" icons="/Basics/Folder.png" title="mindmarkdown" x="1142" y="-426">		<text>* `mindmarkdown`:&#13;
- Texto baseado em ´Java´ implementando markdown.&#13;
+ Arquitetura:&#13;
:[	MindMarkTexto{&#13;
		MindMarkDocumento{&#13;
			MindMarkAtributo{}&#13;
			//&#13;
			MMBoldAtributo{}&#13;
			MMItalicAtributo{}&#13;
			MMStrikeThroughAtributo{}&#13;
			MMSubscriptAtributo{}&#13;
			MMSuperscriptAtributo{}&#13;
			MMUnderlineAtributo{}&#13;
			//&#13;
			MMHiddenAtributo{}&#13;
			MMHighlightAtributo{}&#13;
			//&#13;
			MMSizeModifierAtributo{}&#13;
			//&#13;
			MMTextStylerAtributo{}&#13;
			MMCitationAtributo{}&#13;
			MMLineAtributo{}&#13;
			MMListAtributo{}&#13;
			MMAnchorAtributo{}&#13;
			MMLinkAtributo{}&#13;
			MMImageAtributo{}&#13;
		}&#13;
		MindMarkEditor{}&#13;
		MindMarkUndoManager{}&#13;
	}]{###`:`}&#13;
+ Interfaces:&#13;
:[	PlainEditor -&gt; MindMarkEditor&#13;
	PlainTexto -&gt; MindMarkTexto&#13;
	PlainViewFactory -&gt; MindMarkViewFactory&#13;
	MindMarkAtributo -&gt; MindMarkSimpleAtributo, MindMarkVariableAtributo]{###`:`}&#13;
&#13;
	&#13;
	&#13;
&lt;mind fontName="Courier New" fontSize="12" fontStyle="0"&gt;&#13;
	&lt;mod border="0" color="000000" icons="/Basics/Empty.png" title="MindMarkSimpleAtributo.java" x="1189" y="-414"&gt;&#13;
		&lt;text/&gt;&#13;
	&lt;/mod&gt;&#13;
	&lt;mod border="0" color="000000" icons="/Basics/Empty.png" title=".java" x="1189" y="-410"&gt;&#13;
		&lt;text/&gt;&#13;
	&lt;/mod&gt;&#13;
	&lt;mod border="0" color="000000" icons="/Basics/Empty.png" title=".java" x="1189" y="-406"&gt;&#13;
		&lt;text/&gt;&#13;
	&lt;/mod&gt;&#13;
	&lt;mod border="0" color="000000" icons="/Basics/Empty.png" title=".java" x="1189" y="-402"&gt;&#13;
		&lt;text/&gt;&#13;
	&lt;/mod&gt;&#13;
	&lt;mod border="0" color="000000" icons="/Basics/Empty.png" title=".java" x="1189" y="-398"&gt;&#13;
		&lt;text/&gt;&#13;
	&lt;/mod&gt;&#13;
	&lt;mod border="0" color="000000" icons="/Basics/Empty.png" title=".java" x="1189" y="-394"&gt;&#13;
		&lt;text/&gt;&#13;
	&lt;/mod&gt;&#13;
	&lt;mod border="0" color="000000" icons="/Basics/Empty.png" title=".java" x="1189" y="-390"&gt;&#13;
		&lt;text/&gt;&#13;
	&lt;/mod&gt;&#13;
	&lt;mod border="0" color="000000" icons="/Basics/Empty.png" title=".java" x="1189" y="-386"&gt;&#13;
		&lt;text/&gt;&#13;
	&lt;/mod&gt;&#13;
	&lt;mod border="0" color="000000" icons="/Basics/Empty.png" title=".java" x="1189" y="-382"&gt;&#13;
		&lt;text/&gt;&#13;
	&lt;/mod&gt;&#13;
	&lt;mod border="0" color="000000" icons="/Basics/Empty.png" title="MindMarkVariableAtributo.java" x="1190" y="-374"&gt;&#13;
		&lt;text/&gt;&#13;
	&lt;/mod&gt;&#13;
	&lt;mod border="0" color="000000" icons="/Basics/Empty.png" title=".java" x="1190" y="-370"&gt;&#13;
		&lt;text/&gt;&#13;
	&lt;/mod&gt;&#13;
	&lt;mod border="0" color="000000" icons="/Basics/Empty.png" title=".java" x="1190" y="-366"&gt;&#13;
		&lt;text/&gt;&#13;
	&lt;/mod&gt;&#13;
	&lt;mod border="0" color="000000" icons="/Basics/Empty.png" title=".java" x="1190" y="-362"&gt;&#13;
		&lt;text/&gt;&#13;
	&lt;/mod&gt;&#13;
&lt;/mind&gt;&#13;
</text>	</mod>	<mod border="0" color="000000" icons="/Basics/Folder.png" title="attribute" x="1148" y="-422">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Folder.png" title="simple" x="1153" y="-418">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Folder.png" title="variable" x="1153" y="-378">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Folder.png" title="view" x="1148" y="-334">		<text/>	</mod>	<mod border="0" color="333333" icons="/Basics/Folder.png" title="view" x="1053" y="-419">		<text>+ `view`:&#13;
- Fábricas de views.&#13;
</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Empty.png" title="Markdown.java" x="1068" y="-439">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Empty.png" title="Texto.java" x="1054" y="-435">		<text/>	</mod>	<mod border="0" color="333333" icons="/Basics/Empty.png" title="PlainLabelView.java" x="1057" y="-415">		<text/>	</mod>	<mod border="0" color="333333" icons="/Basics/Empty.png" title="PlainParagraphView.java" x="1057" y="-411">		<text/>	</mod>	<mod border="0" color="333333" icons="/Basics/Empty.png" title="PlainViewFactory.java" x="1057" y="-407">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="list-structure" x="1436" y="-454">		<text>+ `list-structure`:&#13;
- Uma série de listas de utilidades variadas.&#13;
</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="HashList.java" x="1443" y="-450">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="SortedList.java" x="1443" y="-446">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MindMarkSimpleAtributo.java" x="1157" y="-414">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMBoldAtributo.java" x="1157" y="-410">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMHiddenAtributo.java" x="1157" y="-386">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMHighlightAtributo.java" x="1157" y="-382">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMItalicAtributo.java" x="1157" y="-406">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMStrikeThroughAtributo.java" x="1157" y="-402">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMSubscriptAtributo.java" x="1157" y="-398">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMSuperscriptAtributo.java" x="1157" y="-394">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMUnderlineAtributo.java" x="1157" y="-390">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MindMarkVariableAtributo.java" x="1158" y="-374">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMImageAtributo.java" x="1158" y="-370">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMLinkAtributo.java" x="1158" y="-366">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMTextStylerAtributo.java" x="1158" y="-362">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMParagraphCitationView.java" x="1152" y="-330">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMParagraphImageView.java" x="1152" y="-326">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMParagraphLineView.java" x="1152" y="-322">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMParagraphListView.java" x="1152" y="-318">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MindMarkParagraphView.java" x="1152" y="-314">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MindMarkViewFactory.java" x="1152" y="-310">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MindMarkDocumento.java" x="1148" y="-302">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MindMarkEditor.java" x="1148" y="-306">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MindMarkTexto.java" x="1148" y="-294">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MindMarkUndoManager.java" x="1148" y="-298">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="architecture" x="1276" y="-452">		<text>+ `architecture`:&#13;
- Organizadores de código de software.&#13;
</text>	</mod>	<mod border="0" color="FFFFFF" icons="/Basics/Empty.png" title="Root.java" x="1286" y="-443">		<text>+ `Root.java`:&#13;
- Uma ´interface´.&#13;
- Obriga uma classe a ter um ´Rule´, ´Flow´, ´View´, e ´Plan´.&#13;
. Também a ter um ´method´ `init()`.&#13;
</text>	</mod>	<mod border="0" color="FFFFFF" icons="/Basics/Folder.png" title="rrf-vp" x="1282" y="-447">		<text>* `rrf-vp`:&#13;
- Uma arquitetura de software.&#13;
+ `Root`:&#13;
- A base e a face do componente, conectando todas as partes.&#13;
. Ele permite que as partes se comuniquem entre si e define quais são as funções que são visíveis publicamente para o resto do sistema.&#13;
- Um `init()` seu chama o `init()` de ´Rule´, ´Flow´, ´View´, e ´Plan´.&#13;
. Isso garante que todos estejam sincronizados.&#13;
+ `View`:&#13;
- Requer iniciar com uma referência a um ´Root´.&#13;
- Carrega toda a parte responsável pelo visual do componente.&#13;
. Basicamente, *define o que aparece*.&#13;
- É onde ficam as variáveis de posição, os métodos como o `draw()`, etc.&#13;
+ `Flow`:&#13;
- Requer iniciar com uma referência a um ´Root´.&#13;
- Carrega todo os "comportamentos" do componente.&#13;
. Basicamente, *define como acontece*.&#13;
- É onde ficam as coisas que mudam de acordo com inputs: Os ´states´.&#13;
. Todas as ações são o que o componente faz sozinho, sem inputs do resto do sistema.&#13;
  (Um botão recebendo um click, respondendo a um cursor acima, etc).&#13;
- Podem haver funções para diminuir código e facilitar a clareza do fluxo.&#13;
+ `Plan`:&#13;
- Requer iniciar com uma referência a um ´Root´.&#13;
- Carrega tudo o que o componente pode fazer.&#13;
. Basicamente, *define o que acontece*.&#13;
- É onde ficam todas as lógicas do componente.&#13;
+ `Rule`:&#13;
- Requer iniciar com uma referência a um ´Root´.&#13;
- Carrega todas as regras do componente.&#13;
. Basicamente, *define o que pode acontecer*.&#13;
- É onde ficam os métodos usados para garantir que regras sejam seguidas.&#13;
. Nele, existem *apenas* funções que retornam um boolean, e variáveis constantes.&#13;
+ _Comportamento_:&#13;
- Um dos métodos de ´Root´ é chamado.&#13;
|- Este chama o ´Plan´ ou ´View´.&#13;
|- Este chama o ´Rule´, que checa se o comando é válido.&#13;
|- Validado, o ´Plan´ ou ´View´ executa o comando.&#13;
- O ´Root´ sempre chama *apenas* o ´Plan´ ou ´View´.&#13;
- O ´Flow´ define o comportamento autônomo do componente, o que ele faz agindo sozinho.&#13;
. Ambos os ´View´ e ´Plan´ podem ser chamados por ele.&#13;
- O ´Rule´ é constantemente consultado pelo ´Plan´ e ´View´ por permissões e validações.&#13;
. O ´Flow´ é constantemente consultado pelo ´Rule´, ´Plan´, e ´View´ para definir seu comportamento.&#13;
+ _Regras_:&#13;
- Todos devem ter um método `init()`.&#13;
- O `Root`, é `public`, mas os outros são escondidos, visíveis apenas para ele e entre si.&#13;
- Cada parte pode ter sub-partes, que agrupam uma lógica.&#13;
. Eles devem ter uma referência para a parte a que servem.&#13;
</text>	</mod>	<mod border="0" color="FFFFFF" icons="/Basics/Empty.png" title="Rule.java" x="1286" y="-439">		<text>+ `Rule.java`:&#13;
- Uma ´interface´.&#13;
- Obriga uma classe a ter um ´Root´.&#13;
. Também a ter um ´method´ `init()`.&#13;
</text>	</mod>	<mod border="0" color="FFFFFF" icons="/Basics/Empty.png" title="Flow.java" x="1286" y="-435">		<text>+ `Flow.java`:&#13;
- Uma ´interface´.&#13;
- Obriga uma classe a ter um ´Root´.&#13;
. Também a ter um ´method´ `init()`.&#13;
</text>	</mod>	<mod border="0" color="FFFFFF" icons="/Basics/Empty.png" title="View.java" x="1286" y="-431">		<text>+ `View.java`:&#13;
- Uma ´interface´.&#13;
- Obriga uma classe a ter um ´Root´.&#13;
. Também a ter um ´method´ `init()`.&#13;
</text>	</mod>	<mod border="0" color="FFFFFF" icons="/Basics/Empty.png" title="Plan.java" x="1286" y="-427">		<text>+ `Plan.java`:&#13;
- Uma ´interface´.&#13;
- Obriga uma classe a ter um ´Root´.&#13;
. Também a ter um ´method´ `init()`.&#13;
</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="objects" x="1278" y="-355">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="window" x="1039" y="-394">		<text>+ `window`:&#13;
- Componentes referentes a janelas.&#13;
</text>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="ConexaoPlan.java" x="1288" y="-283">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="ConexaoView.java" x="1288" y="-287">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="ConexaoFlow.java" x="1288" y="-291">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="ConexaoRule.java" x="1288" y="-295">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Conexao.java" x="1288" y="-299">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Segmento.java" x="1293" y="-319">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="SegmentoRule.java" x="1293" y="-315">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="SegmentoFlow.java" x="1293" y="-311">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="SegmentoView.java" x="1293" y="-307">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="SegmentoPlan.java" x="1293" y="-303">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Modulo.java" x="1287" y="-347">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="ModuloRule.java" x="1287" y="-343">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="ModuloFlow.java" x="1287" y="-339">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="ModuloView.java" x="1287" y="-335">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="ModuloPlan.java" x="1287" y="-331">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Nodulo.java" x="1287" y="-275">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="NoduloRule.java" x="1287" y="-271">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="NoduloFlow.java" x="1287" y="-267">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="NoduloView.java" x="1287" y="-263">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="NoduloPlan.java" x="1287" y="-259">		<text/>	</mod>	<mod border="0" color="FF0000" icons="/Basics/Folder.png" title="language-manager" x="1351" y="-442">		<text/>	</mod>	<mod border="0" color="FFAA00" icons="/Basics/Empty.png" title="RegexBuilder.java" x="1338" y="-435">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="UndoRedoManager.java" x="1401" y="-444">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Chunck.java" x="1423" y="-371">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="ChunckView.java" x="1423" y="-367">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="ChunckPlan.java" x="1423" y="-363">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="SelectionAreaPlan.java" x="1403" y="-351">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="SelectionAreaView.java" x="1403" y="-355">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="SelectionAreaFlow.java" x="1403" y="-359">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="SelectionAreaRule.java" x="1403" y="-363">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="SelectionArea.java" x="1403" y="-367">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="CursorPlan.java" x="1382" y="-347">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="CursorView.java" x="1382" y="-351">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="CursorFlow.java" x="1382" y="-355">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="CursorRule.java" x="1382" y="-359">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Cursor.java" x="1382" y="-363">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="input" x="1039" y="-314">		<text>+ `input`:&#13;
- Componentes referentes a inputs.&#13;
</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="botao" x="1043" y="-310">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Empty.png" title="BotaoPlan.java" x="1047" y="-290">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Empty.png" title="BotaoView.java" x="1047" y="-294">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Empty.png" title="BotaoFlow.java" x="1047" y="-298">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Empty.png" title="BotaoRule.java" x="1047" y="-302">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Empty.png" title="Botao.java" x="1047" y="-306">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="MindSortPlan.java" x="1625" y="-372">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="MindSortView.java" x="1625" y="-376">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="MindSortFlow.java" x="1625" y="-380">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="MindSortRule.java" x="1625" y="-384">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="MindSort.java" x="1625" y="-388">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="MindSort" x="1617" y="-468">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Duplicate.png" title="icones.png" x="1626" y="-460">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Duplicate.png" title="LINGUAGENS.lang" x="1627" y="-452">		<text/>	</mod>	<mod border="0" color="0000FF" icons="/Basics/Folder.png" title="micro-state" x="1282" y="-422">		<text/>	</mod>	<mod border="0" color="0000FF" icons="/Basics/Empty.png" title="MicroState.java" x="1288" y="-418">		<text/>	</mod>	<mod border="0" color="9900CC" icons="/Basics/Folder.png" title="macro-state" x="1282" y="-413">		<text/>	</mod>	<mod border="0" color="9900CC" icons="/Basics/Empty.png" title="MacroState.java" x="1288" y="-409">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="cursors" x="1328" y="-383">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Duplicate.png" title="cursores.png" x="1333" y="-379">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="icons" x="1625" y="-444">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Duplicate.png" title="icones.png" x="1629" y="-432">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="menu" x="1629" y="-440">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Duplicate.png" title="icones.png" x="1633" y="-436">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="icons" x="1359" y="-359">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Duplicate.png" title="icones.png" x="1363" y="-347">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="popup" x="1043" y="-286">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Empty.png" title="PopupPlan.java" x="1047" y="-250">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Empty.png" title="PopupView.java" x="1047" y="-254">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Empty.png" title="PopupFlow.java" x="1047" y="-258">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Empty.png" title="PopupRule.java" x="1047" y="-262">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Empty.png" title="Popup.java" x="1047" y="-266">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="submenu" x="1047" y="-282">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="item" x="1047" y="-278">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="grid" x="1047" y="-274">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="item" x="1051" y="-270">		<text/>	</mod>	<mod border="0" color="FF66FF" icons="/Basics/Folder.png" title="color-manager" x="1416" y="-451">		<text/>	</mod>	<mod border="0" color="FF66FF" icons="/Basics/Empty.png" title="ColorManager.java" x="1423" y="-447">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="cursors" x="1363" y="-355">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Duplicate.png" title="icones.png" x="1368" y="-351">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Empty.png" title="Botao.java" x="1047" y="-238">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="menu" x="1043" y="-246">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Empty.png" title="Menu.java" x="1047" y="-242">		<text/>	</mod>	<mod border="0" color="999999" icons="/Basics/Empty.png" title="Toggle.java" x="1047" y="-234">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="MenuPlan.java" x="1629" y="-408">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="MenuView.java" x="1629" y="-412">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="MenuFlow.java" x="1629" y="-416">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="MenuRule.java" x="1629" y="-420">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Menu.java" x="1629" y="-424">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Janela.java" x="1629" y="-392">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Searcher.java" x="1630" y="-400">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Folder.png" title="searcher" x="1043" y="-339">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="SearcherPlan.java" x="1048" y="-319">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="SearcherView.java" x="1048" y="-323">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="SearcherFlow.java" x="1048" y="-327">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="SearcherRule.java" x="1048" y="-331">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Searcher.java" x="1048" y="-335">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Popup.java" x="1359" y="-343">		<text/>	</mod>	<mod border="0" color="DCDCDC" icons="/Basics/Empty.png" title="Texto.java" x="1343" y="-355">		<text/>	</mod>	<mod border="0" color="33CCFF" icons="/Basics/Empty.png" title="GlassWindowPlan.java" x="1049" y="-344">		<text/>	</mod>	<mod border="0" color="33CCFF" icons="/Basics/Empty.png" title="GlassWindowView.java" x="1049" y="-348">		<text/>	</mod>	<mod border="0" color="33CCFF" icons="/Basics/Empty.png" title="GlassWindowFlow.java" x="1049" y="-352">		<text/>	</mod>	<mod border="0" color="33CCFF" icons="/Basics/Empty.png" title="GlassWindowRule.java" x="1049" y="-356">		<text/>	</mod>	<mod border="0" color="33CCFF" icons="/Basics/Empty.png" title="GlassWindow.java" x="1049" y="-360">		<text/>	</mod>	<mod border="0" color="0000FF" icons="/Basics/Empty.png" title="FontChooser.java" x="1049" y="-385">		<text/>	</mod>	<mod border="0" color="0000FF" icons="/Basics/Empty.png" title="FontChooserRule.java" x="1049" y="-381">		<text/>	</mod>	<mod border="0" color="0000FF" icons="/Basics/Empty.png" title="FontChooserFlow.java" x="1049" y="-377">		<text/>	</mod>	<mod border="0" color="0000FF" icons="/Basics/Empty.png" title="FontChooserView.java" x="1049" y="-373">		<text/>	</mod>	<mod border="0" color="0000FF" icons="/Basics/Empty.png" title="FontChooserPlan.java" x="1049" y="-369">		<text/>	</mod>	<mod border="0" color="FFFFFF" icons="" title="JANELA" x="1332" y="-391">		<text>* JANELA:&#13;
- Uma referência a um objeto `Window` que o possúi.&#13;
+ `private Window janela`;&#13;
|+ `public Window getJanela()`;&#13;
</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="LOCAL" x="1339" y="-395">		<text>+ LOCAL:&#13;
- Define o local onde aparece.&#13;
+ `protected int x`;&#13;
|+ `public int getX()`;&#13;
|+ `public void setX(int x)`; //Considera o `insert.top` da janela do painel junto.&#13;
+ `protected int y`;&#13;
|+ `public int getY()`;&#13;
|+ `public void setY(int y)`; //Considera o `insert.top` da janela do painel junto.&#13;
+ `public Point getLocation()`;&#13;
+ `public void setLocation(int x,int y)`;&#13;
</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="PAINEL" x="1334" y="-395">		<text>* PAINEL:&#13;
- Uma referência para o `Painel` que o possúi.&#13;
+ `protected Painel painel`;&#13;
+ `public Painel getPainel()`;&#13;
</text>	</mod>	<mod border="0" color="999999" icons="/Basics/Folder.png" title="component" x="1034" y="-455">		<text>+ `component`:&#13;
- Os que podem ser usados em partes de sistemas.&#13;
</text>	</mod>	<mod border="0" color="333333" icons="/Basics/Empty.png" title="PlainTexto.java" x="1053" y="-399">		<text/>	</mod>	<mod border="0" color="333333" icons="/Basics/Empty.png" title="PlainEditor.java" x="1053" y="-403">		<text/>	</mod>	<mod border="0" color="333333" icons="/Basics/Folder.png" title="plain" x="1049" y="-423">		<text>* `plain`:&#13;
- Texto simples baseado em ´Java´.&#13;
+ Arquitetura:&#13;
:[	PlainTexto{&#13;
		PlainEditor{&#13;
			PlainViewFactory{&#13;
				PlainLabelView{}&#13;
				PlainParagraphView{}&#13;
			}&#13;
		}&#13;
	}]{###`:`}&#13;
- `PlainTexto` é baseado em `JTextPane` e pode ser usado como um.&#13;
</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="FORM" x="1344" y="-395">		<text>* FORM:&#13;
- Define o tamanho.&#13;
+ `protected int width`;&#13;
|+ `public int getWidth()`;&#13;
|+ `public void setWidth(int width)`;&#13;
+ `protected int height`;&#13;
|+ `public int getHeight()`;&#13;
|+ `public void setHeight(int height)`;&#13;
+ `public Dimension getSize()`;&#13;
+ `public void setSize(int width,int height)`;&#13;
+ `public Rectangle getBounds()`;&#13;
+ `public Rectangle getRelativeBounds()`; //Desconsidera `x` e `y`, retornando o local como 0,0.&#13;
+ `public void setBounds(int x,int y,int width,int height)`;&#13;
+ `public void setBounds(Rectangle r)`;&#13;
</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="IMAGEM" x="1348" y="-395">		<text>* IMAGEM:&#13;
- Uma imagem do elemento, guardada para não ser necessário o redesenhar o tempo todo.&#13;
+ `protected Image print`; //Variável que recebe o draw de buffer, a imagem final que é guardada.&#13;
|+ `protected Image getPrint()`;&#13;
+ `private Image buffer`; //Variável que recebe os draws do componente.&#13;
+ `private boolean sizeChanged`; //Define se é necessário atualizar a imagem.&#13;
|+ `private void resizePrint()`; //Atualiza o tamanho do `print` e `buffer`.&#13;
</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="VISIBILIDADE" x="1353" y="-395">		<text>+ VISIBILIDADE:&#13;
- Se o elemento está visível ou não.&#13;
+ `protected boolean visible`;&#13;
|+ `public boolean isVisible()`;}&#13;
|+ `public void setVisible(boolean visible)`;&#13;
</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="MAIN&#10;" x="1362" y="-394">		<text>+ MAIN:&#13;
- Deve ter um `Painel` como referência.&#13;
+ `public Elemento(Painel painel)`;&#13;
</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="CLEAR" x="1334" y="-393">		<text>+ CLEAR:&#13;
- Limpa as imagens.&#13;
+ `public void clearDraw()`;&#13;
|+ `private void clear(Graphics2D imagemEdit)`; //Chamado pelo `clearDraw()` para o `print` e o `buffer`.&#13;
</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="DRAW" x="1339" y="-393">		<text>+ DRAW:&#13;
- Desenha o visual do elemento.&#13;
+ `public synchronized void draw()`;&#13;
|+ `protected void draw(Graphics2D imagemEdit)`; //Vazio. Deve ser ´overrided´ com os comandos para desenhar o elemento.&#13;
</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="ELEMENTOS" x="1337" y="-391">		<text>* ELEMENTOS:&#13;
- Lista de `Elemento`s que possúi.&#13;
+ `private List&lt;Elemento&gt;elems`;&#13;
|+ `public List&lt;Elemento&gt;getElems()`;&#13;
|+ `public void add(Elemento elem)`;&#13;
|+ `public void del(Elemento elem)`;&#13;
</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="MAIN&#10;" x="1344" y="-390">		<text>* MAIN:&#13;
- Requer um `Window` de referência.&#13;
+ `public Painel(Window janela)`;&#13;
</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="FUNCS" x="1332" y="-389">		<text>* FUNCS:&#13;
+ `@Override public Point getToolTipLocation(MouseEvent m)`; //Retorna 0,0, colocando o tooltip sempre no canto.&#13;
</text>	</mod>	<mod border="0" color="FFFFFF" icons="" title="DRAW" x="1337" y="-389">		<text>* DRAW:&#13;
- Desenha os elementos que possúi.&#13;
+ `@Override protected void paintComponent(Graphics quadro)`;&#13;
</text>	</mod>	<mod border="0" color="333333" icons="" title="EDITOR_KIT" x="1070" y="-415">		<text>* EDITOR_KIT:&#13;
- Referência para o `PlainEditor` que o possúi.&#13;
+ `private SimpleEditor editorKit`;&#13;
</text>	</mod>	<mod border="0" color="333333" icons="" title="MAIN&#10;" x="1079" y="-414">		<text>* MAIN:&#13;
- Requer uma referência a um `Element`(Por padrão) e um `PlainEditor`.&#13;
+ `public SimpleLabelView(Element elem,SimpleEditor editor)`;&#13;
</text>	</mod>	<mod border="0" color="333333" icons="" title="FUNCS" x="1070" y="-413">		<text>* FUNCS:&#13;
+ `@Override public float getMinimumSpan(int axis)`; // </text>	</mod>	<mod border="0" color="333333" icons="" title="DRAW" x="1075" y="-413">		<text/>	</mod>	<mod border="0" color="333333" icons="" title="EDITOR_KIT" x="1073" y="-411">		<text>* EDITOR_KIT:&#13;
- Referência para o `PlainEditor` que o possúi.&#13;
+ `private SimpleEditor editorKit`;&#13;
</text>	</mod>	<mod border="0" color="333333" icons="" title="FUNCS" x="1073" y="-409">		<text/>	</mod>	<mod border="0" color="333333" icons="" title="MAIN&#10;" x="1081" y="-410">		<text/>	</mod>	<mod border="0" color="333333" icons="" title="FUNCS" x="1072" y="-405">		<text/>	</mod>	<mod border="0" color="333333" icons="" title="EDITOR_KIT" x="1072" y="-407">		<text>* EDITOR_KIT:&#13;
- Referência para o `PlainEditor` que o possúi.&#13;
+ `private SimpleEditor editorKit`;&#13;
</text>	</mod>	<mod border="0" color="333333" icons="" title="MAIN&#10;" x="1080" y="-406">		<text/>	</mod>	<mod border="0" color="333333" icons="" title="VAR GLOBAIS" x="1064" y="-403">		<text/>	</mod>	<mod border="0" color="333333" icons="" title="QUEBRA DE LINHA" x="1072" y="-403">		<text/>	</mod>	<mod border="0" color="333333" icons="" title="CARACTERES INVISÍVEIS" x="1083" y="-403">		<text/>	</mod>	<mod border="0" color="333333" icons="" title="TAMANHO DO TAB" x="1098" y="-403">		<text/>	</mod>	<mod border="0" color="333333" icons="" title="INTERFACE" x="1108" y="-403">		<text/>	</mod>	<mod border="0" color="333333" icons="" title="MAIN&#10;" x="1115" y="-402">		<text/>	</mod>	<mod border="0" color="333333" icons="" title="UNDO-REDO" x="1064" y="-399">		<text/>	</mod>	<mod border="0" color="333333" icons="" title="EDITOR CUSTOM" x="1071" y="-399">		<text/>	</mod>	<mod border="0" color="333333" icons="" title="MAIN&#10;" x="1081" y="-398">		<text/>	</mod>	<mod border="0" color="333333" icons="" title="FUNCS" x="1064" y="-397">		<text/>	</mod>	<mod border="0" color="333333" icons="" title="DRAW" x="1069" y="-397">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="FORMAT_VIEWMODE" x="1161" y="-294">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="DOCUMENTO" x="1172" y="-294">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1179" y="-293">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="FUNCS" x="1161" y="-292">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="INTERFACE" x="1161" y="-306">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="TEXTO" x="1168" y="-306">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="DOCUMENTO" x="1173" y="-306">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="IMAGENS" x="1180" y="-306">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1186" y="-305">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="ATRIBUTO BY WORD" x="1163" y="-302">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="ATRIBUTO BY LINE" x="1174" y="-302">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="ATRIBUTO BY PARAGRAPH" x="1185" y="-302">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="DEFAULT" x="1200" y="-302">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="SECTION" x="1206" y="-302">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1212" y="-301">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="FUNCS" x="1163" y="-300">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="DISABLED" x="1164" y="-298">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1170" y="-297">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="FUNCS" x="1164" y="-296">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1173" y="-309">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="FUNCS" x="1168" y="-308">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="TEXT" x="1170" y="-314">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="VIEWS" x="1174" y="-314">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1179" y="-313">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="FUNCS" x="1170" y="-312">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="VIEW_PAI" x="1168" y="-318">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1174" y="-317">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="DRAW" x="1168" y="-316">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="VIEW_PAI" x="1168" y="-322">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1178" y="-321">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="DRAW" x="1168" y="-320">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="LINE" x="1174" y="-322">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="VIEW_PAI" x="1169" y="-326">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="EDITOR" x="1175" y="-326">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="DRAW" x="1169" y="-324">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1180" y="-325">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1177" y="-329">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="VIEW_PAI" x="1171" y="-330">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="DRAW" x="1171" y="-328">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MindMarkAtributo.java" x="1153" y="-358">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMAnchorAtributo.java" x="1153" y="-354">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMCitationAtributo.java" x="1153" y="-350">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMLineAtributo.java" x="1153" y="-346">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMListAtributo.java" x="1153" y="-342">		<text/>	</mod>	<mod border="0" color="000000" icons="/Basics/Empty.png" title="MMSizeModifierAtributo.java" x="1153" y="-338">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="SYMBOLS" x="1184" y="-338">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="TAGS" x="1190" y="-338">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="DEFINITIONS" x="1194" y="-338">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="FONTE_SIZE" x="1202" y="-338">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="VAR GLOBAIS: SIZES" x="1171" y="-338">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1210" y="-337">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="FUNCS" x="1171" y="-336">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="ESCAPE" x="1168" y="-358">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="VAR STATICS" x="1173" y="-358">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MATCH" x="1181" y="-358">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="ATRIBUTE_LIST" x="1186" y="-358">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1196" y="-357">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="FUNCS: ESCAPE" x="1168" y="-356">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="FUNCS: STYLE" x="1178" y="-356">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="FUNCS" x="1187" y="-356">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="TAGS" x="1168" y="-354">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="DEFINITIONS" x="1172" y="-354">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1180" y="-353">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="FUNCS" x="1168" y="-352">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="VAR GLOBAIS" x="1169" y="-350">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="SYMBOLS" x="1189" y="-350">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="TAGS" x="1195" y="-350">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="DEFINITIONS" x="1199" y="-350">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="VAR GLOBAIS: LINE" x="1177" y="-350">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="CITATION" x="1207" y="-350">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1213" y="-349">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="FUNCS" x="1169" y="-348">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="SYMBOLS" x="1174" y="-346">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="TAGS" x="1180" y="-346">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="DEFINITIONS" x="1184" y="-346">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="VAR GLOBAIS" x="1166" y="-346">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="LINE" x="1192" y="-346">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1196" y="-345">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="FUNCS" x="1166" y="-344">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="VAR GLOBAIS" x="1166" y="-342">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="SYMBOLS" x="1199" y="-342">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="TAGS" x="1205" y="-342">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="DEFINITIONS" x="1209" y="-342">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="VAR GLOBAIS: BULLET" x="1174" y="-342">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="VAR GLOBAIS: LINE" x="1187" y="-342">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="LIST" x="1217" y="-342">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1221" y="-341">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="FUNCS" x="1166" y="-340">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="TAGS" x="1187" y="-374">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="VARS GLOBAIS" x="1178" y="-374">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="DEFINITIONS" x="1191" y="-374">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1199" y="-373">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="FUNCS" x="1178" y="-372">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="SYMBOLS" x="1180" y="-370">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="TAGS" x="1186" y="-370">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="DEFINITION" x="1190" y="-370">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="VAR GLOBAIS" x="1172" y="-370">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="IMAGE" x="1198" y="-370">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1203" y="-369">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="FUNCS" x="1172" y="-368">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="VAR GLOBAIS" x="1171" y="-366">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="SYMBOLS" x="1179" y="-366">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="TAGS" x="1185" y="-366">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="DEFINITION" x="1189" y="-366">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="LINK" x="1197" y="-366">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1201" y="-365">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="FUNCS" x="1171" y="-364">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="VAR GLOBAIS" x="1175" y="-362">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="SYMBOLS" x="1183" y="-362">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="TAGS" x="1189" y="-362">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="DEFINITION" x="1193" y="-362">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="COLOR_SECTION" x="1201" y="-362">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1211" y="-361">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="FUNCS" x="1175" y="-360">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="TAG" x="1173" y="-390">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1176" y="-389">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="TAG" x="1180" y="-386">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1183" y="-385">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="TAG" x="1181" y="-382">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1184" y="-381">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="TAG" x="1175" y="-394">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1178" y="-393">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="TAG" x="1173" y="-398">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1176" y="-397">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="TAG" x="1176" y="-402">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1179" y="-401">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="TAG" x="1172" y="-406">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1175" y="-405">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="TAG" x="1170" y="-410">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="MAIN&#10;" x="1173" y="-409">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="VAR GLOBAIS" x="1172" y="-386">		<text/>	</mod>	<mod border="0" color="000000" icons="" title="VAR GLOBAIS" x="1173" y="-382">		<text/>	</mod>	<cox border="0" pai="0" son="35" width="0">		<text/>	</cox>	<cox border="0" pai="0" son="45" width="0">		<text/>	</cox>	<cox border="0" pai="0" son="591" width="3">		<text/>	</cox>	<cox border="0" pai="0" son="929" width="3">		<text/>	</cox>	<cox border="0" pai="0" son="959" width="3">		<text/>		<nod x="1507" y="-477"/>		<nod x="927" y="-477"/>	</cox>	<cox border="0" pai="35" son="1" width="0">		<text/>	</cox>	<cox border="0" pai="10" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="12" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="36" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="61" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="103" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="137" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="153" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="110" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="99" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="173" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="181" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="188" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="195" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="221" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="240" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="84" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="246" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="299" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="285" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="294" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="332" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="269" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="343" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="419" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="446" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="242" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="243" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="159" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="161" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="160" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="158" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="2" son="509" width="0">		<text/>	</cox>	<cox border="0" pai="2" son="510" width="0">		<text/>	</cox>	<cox border="0" pai="578" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="841" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="843" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="826" son="2" width="1">		<text/>	</cox>	<cox border="0" pai="809" son="2" width="0">		<text/>	</cox>	<cox border="0" pai="2" son="176" width="0">		<text/>		<nod x="985" y="309"/>		<nod x="985" y="307"/>	</cox>	<cox border="0" pai="2" son="177" width="0">		<text/>		<nod x="985" y="312"/>		<nod x="985" y="307"/>	</cox>	<cox border="0" pai="2" son="172" width="0">		<text/>		<nod x="985" y="315"/>		<nod x="985" y="307"/>	</cox>	<cox border="0" pai="3" son="4" width="0">		<text/>	</cox>	<cox border="0" pai="20" son="3" width="1">		<text/>	</cox>	<cox border="0" pai="105" son="3" width="1">		<text/>	</cox>	<cox border="0" pai="174" son="3" width="1">		<text/>	</cox>	<cox border="0" pai="176" son="3" width="1">		<text/>	</cox>	<cox border="0" pai="197" son="3" width="1">		<text/>	</cox>	<cox border="0" pai="254" son="3" width="1">		<text/>	</cox>	<cox border="0" pai="268" son="3" width="1">		<text/>	</cox>	<cox border="0" pai="432" son="3" width="1">		<text/>	</cox>	<cox border="0" pai="3" son="506" width="0">		<text/>	</cox>	<cox border="0" pai="3" son="180" width="0">		<text/>		<nod x="1164" y="519"/>		<nod x="1164" y="511"/>	</cox>	<cox border="0" pai="3" son="181" width="0">		<text/>		<nod x="1164" y="513"/>		<nod x="1164" y="511"/>	</cox>	<cox border="0" pai="3" son="182" width="0">		<text/>		<nod x="1164" y="516"/>		<nod x="1164" y="511"/>	</cox>	<cox border="0" pai="9" son="5" width="1">		<text/>	</cox>	<cox border="0" pai="24" son="5" width="1">		<text/>	</cox>	<cox border="0" pai="106" son="5" width="1">		<text/>	</cox>	<cox border="0" pai="245" son="5" width="1">		<text/>	</cox>	<cox border="0" pai="5" son="528" width="0">		<text/>	</cox>	<cox border="0" pai="5" son="529" width="0">		<text/>	</cox>	<cox border="0" pai="5" son="530" width="0">		<text/>	</cox>	<cox border="0" pai="6" son="188" width="0">		<text/>	</cox>	<cox border="0" pai="6" son="189" width="0">		<text/>	</cox>	<cox border="0" pai="529" son="6" width="0">		<text/>	</cox>	<cox border="0" pai="7" son="199" width="0">		<text/>	</cox>	<cox border="0" pai="7" son="200" width="0">		<text/>	</cox>	<cox border="0" pai="530" son="7" width="0">		<text/>	</cox>	<cox border="0" pai="28" son="8" width="1">		<text/>	</cox>	<cox border="0" pai="199" son="8" width="1">		<text/>	</cox>	<cox border="0" pai="8" son="533" width="0">		<text/>	</cox>	<cox border="0" pai="8" son="536" width="0">		<text/>	</cox>	<cox border="0" pai="8" son="537" width="0">		<text/>	</cox>	<cox border="0" pai="575" son="8" width="1">		<text/>	</cox>	<cox border="0" pai="574" son="8" width="1">		<text/>	</cox>	<cox border="0" pai="29" son="9" width="0">		<text/>	</cox>	<cox border="0" pai="533" son="10" width="0">		<text/>	</cox>	<cox border="0" pai="16" son="11" width="1">		<text/>	</cox>	<cox border="0" pai="11" son="43" width="0">		<text/>	</cox>	<cox border="0" pai="11" son="51" width="0">		<text/>	</cox>	<cox border="0" pai="102" son="11" width="1">		<text/>	</cox>	<cox border="0" pai="104" son="11" width="1">		<text/>	</cox>	<cox border="0" pai="191" son="11" width="1">		<text/>	</cox>	<cox border="0" pai="223" son="11" width="1">		<text/>	</cox>	<cox border="0" pai="247" son="11" width="1">		<text/>	</cox>	<cox border="0" pai="255" son="11" width="1">		<text/>	</cox>	<cox border="0" pai="11" son="538" width="0">		<text/>	</cox>	<cox border="0" pai="11" son="539" width="0">		<text/>	</cox>	<cox border="0" pai="11" son="541" width="0">		<text/>	</cox>	<cox border="0" pai="11" son="543" width="0">		<text/>	</cox>	<cox border="0" pai="196" son="11" width="1">		<text/>	</cox>	<cox border="0" pai="579" son="11" width="1">		<text/>	</cox>	<cox border="0" pai="744" son="11" width="1">		<text/>	</cox>	<cox border="0" pai="844" son="11" width="1">		<text/>	</cox>	<cox border="0" pai="11" son="862" width="0">		<text/>	</cox>	<cox border="0" pai="539" son="12" width="0">		<text/>	</cox>	<cox border="0" pai="14" son="13" width="1">		<text/>	</cox>	<cox border="0" pai="212" son="13" width="1">		<text/>	</cox>	<cox border="0" pai="219" son="13" width="1">		<text/>	</cox>	<cox border="0" pai="227" son="13" width="1">		<text/>	</cox>	<cox border="0" pai="229" son="13" width="1">		<text/>	</cox>	<cox border="0" pai="251" son="13" width="1">		<text/>	</cox>	<cox border="0" pai="257" son="13" width="1">		<text/>	</cox>	<cox border="0" pai="13" son="540" width="0">		<text/>	</cox>	<cox border="0" pai="13" son="542" width="0">		<text/>	</cox>	<cox border="0" pai="13" son="544" width="0">		<text/>	</cox>	<cox border="0" pai="13" son="545" width="0">		<text/>	</cox>	<cox border="0" pai="576" son="13" width="1">		<text/>	</cox>	<cox border="0" pai="233" son="13" width="1">		<text/>	</cox>	<cox border="0" pai="538" son="14" width="0">		<text/>	</cox>	<cox border="0" pai="545" son="15" width="0">		<text/>	</cox>	<cox border="0" pai="540" son="16" width="0">		<text/>	</cox>	<cox border="0" pai="17" son="18" width="1">		<text/>	</cox>	<cox border="0" pai="506" son="17" width="0">		<text/>	</cox>	<cox border="0" pai="220" son="18" width="1">		<text/>	</cox>	<cox border="0" pai="230" son="18" width="1">		<text/>	</cox>	<cox border="0" pai="256" son="18" width="1">		<text/>	</cox>	<cox border="0" pai="396" son="18" width="1">		<text/>	</cox>	<cox border="0" pai="402" son="18" width="1">		<text/>	</cox>	<cox border="0" pai="405" son="18" width="1">		<text/>	</cox>	<cox border="0" pai="18" son="507" width="0">		<text/>	</cox>	<cox border="0" pai="18" son="508" width="0">		<text/>	</cox>	<cox border="0" pai="18" son="399" width="0">		<text/>		<nod x="1164" y="529"/>		<nod x="1164" y="527"/>	</cox>	<cox border="0" pai="18" son="400" width="0">		<text/>		<nod x="1164" y="532"/>		<nod x="1164" y="527"/>	</cox>	<cox border="0" pai="18" son="398" width="0">		<text/>		<nod x="1164" y="535"/>		<nod x="1164" y="527"/>	</cox>	<cox border="0" pai="508" son="19" width="0">		<text/>	</cox>	<cox border="0" pai="507" son="20" width="0">		<text/>	</cox>	<cox border="0" pai="21" son="22" width="1">		<text/>	</cox>	<cox border="0" pai="528" son="21" width="0">		<text/>	</cox>	<cox border="0" pai="22" son="531" width="0">		<text/>	</cox>	<cox border="0" pai="22" son="532" width="0">		<text/>	</cox>	<cox border="0" pai="532" son="23" width="0">		<text/>	</cox>	<cox border="0" pai="531" son="24" width="0">		<text/>	</cox>	<cox border="0" pai="25" son="26" width="1">		<text/>	</cox>	<cox border="0" pai="533" son="25" width="0">		<text/>	</cox>	<cox border="0" pai="26" son="534" width="0">		<text/>	</cox>	<cox border="0" pai="26" son="535" width="0">		<text/>	</cox>	<cox border="0" pai="535" son="27" width="0">		<text/>	</cox>	<cox border="0" pai="534" son="28" width="0">		<text/>	</cox>	<cox border="0" pai="29" son="101" width="0">		<text/>	</cox>	<cox border="0" pai="506" son="29" width="0">		<text/>	</cox>	<cox border="0" pai="92" son="30" width="1">		<text/>	</cox>	<cox border="0" pai="187" son="30" width="1">		<text/>	</cox>	<cox border="0" pai="244" son="30" width="1">		<text/>	</cox>	<cox border="0" pai="30" son="516" width="0">		<text/>	</cox>	<cox border="0" pai="30" son="517" width="0">		<text/>	</cox>	<cox border="0" pai="30" son="518" width="0">		<text/>	</cox>	<cox border="0" pai="55" son="31" width="1">		<text/>	</cox>	<cox border="0" pai="202" son="31" width="1">		<text/>	</cox>	<cox border="0" pai="203" son="31" width="1">		<text/>	</cox>	<cox border="0" pai="204" son="31" width="1">		<text/>	</cox>	<cox border="0" pai="414" son="31" width="1">		<text/>	</cox>	<cox border="0" pai="420" son="31" width="1">		<text/>	</cox>	<cox border="0" pai="426" son="31" width="1">		<text/>	</cox>	<cox border="0" pai="31" son="521" width="0">		<text/>	</cox>	<cox border="0" pai="31" son="522" width="0">		<text/>	</cox>	<cox border="0" pai="31" son="523" width="0">		<text/>	</cox>	<cox border="0" pai="31" son="524" width="0">		<text/>	</cox>	<cox border="0" pai="31" son="407" width="0">		<text/>		<nod x="1197" y="560"/>		<nod x="1197" y="552"/>	</cox>	<cox border="0" pai="31" son="408" width="0">		<text/>		<nod x="1197" y="554"/>		<nod x="1197" y="552"/>	</cox>	<cox border="0" pai="31" son="409" width="0">		<text/>		<nod x="1197" y="557"/>		<nod x="1197" y="552"/>	</cox>	<cox border="0" pai="32" son="205" width="0">		<text/>	</cox>	<cox border="0" pai="32" son="206" width="0">		<text/>	</cox>	<cox border="0" pai="522" son="32" width="0">		<text/>	</cox>	<cox border="0" pai="33" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="509" son="33" width="0">		<text/>	</cox>	<cox border="0" pai="39" son="34" width="0">		<text/>	</cox>	<cox border="0" pai="34" son="110" width="0">		<text/>	</cox>	<cox border="0" pai="505" son="36" width="0">		<text/>	</cox>	<cox border="0" pai="48" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="49" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="62" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="178" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="377" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="378" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="379" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="380" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="381" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="382" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="383" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="384" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="385" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="386" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="387" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="388" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="389" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="390" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="391" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="393" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="392" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="452" son="37" width="1">		<text/>	</cox>	<cox border="0" pai="37" son="502" width="0">		<text/>	</cox>	<cox border="0" pai="37" son="503" width="0">		<text/>	</cox>	<cox border="0" pai="38" son="40" width="1">		<text/>	</cox>	<cox border="0" pai="503" son="38" width="0">		<text/>	</cox>	<cox border="0" pai="39" son="115" width="0">		<text/>	</cox>	<cox border="0" pai="502" son="39" width="0">		<text/>	</cox>	<cox border="0" pai="40" son="505" width="0">		<text/>	</cox>	<cox border="0" pai="40" son="504" width="0">		<text/>	</cox>	<cox border="0" pai="849" son="40" width="1">		<text/>	</cox>	<cox border="0" pai="514" son="41" width="0">		<text/>	</cox>	<cox border="0" pai="504" son="42" width="0">		<text/>	</cox>	<cox border="0" pai="536" son="44" width="0">		<text/>	</cox>	<cox border="0" pai="46" son="68" width="0">		<text/>	</cox>	<cox border="0" pai="82" son="46" width="1">		<text/>	</cox>	<cox border="0" pai="172" son="46" width="1">		<text/>	</cox>	<cox border="0" pai="180" son="46" width="1">		<text/>	</cox>	<cox border="0" pai="83" son="46" width="1">		<text/>	</cox>	<cox border="0" pai="100" son="46" width="1">		<text/>	</cox>	<cox border="0" pai="267" son="46" width="1">		<text/>	</cox>	<cox border="0" pai="431" son="46" width="1">		<text/>	</cox>	<cox border="0" pai="46" son="454" width="0">		<text/>	</cox>	<cox border="0" pai="46" son="173" width="0">		<text/>		<nod x="881" y="308"/>		<nod x="881" y="300"/>	</cox>	<cox border="0" pai="46" son="174" width="0">		<text/>		<nod x="881" y="302"/>		<nod x="881" y="300"/>	</cox>	<cox border="0" pai="46" son="175" width="0">		<text/>		<nod x="881" y="305"/>		<nod x="881" y="300"/>	</cox>	<cox border="0" pai="47" son="193" width="0">		<text/>	</cox>	<cox border="0" pai="47" son="194" width="0">		<text/>	</cox>	<cox border="0" pai="517" son="47" width="0">		<text/>	</cox>	<cox border="0" pai="506" son="48" width="0">		<text/>	</cox>	<cox border="0" pai="538" son="49" width="0">		<text/>	</cox>	<cox border="0" pai="50" son="112" width="0">		<text/>	</cox>	<cox border="0" pai="50" son="114" width="0">		<text/>	</cox>	<cox border="0" pai="509" son="50" width="0">		<text/>	</cox>	<cox border="0" pai="52" son="53" width="1">		<text/>	</cox>	<cox border="0" pai="521" son="52" width="0">		<text/>	</cox>	<cox border="0" pai="417" son="53" width="1">		<text/>	</cox>	<cox border="0" pai="423" son="53" width="1">		<text/>	</cox>	<cox border="0" pai="429" son="53" width="1">		<text/>	</cox>	<cox border="0" pai="53" son="525" width="0">		<text/>	</cox>	<cox border="0" pai="53" son="526" width="0">		<text/>	</cox>	<cox border="0" pai="53" son="527" width="0">		<text/>	</cox>	<cox border="0" pai="53" son="411" width="0">		<text/>		<nod x="1197" y="588"/>		<nod x="1197" y="586"/>	</cox>	<cox border="0" pai="53" son="412" width="0">		<text/>		<nod x="1197" y="591"/>		<nod x="1197" y="586"/>	</cox>	<cox border="0" pai="53" son="410" width="0">		<text/>		<nod x="1197" y="594"/>		<nod x="1197" y="586"/>	</cox>	<cox border="0" pai="526" son="54" width="0">		<text/>	</cox>	<cox border="0" pai="525" son="55" width="0">		<text/>	</cox>	<cox border="0" pai="56" son="207" width="0">		<text/>	</cox>	<cox border="0" pai="56" son="208" width="0">		<text/>	</cox>	<cox border="0" pai="522" son="56" width="0">		<text/>	</cox>	<cox border="0" pai="533" son="57" width="0">		<text/>	</cox>	<cox border="0" pai="57" son="578" width="0">		<text/>	</cox>	<cox border="8" pai="57" son="579" width="0">		<text/>	</cox>	<cox border="0" pai="65" son="58" width="1">		<text/>	</cox>	<cox border="0" pai="111" son="58" width="1">		<text/>	</cox>	<cox border="0" pai="58" son="496" width="0">		<text/>	</cox>	<cox border="0" pai="58" son="497" width="0">		<text/>	</cox>	<cox border="0" pai="58" son="498" width="0">		<text/>	</cox>	<cox border="0" pai="822" son="58" width="1">		<text/>	</cox>	<cox border="0" pai="59" son="111" width="0">		<text/>	</cox>	<cox border="0" pai="510" son="59" width="0">		<text/>	</cox>	<cox border="0" pai="60" son="221" width="0">		<text/>	</cox>	<cox border="0" pai="60" son="222" width="0">		<text/>	</cox>	<cox border="0" pai="523" son="60" width="0">		<text/>	</cox>	<cox border="0" pai="496" son="61" width="0">		<text/>	</cox>	<cox border="0" pai="497" son="62" width="0">		<text/>	</cox>	<cox border="0" pai="63" son="64" width="1">		<text/>	</cox>	<cox border="0" pai="497" son="63" width="0">		<text/>	</cox>	<cox border="0" pai="64" son="500" width="0">		<text/>	</cox>	<cox border="0" pai="64" son="499" width="0">		<text/>	</cox>	<cox border="0" pai="64" son="501" width="0">		<text/>	</cox>	<cox border="0" pai="500" son="65" width="0">		<text/>	</cox>	<cox border="0" pai="499" son="66" width="0">		<text/>	</cox>	<cox border="0" pai="67" son="106" width="0">		<text/>	</cox>	<cox border="0" pai="67" son="187" width="0">		<text/>	</cox>	<cox border="0" pai="538" son="67" width="0">		<text/>	</cox>	<cox border="0" pai="72" son="69" width="1">		<text/>	</cox>	<cox border="0" pai="98" son="69" width="1">		<text/>	</cox>	<cox border="0" pai="69" son="458" width="0">		<text/>	</cox>	<cox border="0" pai="69" son="459" width="0">		<text/>	</cox>	<cox border="0" pai="69" son="460" width="0">		<text/>	</cox>	<cox border="0" pai="70" son="73" width="1">		<text/>	</cox>	<cox border="0" pai="460" son="70" width="0">		<text/>	</cox>	<cox border="0" pai="71" son="73" width="1">		<text/>	</cox>	<cox border="0" pai="460" son="71" width="0">		<text/>	</cox>	<cox border="0" pai="454" son="72" width="0">		<text/>	</cox>	<cox border="0" pai="77" son="73" width="1">		<text/>	</cox>	<cox border="0" pai="407" son="73" width="1">		<text/>	</cox>	<cox border="0" pai="413" son="73" width="1">		<text/>	</cox>	<cox border="0" pai="425" son="73" width="1">		<text/>	</cox>	<cox border="0" pai="73" son="463" width="0">		<text/>	</cox>	<cox border="0" pai="73" son="464" width="0">		<text/>	</cox>	<cox border="0" pai="73" son="465" width="0">		<text/>	</cox>	<cox border="0" pai="73" son="466" width="0">		<text/>	</cox>	<cox border="0" pai="73" son="420" width="0">		<text/>		<nod x="786" y="346"/>		<nod x="786" y="344"/>	</cox>	<cox border="0" pai="73" son="421" width="0">		<text/>		<nod x="786" y="349"/>		<nod x="786" y="344"/>	</cox>	<cox border="0" pai="73" son="419" width="0">		<text/>		<nod x="786" y="352"/>		<nod x="786" y="344"/>	</cox>	<cox border="0" pai="464" son="74" width="0">		<text/>	</cox>	<cox border="0" pai="75" son="76" width="1">		<text/>	</cox>	<cox border="0" pai="463" son="75" width="0">		<text/>	</cox>	<cox border="0" pai="410" son="76" width="1">		<text/>	</cox>	<cox border="0" pai="416" son="76" width="1">		<text/>	</cox>	<cox border="0" pai="428" son="76" width="1">		<text/>	</cox>	<cox border="0" pai="76" son="467" width="0">		<text/>	</cox>	<cox border="0" pai="76" son="468" width="0">		<text/>	</cox>	<cox border="0" pai="76" son="469" width="0">		<text/>	</cox>	<cox border="0" pai="76" son="422" width="0">		<text/>		<nod x="786" y="373"/>		<nod x="786" y="365"/>	</cox>	<cox border="0" pai="76" son="423" width="0">		<text/>		<nod x="786" y="367"/>		<nod x="786" y="365"/>	</cox>	<cox border="0" pai="76" son="424" width="0">		<text/>		<nod x="786" y="370"/>		<nod x="786" y="365"/>	</cox>	<cox border="0" pai="468" son="77" width="0">		<text/>	</cox>	<cox border="0" pai="464" son="78" width="0">		<text/>	</cox>	<cox border="0" pai="79" son="80" width="1">		<text/>	</cox>	<cox border="0" pai="454" son="79" width="0">		<text/>	</cox>	<cox border="0" pai="170" son="80" width="1">		<text/>	</cox>	<cox border="0" pai="167" son="80" width="1">		<text/>	</cox>	<cox border="0" pai="395" son="80" width="1">		<text/>	</cox>	<cox border="0" pai="398" son="80" width="1">		<text/>	</cox>	<cox border="0" pai="401" son="80" width="1">		<text/>	</cox>	<cox border="0" pai="80" son="455" width="0">		<text/>	</cox>	<cox border="0" pai="80" son="456" width="0">		<text/>	</cox>	<cox border="0" pai="80" son="457" width="0">		<text/>	</cox>	<cox border="0" pai="80" son="405" width="0">		<text/>		<nod x="881" y="318"/>		<nod x="881" y="316"/>	</cox>	<cox border="0" pai="80" son="406" width="0">		<text/>		<nod x="881" y="321"/>		<nod x="881" y="316"/>	</cox>	<cox border="0" pai="80" son="404" width="0">		<text/>		<nod x="881" y="324"/>		<nod x="881" y="316"/>	</cox>	<cox border="0" pai="457" son="81" width="0">		<text/>	</cox>	<cox border="0" pai="456" son="82" width="0">		<text/>	</cox>	<cox border="0" pai="459" son="83" width="0">		<text/>	</cox>	<cox border="0" pai="459" son="84" width="0">		<text/>	</cox>	<cox border="0" pai="85" son="223" width="0">		<text/>	</cox>	<cox border="0" pai="85" son="224" width="0">		<text/>	</cox>	<cox border="0" pai="523" son="85" width="0">		<text/>	</cox>	<cox border="0" pai="86" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="534" son="86" width="0">		<text/>	</cox>	<cox border="0" pai="541" son="87" width="0">		<text/>	</cox>	<cox border="0" pai="543" son="88" width="0">		<text/>	</cox>	<cox border="0" pai="89" son="90" width="1">		<text/>	</cox>	<cox border="0" pai="516" son="89" width="0">		<text/>	</cox>	<cox border="0" pai="90" son="519" width="0">		<text/>	</cox>	<cox border="0" pai="90" son="520" width="0">		<text/>	</cox>	<cox border="0" pai="520" son="91" width="0">		<text/>	</cox>	<cox border="0" pai="519" son="92" width="0">		<text/>	</cox>	<cox border="0" pai="107" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="145" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="166" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="169" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="179" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="210" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="218" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="228" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="168" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="231" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="250" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="350" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="353" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="358" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="364" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="368" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="236" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="399" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="403" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="404" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="424" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="451" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="164" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="165" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="162" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="163" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="93" son="513" width="0">		<text/>	</cox>	<cox border="0" pai="93" son="514" width="0">		<text/>	</cox>	<cox border="0" pai="577" son="93" width="1">		<text/>	</cox>	<cox border="0" pai="93" son="396" width="0">		<text/>		<nod x="965" y="350"/>		<nod x="965" y="348"/>	</cox>	<cox border="0" pai="93" son="397" width="0">		<text/>		<nod x="965" y="353"/>		<nod x="965" y="348"/>	</cox>	<cox border="0" pai="93" son="395" width="0">		<text/>		<nod x="965" y="356"/>		<nod x="965" y="348"/>	</cox>	<cox border="0" pai="534" son="94" width="0">		<text/>	</cox>	<cox border="8" pai="94" son="576" width="0">		<text/>	</cox>	<cox border="0" pai="94" son="577" width="0">		<text/>	</cox>	<cox border="0" pai="95" son="96" width="1">		<text/>	</cox>	<cox border="0" pai="458" son="95" width="0">		<text/>	</cox>	<cox border="0" pai="248" son="96" width="1">		<text/>	</cox>	<cox border="0" pai="96" son="461" width="0">		<text/>	</cox>	<cox border="0" pai="96" son="462" width="0">		<text/>	</cox>	<cox border="0" pai="462" son="97" width="0">		<text/>	</cox>	<cox border="0" pai="461" son="98" width="0">		<text/>	</cox>	<cox border="0" pai="465" son="99" width="0">		<text/>	</cox>	<cox border="0" pai="465" son="100" width="0">		<text/>	</cox>	<cox border="0" pai="101" son="244" width="0">		<text/>	</cox>	<cox border="0" pai="101" son="245" width="0">		<text/>	</cox>	<cox border="0" pai="222" son="102" width="0">		<text/>	</cox>	<cox border="0" pai="222" son="103" width="0">		<text/>	</cox>	<cox border="0" pai="224" son="104" width="0">		<text/>	</cox>	<cox border="0" pai="224" son="105" width="0">		<text/>	</cox>	<cox border="0" pai="540" son="107" width="0">		<text/>	</cox>	<cox border="0" pai="542" son="108" width="0">		<text/>	</cox>	<cox border="0" pai="544" son="109" width="0">		<text/>	</cox>	<cox border="0" pai="116" son="110" width="0">		<text/>	</cox>	<cox border="0" pai="118" son="110" width="0">		<text/>	</cox>	<cox border="0" pai="117" son="110" width="0">		<text/>		<nod x="1227" y="457"/>	</cox>	<cox border="0" pai="112" son="113" width="0">		<text/>	</cox>	<cox border="0" pai="112" son="126" width="0">		<text/>	</cox>	<cox border="0" pai="113" son="125" width="1">		<text/>	</cox>	<cox border="0" pai="114" son="120" width="0">		<text/>	</cox>	<cox border="0" pai="114" son="121" width="0">		<text/>	</cox>	<cox border="0" pai="115" son="118" width="0">		<text/>	</cox>	<cox border="0" pai="115" son="119" width="0">		<text/>	</cox>	<cox border="0" pai="119" son="116" width="0">		<text/>	</cox>	<cox border="0" pai="119" son="117" width="0">		<text/>	</cox>	<cox border="0" pai="120" son="127" width="0">		<text/>	</cox>	<cox border="0" pai="120" son="128" width="0">		<text/>	</cox>	<cox border="0" pai="121" son="122" width="0">		<text/>	</cox>	<cox border="0" pai="121" son="123" width="0">		<text/>	</cox>	<cox border="0" pai="122" son="129" width="0">		<text/>	</cox>	<cox border="0" pai="122" son="130" width="0">		<text/>	</cox>	<cox border="0" pai="123" son="124" width="1">		<text/>	</cox>	<cox border="0" pai="130" son="124" width="1">		<text/>	</cox>	<cox border="0" pai="128" son="124" width="1">		<text/>	</cox>	<cox border="0" pai="126" son="124" width="1">		<text/>	</cox>	<cox border="0" pai="133" son="124" width="1">		<text/>	</cox>	<cox border="0" pai="124" son="470" width="0">		<text/>	</cox>	<cox border="0" pai="124" son="471" width="0">		<text/>	</cox>	<cox border="0" pai="124" son="472" width="0">		<text/>	</cox>	<cox border="0" pai="127" son="125" width="1">		<text/>	</cox>	<cox border="0" pai="129" son="125" width="1">		<text/>	</cox>	<cox border="0" pai="148" son="125" width="1">		<text/>	</cox>	<cox border="0" pai="125" son="482" width="0">		<text/>	</cox>	<cox border="0" pai="125" son="483" width="0">		<text/>	</cox>	<cox border="0" pai="125" son="484" width="0">		<text/>	</cox>	<cox border="0" pai="131" son="132" width="1">		<text/>	</cox>	<cox border="0" pai="470" son="131" width="0">		<text/>	</cox>	<cox border="0" pai="132" son="473" width="0">		<text/>	</cox>	<cox border="0" pai="132" son="474" width="0">		<text/>	</cox>	<cox border="0" pai="473" son="133" width="0">		<text/>	</cox>	<cox border="0" pai="474" son="134" width="0">		<text/>	</cox>	<cox border="0" pai="135" son="138" width="1">		<text/>	</cox>	<cox border="0" pai="472" son="135" width="0">		<text/>	</cox>	<cox border="0" pai="136" son="138" width="1">		<text/>	</cox>	<cox border="0" pai="472" son="136" width="0">		<text/>	</cox>	<cox border="0" pai="475" son="137" width="0">		<text/>	</cox>	<cox border="0" pai="144" son="138" width="1">		<text/>	</cox>	<cox border="0" pai="201" son="138" width="1">		<text/>	</cox>	<cox border="0" pai="205" son="138" width="1">		<text/>	</cox>	<cox border="0" pai="376" son="138" width="1">		<text/>	</cox>	<cox border="0" pai="375" son="138" width="1">		<text/>	</cox>	<cox border="0" pai="408" son="138" width="1">		<text/>	</cox>	<cox border="0" pai="415" son="138" width="1">		<text/>	</cox>	<cox border="0" pai="439" son="138" width="1">		<text/>	</cox>	<cox border="0" pai="453" son="138" width="1">		<text/>	</cox>	<cox border="0" pai="138" son="475" width="0">		<text/>	</cox>	<cox border="0" pai="138" son="476" width="0">		<text/>	</cox>	<cox border="0" pai="138" son="477" width="0">		<text/>	</cox>	<cox border="0" pai="138" son="478" width="0">		<text/>	</cox>	<cox border="0" pai="138" son="426" width="0">		<text/>		<nod x="1124" y="305"/>		<nod x="1124" y="303"/>	</cox>	<cox border="0" pai="138" son="427" width="0">		<text/>		<nod x="1124" y="308"/>		<nod x="1124" y="303"/>	</cox>	<cox border="0" pai="138" son="425" width="0">		<text/>		<nod x="1124" y="311"/>		<nod x="1124" y="303"/>	</cox>	<cox border="0" pai="861" son="138" width="1">		<text/>	</cox>	<cox border="0" pai="477" son="139" width="0">		<text/>	</cox>	<cox border="0" pai="477" son="140" width="0">		<text/>	</cox>	<cox border="0" pai="141" son="142" width="1">		<text/>	</cox>	<cox border="0" pai="476" son="141" width="0">		<text/>	</cox>	<cox border="0" pai="411" son="142" width="1">		<text/>	</cox>	<cox border="0" pai="418" son="142" width="1">		<text/>	</cox>	<cox border="0" pai="442" son="142" width="1">		<text/>	</cox>	<cox border="0" pai="142" son="479" width="0">		<text/>	</cox>	<cox border="0" pai="142" son="480" width="0">		<text/>	</cox>	<cox border="0" pai="142" son="481" width="0">		<text/>	</cox>	<cox border="0" pai="142" son="428" width="0">		<text/>		<nod x="1124" y="331"/>		<nod x="1124" y="323"/>	</cox>	<cox border="0" pai="142" son="429" width="0">		<text/>		<nod x="1124" y="325"/>		<nod x="1124" y="323"/>	</cox>	<cox border="0" pai="142" son="430" width="0">		<text/>		<nod x="1124" y="328"/>		<nod x="1124" y="323"/>	</cox>	<cox border="0" pai="480" son="143" width="0">		<text/>	</cox>	<cox border="0" pai="479" son="144" width="0">		<text/>	</cox>	<cox border="0" pai="479" son="145" width="0">		<text/>	</cox>	<cox border="0" pai="146" son="147" width="1">		<text/>	</cox>	<cox border="0" pai="482" son="146" width="0">		<text/>	</cox>	<cox border="0" pai="147" son="485" width="0">		<text/>	</cox>	<cox border="0" pai="147" son="486" width="0">		<text/>	</cox>	<cox border="0" pai="485" son="148" width="0">		<text/>	</cox>	<cox border="0" pai="486" son="149" width="0">		<text/>	</cox>	<cox border="0" pai="150" son="151" width="1">		<text/>	</cox>	<cox border="0" pai="484" son="150" width="0">		<text/>	</cox>	<cox border="0" pai="157" son="151" width="1">		<text/>	</cox>	<cox border="0" pai="151" son="487" width="0">		<text/>	</cox>	<cox border="0" pai="151" son="489" width="0">		<text/>	</cox>	<cox border="0" pai="151" son="490" width="0">		<text/>	</cox>	<cox border="0" pai="870" son="151" width="1">		<text/>	</cox>	<cox border="0" pai="490" son="152" width="0">		<text/>	</cox>	<cox border="8" pai="487" son="153" width="0">		<text/>	</cox>	<cox border="0" pai="154" son="155" width="1">		<text/>	</cox>	<cox border="0" pai="489" son="154" width="0">		<text/>	</cox>	<cox border="0" pai="155" son="488" width="0">		<text/>	</cox>	<cox border="0" pai="155" son="491" width="0">		<text/>	</cox>	<cox border="0" pai="491" son="156" width="0">		<text/>	</cox>	<cox border="0" pai="488" son="157" width="0">		<text/>	</cox>	<cox border="0" pai="471" son="158" width="0">		<text/>	</cox>	<cox border="0" pai="483" son="159" width="0">		<text/>	</cox>	<cox border="0" pai="471" son="160" width="0">		<text/>	</cox>	<cox border="0" pai="483" son="161" width="0">		<text/>	</cox>	<cox border="0" pai="473" son="162" width="0">		<text/>	</cox>	<cox border="0" pai="473" son="163" width="0">		<text/>	</cox>	<cox border="0" pai="485" son="164" width="0">		<text/>	</cox>	<cox border="0" pai="485" son="165" width="0">		<text/>	</cox>	<cox border="0" pai="488" son="166" width="0">		<text/>	</cox>	<cox border="0" pai="461" son="167" width="0">		<text/>	</cox>	<cox border="0" pai="461" son="168" width="0">		<text/>	</cox>	<cox border="0" pai="468" son="169" width="0">		<text/>	</cox>	<cox border="0" pai="468" son="170" width="0">		<text/>	</cox>	<cox border="0" pai="467" son="171" width="0">		<text/>	</cox>	<cox border="0" pai="175" son="258" width="1">		<text/>	</cox>	<cox border="0" pai="177" son="258" width="1">		<text/>	</cox>	<cox border="0" pai="501" son="178" width="0">		<text/>	</cox>	<cox border="0" pai="500" son="179" width="0">		<text/>	</cox>	<cox border="0" pai="182" son="258" width="1">		<text/>	</cox>	<cox border="0" pai="183" son="201" width="0">		<text/>	</cox>	<cox border="0" pai="183" son="202" width="0">		<text/>	</cox>	<cox border="0" pai="518" son="183" width="0">		<text/>	</cox>	<cox border="0" pai="184" son="203" width="0">		<text/>	</cox>	<cox border="0" pai="184" son="204" width="0">		<text/>	</cox>	<cox border="0" pai="518" son="184" width="0">		<text/>	</cox>	<cox border="0" pai="185" son="196" width="0">		<text/>	</cox>	<cox border="0" pai="185" son="197" width="0">		<text/>	</cox>	<cox border="0" pai="517" son="185" width="0">		<text/>	</cox>	<cox border="0" pai="540" son="186" width="0">		<text/>	</cox>	<cox border="0" pai="189" son="246" width="0">		<text/>	</cox>	<cox border="0" pai="189" son="247" width="0">		<text/>	</cox>	<cox border="0" pai="190" son="191" width="0">		<text/>	</cox>	<cox border="0" pai="190" son="192" width="0">		<text/>	</cox>	<cox border="0" pai="529" son="190" width="0">		<text/>	</cox>	<cox border="0" pai="192" son="254" width="0">		<text/>	</cox>	<cox border="0" pai="192" son="255" width="0">		<text/>	</cox>	<cox border="0" pai="193" son="195" width="0">		<text/>	</cox>	<cox border="0" pai="194" son="195" width="0">		<text/>	</cox>	<cox border="0" pai="198" son="439" width="0">		<text/>	</cox>	<cox border="0" pai="198" son="440" width="0">		<text/>	</cox>	<cox border="0" pai="524" son="198" width="0">		<text/>	</cox>	<cox border="0" pai="200" son="574" width="0">		<text/>	</cox>	<cox border="0" pai="200" son="575" width="0">		<text/>	</cox>	<cox border="0" pai="209" son="210" width="0">		<text/>	</cox>	<cox border="0" pai="209" son="249" width="0">		<text/>	</cox>	<cox border="0" pai="531" son="209" width="0">		<text/>	</cox>	<cox border="0" pai="211" son="212" width="0">		<text/>	</cox>	<cox border="0" pai="211" son="213" width="0">		<text/>	</cox>	<cox border="0" pai="531" son="211" width="0">		<text/>	</cox>	<cox border="0" pai="213" son="256" width="0">		<text/>	</cox>	<cox border="0" pai="213" son="257" width="0">		<text/>	</cox>	<cox border="0" pai="214" son="216" width="0">		<text/>	</cox>	<cox border="0" pai="214" son="217" width="0">		<text/>	</cox>	<cox border="0" pai="519" son="214" width="0">		<text/>	</cox>	<cox border="0" pai="215" son="219" width="0">		<text/>	</cox>	<cox border="0" pai="215" son="220" width="0">		<text/>	</cox>	<cox border="0" pai="519" son="215" width="0">		<text/>	</cox>	<cox border="0" pai="216" son="218" width="0">		<text/>	</cox>	<cox border="0" pai="217" son="218" width="0">		<text/>	</cox>	<cox border="0" pai="225" son="231" width="0">		<text/>	</cox>	<cox border="0" pai="225" son="232" width="0">		<text/>	</cox>	<cox border="0" pai="525" son="225" width="0">		<text/>	</cox>	<cox border="0" pai="226" son="233" width="0">		<text/>	</cox>	<cox border="0" pai="226" son="234" width="0">		<text/>	</cox>	<cox border="0" pai="525" son="226" width="0">		<text/>	</cox>	<cox border="0" pai="232" son="227" width="0">		<text/>	</cox>	<cox border="0" pai="232" son="228" width="0">		<text/>	</cox>	<cox border="0" pai="234" son="229" width="0">		<text/>	</cox>	<cox border="0" pai="234" son="230" width="0">		<text/>	</cox>	<cox border="0" pai="239" son="235" width="1">		<text/>	</cox>	<cox border="0" pai="241" son="235" width="1">		<text/>	</cox>	<cox border="0" pai="235" son="511" width="0">		<text/>	</cox>	<cox border="0" pai="235" son="512" width="0">		<text/>	</cox>	<cox border="0" pai="512" son="236" width="0">		<text/>	</cox>	<cox border="0" pai="237" son="238" width="1">		<text/>	</cox>	<cox border="0" pai="511" son="237" width="0">		<text/>	</cox>	<cox border="0" pai="238" son="515" width="0">		<text/>	</cox>	<cox border="0" pai="238" son="432" width="0">		<text/>		<nod x="1010" y="350"/>		<nod x="1010" y="348"/>	</cox>	<cox border="0" pai="238" son="431" width="0">		<text/>		<nod x="1010" y="356"/>		<nod x="1010" y="348"/>	</cox>	<cox border="0" pai="238" son="433" width="0">		<text/>		<nod x="1010" y="353"/>		<nod x="1010" y="348"/>	</cox>	<cox border="0" pai="509" son="239" width="0">		<text/>	</cox>	<cox border="0" pai="513" son="240" width="0">		<text/>	</cox>	<cox border="0" pai="515" son="241" width="0">		<text/>	</cox>	<cox border="0" pai="515" son="242" width="0">		<text/>	</cox>	<cox border="0" pai="515" son="243" width="0">		<text/>	</cox>	<cox border="0" pai="455" son="248" width="0">		<text/>	</cox>	<cox border="0" pai="249" son="250" width="0">		<text/>	</cox>	<cox border="0" pai="249" son="251" width="0">		<text/>	</cox>	<cox border="0" pai="539" son="252" width="0">		<text/>	</cox>	<cox border="0" pai="478" son="253" width="0">		<text/>	</cox>	<cox border="0" pai="262" son="258" width="1">		<text/>	</cox>	<cox border="0" pai="258" son="263" width="0">		<text/>	</cox>	<cox border="0" pai="292" son="258" width="1">		<text/>	</cox>	<cox border="0" pai="337" son="258" width="1">		<text/>	</cox>	<cox border="0" pai="433" son="258" width="1">		<text/>	</cox>	<cox border="0" pai="258" son="546" width="0">		<text/>	</cox>	<cox border="0" pai="258" son="268" width="0">		<text/>		<nod x="807" y="506"/>		<nod x="807" y="504"/>	</cox>	<cox border="0" pai="258" son="269" width="0">		<text/>		<nod x="807" y="509"/>		<nod x="807" y="504"/>	</cox>	<cox border="0" pai="258" son="267" width="0">		<text/>		<nod x="807" y="512"/>		<nod x="807" y="504"/>	</cox>	<cox border="0" pai="259" son="260" width="1">		<text/>	</cox>	<cox border="0" pai="546" son="259" width="0">		<text/>	</cox>	<cox border="0" pai="361" son="260" width="1">		<text/>	</cox>	<cox border="0" pai="373" son="260" width="1">		<text/>	</cox>	<cox border="0" pai="397" son="260" width="1">		<text/>	</cox>	<cox border="0" pai="400" son="260" width="1">		<text/>	</cox>	<cox border="0" pai="406" son="260" width="1">		<text/>	</cox>	<cox border="0" pai="260" son="547" width="0">		<text/>	</cox>	<cox border="0" pai="260" son="548" width="0">		<text/>	</cox>	<cox border="0" pai="260" son="402" width="0">		<text/>		<nod x="807" y="523"/>		<nod x="807" y="521"/>	</cox>	<cox border="0" pai="260" son="403" width="0">		<text/>		<nod x="807" y="526"/>		<nod x="807" y="521"/>	</cox>	<cox border="0" pai="260" son="401" width="0">		<text/>		<nod x="807" y="529"/>		<nod x="807" y="521"/>	</cox>	<cox border="0" pai="547" son="261" width="0">		<text/>	</cox>	<cox border="0" pai="548" son="262" width="0">		<text/>	</cox>	<cox border="0" pai="265" son="264" width="0">		<text/>	</cox>	<cox border="0" pai="264" son="270" width="1">		<text/>	</cox>	<cox border="0" pai="265" son="266" width="0">		<text/>	</cox>	<cox border="0" pai="546" son="265" width="0">		<text/>	</cox>	<cox border="0" pai="266" son="278" width="1">		<text/>	</cox>	<cox border="0" pai="273" son="270" width="1">		<text/>	</cox>	<cox border="0" pai="318" son="270" width="1">		<text/>	</cox>	<cox border="0" pai="270" son="561" width="0">		<text/>	</cox>	<cox border="0" pai="270" son="571" width="0">		<text/>	</cox>	<cox border="0" pai="270" son="566" width="0">		<text/>	</cox>	<cox border="0" pai="271" son="272" width="1">		<text/>	</cox>	<cox border="0" pai="571" son="271" width="0">		<text/>	</cox>	<cox border="0" pai="272" son="569" width="0">		<text/>	</cox>	<cox border="0" pai="272" son="562" width="0">		<text/>	</cox>	<cox border="0" pai="562" son="273" width="0">		<text/>	</cox>	<cox border="0" pai="274" son="314" width="1">		<text/>	</cox>	<cox border="0" pai="566" son="274" width="0">		<text/>	</cox>	<cox border="0" pai="275" son="301" width="0">		<text/>	</cox>	<cox border="0" pai="275" son="302" width="0">		<text/>	</cox>	<cox border="0" pai="561" son="275" width="0">		<text/>	</cox>	<cox border="0" pai="276" son="299" width="0">		<text/>	</cox>	<cox border="0" pai="276" son="300" width="0">		<text/>	</cox>	<cox border="0" pai="561" son="276" width="0">		<text/>	</cox>	<cox border="0" pai="569" son="277" width="0">		<text/>	</cox>	<cox border="0" pai="290" son="278" width="1">		<text/>	</cox>	<cox border="0" pai="320" son="278" width="1">		<text/>	</cox>	<cox border="0" pai="278" son="549" width="0">		<text/>	</cox>	<cox border="0" pai="278" son="550" width="0">		<text/>	</cox>	<cox border="0" pai="278" son="551" width="0">		<text/>	</cox>	<cox border="0" pai="279" son="322" width="0">		<text/>	</cox>	<cox border="0" pai="279" son="323" width="0">		<text/>	</cox>	<cox border="0" pai="551" son="279" width="0">		<text/>	</cox>	<cox border="0" pai="284" son="280" width="1">		<text/>	</cox>	<cox border="0" pai="340" son="280" width="1">		<text/>	</cox>	<cox border="0" pai="341" son="280" width="1">		<text/>	</cox>	<cox border="0" pai="409" son="280" width="1">		<text/>	</cox>	<cox border="0" pai="421" son="280" width="1">		<text/>	</cox>	<cox border="0" pai="427" son="280" width="1">		<text/>	</cox>	<cox border="0" pai="280" son="554" width="0">		<text/>	</cox>	<cox border="0" pai="280" son="556" width="0">		<text/>	</cox>	<cox border="0" pai="280" son="557" width="0">		<text/>	</cox>	<cox border="0" pai="280" son="560" width="0">		<text/>	</cox>	<cox border="0" pai="280" son="414" width="0">		<text/>		<nod x="731" y="562"/>		<nod x="731" y="560"/>	</cox>	<cox border="0" pai="280" son="415" width="0">		<text/>		<nod x="731" y="565"/>		<nod x="731" y="560"/>	</cox>	<cox border="0" pai="280" son="413" width="0">		<text/>		<nod x="731" y="568"/>		<nod x="731" y="560"/>	</cox>	<cox border="0" pai="281" son="324" width="0">		<text/>	</cox>	<cox border="0" pai="281" son="325" width="0">		<text/>	</cox>	<cox border="0" pai="551" son="281" width="0">		<text/>	</cox>	<cox border="0" pai="282" son="283" width="1">		<text/>	</cox>	<cox border="0" pai="554" son="282" width="0">		<text/>	</cox>	<cox border="0" pai="412" son="283" width="1">		<text/>	</cox>	<cox border="0" pai="424" son="283" width="1">		<text/>	</cox>	<cox border="0" pai="430" son="283" width="1">		<text/>	</cox>	<cox border="0" pai="283" son="555" width="0">		<text/>	</cox>	<cox border="0" pai="283" son="558" width="0">		<text/>	</cox>	<cox border="0" pai="283" son="559" width="0">		<text/>	</cox>	<cox border="0" pai="283" son="417" width="0">		<text/>		<nod x="731" y="593"/>		<nod x="731" y="591"/>	</cox>	<cox border="0" pai="283" son="418" width="0">		<text/>		<nod x="731" y="596"/>		<nod x="731" y="591"/>	</cox>	<cox border="0" pai="283" son="416" width="0">		<text/>		<nod x="731" y="599"/>		<nod x="731" y="591"/>	</cox>	<cox border="0" pai="555" son="284" width="0">		<text/>	</cox>	<cox border="0" pai="285" son="287" width="0">		<text/>	</cox>	<cox border="0" pai="550" son="285" width="0">		<text/>	</cox>	<cox border="0" pai="286" son="296" width="0">		<text/>	</cox>	<cox border="0" pai="286" son="297" width="0">		<text/>	</cox>	<cox border="0" pai="556" son="286" width="0">		<text/>	</cox>	<cox border="0" pai="287" son="291" width="0">		<text/>	</cox>	<cox border="0" pai="287" son="292" width="0">		<text/>	</cox>	<cox border="0" pai="550" son="287" width="0">		<text/>	</cox>	<cox border="0" pai="288" son="289" width="1">		<text/>	</cox>	<cox border="0" pai="549" son="288" width="0">		<text/>	</cox>	<cox border="0" pai="289" son="552" width="0">		<text/>	</cox>	<cox border="0" pai="289" son="553" width="0">		<text/>	</cox>	<cox border="0" pai="553" son="290" width="0">		<text/>	</cox>	<cox border="0" pai="291" son="303" width="1">		<text/>	</cox>	<cox border="0" pai="295" son="293" width="0">		<text/>	</cox>	<cox border="0" pai="293" son="332" width="0">		<text/>	</cox>	<cox border="0" pai="293" son="333" width="0">		<text/>	</cox>	<cox border="0" pai="295" son="294" width="0">		<text/>	</cox>	<cox border="0" pai="556" son="295" width="0">		<text/>	</cox>	<cox border="0" pai="296" son="334" width="0">		<text/>	</cox>	<cox border="0" pai="296" son="335" width="0">		<text/>	</cox>	<cox border="0" pai="297" son="336" width="0">		<text/>	</cox>	<cox border="0" pai="297" son="337" width="0">		<text/>	</cox>	<cox border="0" pai="552" son="298" width="0">		<text/>	</cox>	<cox border="0" pai="300" son="303" width="1">		<text/>	</cox>	<cox border="0" pai="301" son="342" width="0">		<text/>	</cox>	<cox border="0" pai="302" son="342" width="0">		<text/>	</cox>	<cox border="0" pai="307" son="303" width="1">		<text/>	</cox>	<cox border="0" pai="311" son="303" width="1">		<text/>	</cox>	<cox border="0" pai="333" son="303" width="1">		<text/>	</cox>	<cox border="0" pai="336" son="303" width="1">		<text/>	</cox>	<cox border="0" pai="339" son="303" width="1">		<text/>	</cox>	<cox border="0" pai="342" son="303" width="1">		<text/>	</cox>	<cox border="0" pai="303" son="572" width="0">		<text/>	</cox>	<cox border="0" pai="303" son="321" width="0">		<text/>	</cox>	<cox border="0" pai="745" son="303" width="1">		<text/>	</cox>	<cox border="0" pai="842" son="303" width="1">		<text/>	</cox>	<cox border="0" pai="304" son="305" width="1">		<text/>	</cox>	<cox border="0" pai="572" son="304" width="0">		<text/>	</cox>	<cox border="0" pai="347" son="305" width="1">		<text/>	</cox>	<cox border="0" pai="357" son="305" width="1">		<text/>	</cox>	<cox border="0" pai="354" son="305" width="1">		<text/>	</cox>	<cox border="0" pai="360" son="305" width="1">		<text/>	</cox>	<cox border="0" pai="372" son="305" width="1">		<text/>	</cox>	<cox border="0" pai="374" son="305" width="1">		<text/>	</cox>	<cox border="0" pai="369" son="305" width="1">		<text/>	</cox>	<cox border="0" pai="305" son="573" width="0">		<text/>	</cox>	<cox border="0" pai="305" son="565" width="0">		<text/>	</cox>	<cox border="0" pai="565" son="306" width="0">		<text/>	</cox>	<cox border="0" pai="573" son="307" width="0">		<text/>	</cox>	<cox border="0" pai="568" son="308" width="0">		<text/>	</cox>	<cox border="0" pai="309" son="310" width="0">		<text/>	</cox>	<cox border="0" pai="309" son="311" width="0">		<text/>	</cox>	<cox border="0" pai="564" son="309" width="0">		<text/>	</cox>	<cox border="0" pai="310" son="311" width="0">		<text/>	</cox>	<cox border="0" pai="312" son="313" width="0">		<text/>	</cox>	<cox border="0" pai="564" son="312" width="0">		<text/>	</cox>	<cox border="0" pai="312" son="343" width="0">		<text/>	</cox>	<cox border="0" pai="313" son="343" width="0">		<text/>	</cox>	<cox border="0" pai="317" son="314" width="1">		<text/>	</cox>	<cox border="0" pai="314" son="568" width="0">		<text/>	</cox>	<cox border="0" pai="314" son="570" width="0">		<text/>	</cox>	<cox border="0" pai="314" son="564" width="0">		<text/>	</cox>	<cox border="0" pai="315" son="316" width="1">		<text/>	</cox>	<cox border="0" pai="570" son="315" width="0">		<text/>	</cox>	<cox border="0" pai="316" son="567" width="0">		<text/>	</cox>	<cox border="0" pai="316" son="563" width="0">		<text/>	</cox>	<cox border="0" pai="563" son="317" width="0">		<text/>	</cox>	<cox border="0" pai="319" son="318" width="0">		<text/>	</cox>	<cox border="0" pai="319" son="320" width="0">		<text/>	</cox>	<cox border="0" pai="572" son="319" width="0">		<text/>	</cox>	<cox border="0" pai="322" son="340" width="0">		<text/>	</cox>	<cox border="0" pai="323" son="340" width="0">		<text/>	</cox>	<cox border="0" pai="324" son="341" width="0">		<text/>	</cox>	<cox border="0" pai="325" son="341" width="0">		<text/>	</cox>	<cox border="0" pai="326" son="328" width="0">		<text/>	</cox>	<cox border="0" pai="326" son="329" width="0">		<text/>	</cox>	<cox border="0" pai="557" son="326" width="0">		<text/>	</cox>	<cox border="0" pai="327" son="330" width="0">		<text/>	</cox>	<cox border="0" pai="327" son="331" width="0">		<text/>	</cox>	<cox border="0" pai="557" son="327" width="0">		<text/>	</cox>	<cox border="0" pai="334" son="339" width="0">		<text/>	</cox>	<cox border="0" pai="335" son="339" width="0">		<text/>	</cox>	<cox border="0" pai="558" son="338" width="0">		<text/>	</cox>	<cox border="0" pai="567" son="344" width="0">		<text/>	</cox>	<cox border="0" pai="345" son="346" width="0">		<text/>	</cox>	<cox border="0" pai="345" son="347" width="0">		<text/>	</cox>	<cox border="0" pai="563" son="345" width="0">		<text/>	</cox>	<cox border="0" pai="346" son="347" width="0">		<text/>	</cox>	<cox border="0" pai="348" son="349" width="0">		<text/>	</cox>	<cox border="0" pai="563" son="348" width="0">		<text/>	</cox>	<cox border="0" pai="348" son="350" width="0">		<text/>	</cox>	<cox border="0" pai="349" son="350" width="0">		<text/>	</cox>	<cox border="0" pai="351" son="355" width="0">		<text/>	</cox>	<cox border="0" pai="351" son="356" width="0">		<text/>	</cox>	<cox border="0" pai="562" son="351" width="0">		<text/>	</cox>	<cox border="0" pai="352" son="353" width="0">		<text/>	</cox>	<cox border="0" pai="352" son="354" width="0">		<text/>	</cox>	<cox border="0" pai="562" son="352" width="0">		<text/>	</cox>	<cox border="0" pai="355" son="357" width="0">		<text/>	</cox>	<cox border="0" pai="356" son="357" width="0">		<text/>	</cox>	<cox border="0" pai="553" son="358" width="0">		<text/>	</cox>	<cox border="0" pai="359" son="360" width="0">		<text/>	</cox>	<cox border="0" pai="359" son="361" width="0">		<text/>	</cox>	<cox border="0" pai="553" son="359" width="0">		<text/>	</cox>	<cox border="0" pai="362" son="366" width="0">		<text/>	</cox>	<cox border="0" pai="362" son="367" width="0">		<text/>	</cox>	<cox border="0" pai="555" son="362" width="0">		<text/>	</cox>	<cox border="0" pai="365" son="363" width="0">		<text/>	</cox>	<cox border="0" pai="363" son="368" width="0">		<text/>	</cox>	<cox border="0" pai="363" son="369" width="0">		<text/>	</cox>	<cox border="0" pai="365" son="364" width="0">		<text/>	</cox>	<cox border="0" pai="555" son="365" width="0">		<text/>	</cox>	<cox border="0" pai="366" son="370" width="0">		<text/>	</cox>	<cox border="0" pai="366" son="371" width="0">		<text/>	</cox>	<cox border="0" pai="367" son="372" width="0">		<text/>	</cox>	<cox border="0" pai="367" son="373" width="0">		<text/>	</cox>	<cox border="0" pai="370" son="374" width="0">		<text/>	</cox>	<cox border="0" pai="371" son="374" width="0">		<text/>	</cox>	<cox border="0" pai="498" son="375" width="0">		<text/>	</cox>	<cox border="0" pai="498" son="376" width="0">		<text/>	</cox>	<cox border="0" pai="537" son="377" width="0">		<text/>	</cox>	<cox border="0" pai="516" son="378" width="0">		<text/>	</cox>	<cox border="0" pai="521" son="379" width="0">		<text/>	</cox>	<cox border="0" pai="528" son="380" width="0">		<text/>	</cox>	<cox border="0" pai="454" son="381" width="0">		<text/>	</cox>	<cox border="0" pai="458" son="382" width="0">		<text/>	</cox>	<cox border="0" pai="463" son="383" width="0">		<text/>	</cox>	<cox border="0" pai="476" son="384" width="0">		<text/>	</cox>	<cox border="0" pai="482" son="385" width="0">		<text/>	</cox>	<cox border="0" pai="470" son="386" width="0">		<text/>	</cox>	<cox border="0" pai="489" son="387" width="0">		<text/>	</cox>	<cox border="0" pai="546" son="388" width="0">		<text/>	</cox>	<cox border="0" pai="549" son="389" width="0">		<text/>	</cox>	<cox border="0" pai="554" son="390" width="0">		<text/>	</cox>	<cox border="0" pai="571" son="391" width="0">		<text/>	</cox>	<cox border="0" pai="570" son="392" width="0">		<text/>	</cox>	<cox border="0" pai="572" son="393" width="0">		<text/>	</cox>	<cox border="0" pai="497" son="394" width="0">		<text/>	</cox>	<cox border="0" pai="481" son="434" width="0">		<text/>	</cox>	<cox border="0" pai="469" son="435" width="0">		<text/>	</cox>	<cox border="0" pai="466" son="436" width="0">		<text/>	</cox>	<cox border="0" pai="559" son="437" width="0">		<text/>	</cox>	<cox border="0" pai="560" son="438" width="0">		<text/>	</cox>	<cox border="0" pai="441" son="442" width="0">		<text/>	</cox>	<cox border="0" pai="441" son="443" width="0">		<text/>	</cox>	<cox border="0" pai="527" son="441" width="0">		<text/>	</cox>	<cox border="0" pai="444" son="445" width="0">		<text/>	</cox>	<cox border="0" pai="450" son="444" width="1">		<text/>	</cox>	<cox border="0" pai="444" son="492" width="0">		<text/>	</cox>	<cox border="0" pai="833" son="444" width="1">		<text/>	</cox>	<cox border="0" pai="492" son="446" width="0">		<text/>	</cox>	<cox border="0" pai="447" son="448" width="1">		<text/>	</cox>	<cox border="0" pai="492" son="447" width="0">		<text/>	</cox>	<cox border="0" pai="448" son="493" width="0">		<text/>	</cox>	<cox border="0" pai="448" son="494" width="0">		<text/>	</cox>	<cox border="0" pai="448" son="495" width="0">		<text/>	</cox>	<cox border="0" pai="495" son="449" width="0">		<text/>	</cox>	<cox border="0" pai="494" son="450" width="0">		<text/>	</cox>	<cox border="0" pai="493" son="451" width="0">		<text/>	</cox>	<cox border="0" pai="492" son="452" width="0">		<text/>	</cox>	<cox border="0" pai="484" son="453" width="0">		<text/>	</cox>	<cox border="0" pai="472" son="870" width="0">		<text/>	</cox>	<cox border="0" pai="493" son="849" width="0">		<text/>	</cox>	<cox border="0" pai="580" son="873" width="3">		<text/>		<nod x="1030" y="-75"/>	</cox>	<cox border="0" pai="931" son="580" width="3">		<text/>		<nod x="1026" y="-80"/>	</cox>	<cox border="0" pai="591" son="581" width="3">		<text/>		<nod x="1023" y="-109"/>		<nod x="927" y="-109"/>	</cox>	<cox border="0" pai="581" son="871" width="2">		<text/>		<nod x="1023" y="-90"/>	</cox>	<cox border="0" pai="581" son="904" width="3">		<text/>		<nod x="1023" y="-95"/>	</cox>	<cox border="0" pai="581" son="930" width="3">		<text/>		<nod x="1023" y="-100"/>	</cox>	<cox border="0" pai="581" son="931" width="3">		<text/>		<nod x="1023" y="-85"/>	</cox>	<cox border="0" pai="582" son="590" width="2">		<text/>		<nod x="1030" y="-57"/>	</cox>	<cox border="0" pai="582" son="584" width="2">		<text/>		<nod x="1030" y="-65"/>	</cox>	<cox border="0" pai="582" son="875" width="3">		<text/>		<nod x="1030" y="-30"/>	</cox>	<cox border="0" pai="582" son="878" width="3">		<text/>		<nod x="1030" y="-52"/>	</cox>	<cox border="0" pai="931" son="582" width="3">		<text/>		<nod x="1026" y="-70"/>	</cox>	<cox border="0" pai="582" son="932" width="2">		<text/>		<nod x="1030" y="-61"/>	</cox>	<cox border="0" pai="583" son="587" width="2">		<text/>		<nod x="1030" y="-3"/>	</cox>	<cox border="0" pai="583" son="585" width="2">		<text/>		<nod x="1030" y="1"/>	</cox>	<cox border="0" pai="583" son="588" width="2">		<text/>		<nod x="1030" y="5"/>	</cox>	<cox border="0" pai="931" son="583" width="3">		<text/>		<nod x="1026" y="-8"/>	</cox>	<cox border="2" pai="584" son="600" width="0">		<text/>	</cox>	<cox border="2" pai="584" son="589" width="0">		<text/>	</cox>	<cox border="2" pai="584" son="590" width="0">		<text/>	</cox>	<cox border="1" pai="584" son="585" width="0">		<text/>	</cox>	<cox border="1" pai="584" son="587" width="0">		<text/>	</cox>	<cox border="1" pai="584" son="588" width="0">		<text/>	</cox>	<cox border="2" pai="584" son="586" width="0">		<text/>	</cox>	<cox border="0" pai="584" son="676" width="2">		<text/>	</cox>	<cox border="2" pai="584" son="908" width="0">		<text/>	</cox>	<cox border="3" pai="653" son="585" width="0">		<text/>	</cox>	<cox border="0" pai="878" son="586" width="2">		<text/>		<nod x="1034" y="-39"/>	</cox>	<cox border="2" pai="586" son="879" width="0">		<text/>	</cox>	<cox border="3" pai="653" son="587" width="0">		<text/>	</cox>	<cox border="3" pai="653" son="588" width="0">		<text/>	</cox>	<cox border="0" pai="875" son="589" width="2">		<text/>		<nod x="1034" y="-17"/>	</cox>	<cox border="0" pai="590" son="664" width="0">		<text/>		<nod x="1050" y="-57"/>	</cox>	<cox border="0" pai="590" son="665" width="0">		<text/>		<nod x="1050" y="-57"/>	</cox>	<cox border="0" pai="590" son="666" width="0">		<text/>	</cox>	<cox border="0" pai="590" son="667" width="0">		<text/>		<nod x="1050" y="-53"/>		<nod x="1050" y="-55"/>	</cox>	<cox border="0" pai="590" son="668" width="0">		<text/>		<nod x="1050" y="-51"/>		<nod x="1050" y="-55"/>	</cox>	<cox border="0" pai="590" son="669" width="0">		<text/>		<nod x="1050" y="-49"/>		<nod x="1050" y="-55"/>	</cox>	<cox border="0" pai="590" son="670" width="0">		<text/>		<nod x="1050" y="-47"/>		<nod x="1050" y="-55"/>	</cox>	<cox border="3" pai="653" son="590" width="0">		<text/>	</cox>	<cox border="0" pai="591" son="653" width="3">		<text/>		<nod x="927" y="-109"/>	</cox>	<cox border="0" pai="591" son="934" width="3">		<text/>		<nod x="830" y="-109"/>		<nod x="927" y="-109"/>	</cox>	<cox border="0" pai="592" son="596" width="3">		<text/>		<nod x="821" y="-81"/>	</cox>	<cox border="0" pai="592" son="594" width="2">		<text/>		<nod x="821" y="-90"/>	</cox>	<cox border="0" pai="592" son="593" width="2">		<text/>		<nod x="821" y="-86"/>	</cox>	<cox border="0" pai="935" son="592" width="3">		<text/>		<nod x="826" y="-95"/>	</cox>	<cox border="1" pai="593" son="594" width="0">		<text/>	</cox>	<cox border="3" pai="653" son="593" width="0">		<text/>	</cox>	<cox border="3" pai="594" son="600" width="0">		<text/>	</cox>	<cox border="0" pai="596" son="595" width="3">		<text/>		<nod x="817" y="-43"/>	</cox>	<cox border="0" pai="596" son="602" width="2">		<text/>		<nod x="817" y="-72"/>	</cox>	<cox border="0" pai="596" son="597" width="2">		<text/>		<nod x="817" y="-60"/>	</cox>	<cox border="0" pai="596" son="599" width="2">		<text/>		<nod x="817" y="-56"/>	</cox>	<cox border="0" pai="596" son="622" width="3">		<text/>		<nod x="817" y="-16"/>	</cox>	<cox border="0" pai="596" son="604" width="3">		<text/>		<nod x="817" y="208"/>	</cox>	<cox border="0" pai="596" son="615" width="3">		<text/>		<nod x="817" y="190"/>	</cox>	<cox border="0" pai="596" son="627" width="3">		<text/>		<nod x="817" y="70"/>	</cox>	<cox border="0" pai="596" son="598" width="2">		<text/>		<nod x="817" y="-68"/>	</cox>	<cox border="0" pai="596" son="933" width="3">		<text/>		<nod x="817" y="168"/>	</cox>	<cox border="0" pai="596" son="949" width="3">		<text/>		<nod x="817" y="-38"/>	</cox>	<cox border="0" pai="596" son="950" width="2">		<text/>		<nod x="817" y="-52"/>	</cox>	<cox border="0" pai="596" son="951" width="2">		<text/>		<nod x="817" y="-48"/>	</cox>	<cox border="0" pai="596" son="952" width="2">		<text/>		<nod x="817" y="-64"/>	</cox>	<cox border="1" pai="600" son="597" width="0">		<text/>	</cox>	<cox border="2" pai="600" son="598" width="0">		<text/>	</cox>	<cox border="0" pai="598" son="807" width="2">		<text/>	</cox>	<cox border="2" pai="598" son="952" width="0">		<text/>	</cox>	<cox border="2" pai="600" son="599" width="0">		<text/>	</cox>	<cox border="0" pai="599" son="808" width="2">		<text/>	</cox>	<cox border="2" pai="599" son="950" width="0">		<text/>	</cox>	<cox border="2" pai="599" son="951" width="0">		<text/>	</cox>	<cox border="2" pai="600" son="601" width="0">		<text/>	</cox>	<cox border="1" pai="600" son="602" width="0">		<text/>	</cox>	<cox border="2" pai="600" son="617" width="0">		<text/>	</cox>	<cox border="2" pai="600" son="628" width="0">		<text/>	</cox>	<cox border="2" pai="600" son="603" width="0">		<text/>	</cox>	<cox border="2" pai="600" son="619" width="0">		<text/>	</cox>	<cox border="2" pai="600" son="908" width="0">		<text/>	</cox>	<cox border="0" pai="949" son="600" width="2">		<text/>		<nod x="813" y="-29"/>	</cox>	<cox border="2" pai="600" son="937" width="0">		<text/>	</cox>	<cox border="2" pai="600" son="938" width="0">		<text/>	</cox>	<cox border="0" pai="601" son="809" width="2">		<text/>	</cox>	<cox border="0" pai="601" son="816" width="2">		<text/>	</cox>	<cox border="0" pai="601" son="948" width="0">		<text/>	</cox>	<cox border="0" pai="949" son="601" width="2">		<text/>		<nod x="813" y="-33"/>	</cox>	<cox border="2" pai="602" son="619" width="0">		<text/>	</cox>	<cox border="0" pai="604" son="603" width="2">		<text/>		<nod x="812" y="213"/>	</cox>	<cox border="1" pai="603" son="605" width="0">		<text/>	</cox>	<cox border="1" pai="603" son="606" width="0">		<text/>	</cox>	<cox border="0" pai="604" son="613" width="2">		<text/>		<nod x="812" y="217"/>	</cox>	<cox border="0" pai="604" son="612" width="2">		<text/>		<nod x="812" y="221"/>	</cox>	<cox border="0" pai="604" son="614" width="2">		<text/>		<nod x="812" y="225"/>	</cox>	<cox border="0" pai="604" son="611" width="2">		<text/>		<nod x="812" y="229"/>	</cox>	<cox border="0" pai="604" son="606" width="2">		<text/>		<nod x="812" y="233"/>	</cox>	<cox border="0" pai="604" son="608" width="2">		<text/>		<nod x="812" y="237"/>	</cox>	<cox border="0" pai="604" son="605" width="2">		<text/>		<nod x="812" y="241"/>	</cox>	<cox border="0" pai="604" son="609" width="2">		<text/>		<nod x="812" y="245"/>	</cox>	<cox border="0" pai="604" son="610" width="2">		<text/>		<nod x="812" y="249"/>	</cox>	<cox border="0" pai="604" son="607" width="2">		<text/>		<nod x="812" y="253"/>	</cox>	<cox border="0" pai="605" son="671" width="0">		<text/>	</cox>	<cox border="3" pai="605" son="612" width="0">		<text/>	</cox>	<cox border="3" pai="605" son="614" width="0">		<text/>	</cox>	<cox border="3" pai="605" son="611" width="0">		<text/>	</cox>	<cox border="3" pai="605" son="613" width="0">		<text/>	</cox>	<cox border="3" pai="605" son="608" width="0">		<text/>	</cox>	<cox border="3" pai="605" son="609" width="0">		<text/>	</cox>	<cox border="3" pai="605" son="610" width="0">		<text/>	</cox>	<cox border="3" pai="605" son="607" width="0">		<text/>	</cox>	<cox border="0" pai="609" son="672" width="0">		<text/>	</cox>	<cox border="0" pai="611" son="673" width="0">		<text/>	</cox>	<cox border="0" pai="615" son="616" width="2">		<text/>		<nod x="812" y="195"/>	</cox>	<cox border="0" pai="615" son="617" width="2">		<text/>		<nod x="812" y="199"/>	</cox>	<cox border="0" pai="615" son="958" width="2">		<text/>		<nod x="812" y="203"/>	</cox>	<cox border="1" pai="617" son="616" width="0">		<text/>	</cox>	<cox border="2" pai="617" son="958" width="0">		<text/>	</cox>	<cox border="0" pai="622" son="618" width="2">		<text/>		<nod x="812" y="-7"/>	</cox>	<cox border="1" pai="619" son="618" width="0">		<text/>	</cox>	<cox border="3" pai="618" son="651" width="0">		<text/>	</cox>	<cox border="3" pai="618" son="649" width="0">		<text/>	</cox>	<cox border="3" pai="618" son="652" width="0">		<text/>	</cox>	<cox border="3" pai="618" son="648" width="0">		<text/>	</cox>	<cox border="0" pai="618" son="657" width="0">		<text/>	</cox>	<cox border="0" pai="622" son="619" width="2">		<text/>		<nod x="812" y="-11"/>	</cox>	<cox border="1" pai="619" son="651" width="0">		<text/>	</cox>	<cox border="1" pai="619" son="648" width="0">		<text/>	</cox>	<cox border="1" pai="619" son="652" width="0">		<text/>	</cox>	<cox border="0" pai="622" son="620" width="3">		<text/>		<nod x="812" y="2"/>	</cox>	<cox border="0" pai="620" son="648" width="2">		<text/>		<nod x="807" y="21"/>	</cox>	<cox border="0" pai="620" son="939" width="3">		<text/>		<nod x="807" y="7"/>	</cox>	<cox border="0" pai="620" son="941" width="2">		<text/>		<nod x="807" y="25"/>	</cox>	<cox border="0" pai="620" son="942" width="2">		<text/>		<nod x="807" y="29"/>	</cox>	<cox border="0" pai="622" son="621" width="3">		<text/>		<nod x="812" y="34"/>	</cox>	<cox border="0" pai="621" son="651" width="2">		<text/>		<nod x="807" y="39"/>	</cox>	<cox border="0" pai="621" son="944" width="2">		<text/>		<nod x="807" y="43"/>	</cox>	<cox border="0" pai="621" son="945" width="2">		<text/>		<nod x="807" y="47"/>	</cox>	<cox border="0" pai="622" son="650" width="2">		<text/>		<nod x="812" y="-3"/>	</cox>	<cox border="0" pai="622" son="943" width="3">		<text/>		<nod x="812" y="52"/>	</cox>	<cox border="2" pai="651" son="623" width="0">		<text/>	</cox>	<cox border="0" pai="933" son="623" width="2">		<text/>		<nod x="810" y="185"/>	</cox>	<cox border="2" pai="648" son="624" width="0">		<text/>	</cox>	<cox border="2" pai="651" son="624" width="0">		<text/>	</cox>	<cox border="0" pai="933" son="624" width="2">		<text/>		<nod x="810" y="173"/>	</cox>	<cox border="2" pai="648" son="625" width="0">		<text/>	</cox>	<cox border="0" pai="933" son="625" width="2">		<text/>		<nod x="810" y="181"/>	</cox>	<cox border="2" pai="651" son="626" width="0">		<text/>	</cox>	<cox border="0" pai="933" son="626" width="2">		<text/>		<nod x="810" y="177"/>	</cox>	<cox border="0" pai="627" son="642" width="3">		<text/>		<nod x="812" y="92"/>	</cox>	<cox border="0" pai="627" son="636" width="3">		<text/>		<nod x="812" y="110"/>	</cox>	<cox border="0" pai="627" son="646" width="3">		<text/>		<nod x="812" y="132"/>	</cox>	<cox border="0" pai="627" son="629" width="2">		<text/>		<nod x="812" y="75"/>	</cox>	<cox border="0" pai="627" son="630" width="2">		<text/>		<nod x="812" y="79"/>	</cox>	<cox border="0" pai="627" son="631" width="2">		<text/>		<nod x="812" y="83"/>	</cox>	<cox border="0" pai="627" son="628" width="2">		<text/>		<nod x="812" y="87"/>	</cox>	<cox border="0" pai="627" son="632" width="3">		<text/>		<nod x="812" y="150"/>	</cox>	<cox border="1" pai="628" son="630" width="0">		<text/>	</cox>	<cox border="1" pai="628" son="631" width="0">		<text/>	</cox>	<cox border="0" pai="628" son="734" width="2">		<text/>	</cox>	<cox border="3" pai="629" son="633" width="0">		<text/>	</cox>	<cox border="3" pai="629" son="639" width="0">		<text/>	</cox>	<cox border="3" pai="629" son="643" width="0">		<text/>	</cox>	<cox border="3" pai="629" son="647" width="0">		<text/>	</cox>	<cox border="3" pai="629" son="874" width="0">		<text/>	</cox>	<cox border="3" pai="653" son="629" width="0">		<text/>	</cox>	<cox border="3" pai="630" son="634" width="0">		<text/>	</cox>	<cox border="3" pai="630" son="635" width="0">		<text/>	</cox>	<cox border="3" pai="630" son="640" width="0">		<text/>	</cox>	<cox border="3" pai="630" son="644" width="0">		<text/>	</cox>	<cox border="3" pai="653" son="630" width="0">		<text/>	</cox>	<cox border="3" pai="653" son="631" width="0">		<text/>	</cox>	<cox border="0" pai="632" son="633" width="2">		<text/>		<nod x="808" y="155"/>	</cox>	<cox border="0" pai="632" son="637" width="2">		<text/>		<nod x="808" y="163"/>	</cox>	<cox border="0" pai="632" son="634" width="2">		<text/>		<nod x="808" y="159"/>	</cox>	<cox border="1" pai="634" son="633" width="0">		<text/>	</cox>	<cox border="1" pai="634" son="637" width="0">		<text/>	</cox>	<cox border="1" pai="634" son="651" width="0">		<text/>	</cox>	<cox border="0" pai="636" son="635" width="2">		<text/>		<nod x="807" y="119"/>	</cox>	<cox border="1" pai="635" son="638" width="0">		<text/>	</cox>	<cox border="1" pai="635" son="639" width="0">		<text/>	</cox>	<cox border="1" pai="635" son="651" width="0">		<text/>	</cox>	<cox border="2" pai="635" son="874" width="0">		<text/>	</cox>	<cox border="0" pai="636" son="639" width="2">		<text/>		<nod x="807" y="115"/>	</cox>	<cox border="0" pai="636" son="638" width="2">		<text/>		<nod x="807" y="127"/>	</cox>	<cox border="0" pai="636" son="874" width="2">		<text/>		<nod x="807" y="123"/>	</cox>	<cox border="0" pai="642" son="640" width="2">		<text/>		<nod x="807" y="101"/>	</cox>	<cox border="1" pai="640" son="641" width="0">		<text/>	</cox>	<cox border="1" pai="640" son="643" width="0">		<text/>	</cox>	<cox border="1" pai="640" son="648" width="0">		<text/>	</cox>	<cox border="1" pai="640" son="651" width="0">		<text/>	</cox>	<cox border="0" pai="642" son="641" width="2">		<text/>		<nod x="807" y="105"/>	</cox>	<cox border="0" pai="642" son="643" width="2">		<text/>		<nod x="807" y="97"/>	</cox>	<cox border="0" pai="646" son="644" width="2">		<text/>		<nod x="807" y="141"/>	</cox>	<cox border="1" pai="644" son="645" width="0">		<text/>	</cox>	<cox border="1" pai="644" son="647" width="0">		<text/>	</cox>	<cox border="1" pai="644" son="648" width="0">		<text/>	</cox>	<cox border="0" pai="646" son="645" width="2">		<text/>		<nod x="807" y="145"/>	</cox>	<cox border="0" pai="646" son="647" width="2">		<text/>		<nod x="807" y="137"/>	</cox>	<cox border="1" pai="648" son="652" width="0">		<text/>	</cox>	<cox border="1" pai="648" son="649" width="0">		<text/>	</cox>	<cox border="1" pai="651" son="648" width="0">		<text/>	</cox>	<cox border="1" pai="648" son="650" width="0">		<text/>	</cox>	<cox border="0" pai="648" son="754" width="2">		<text/>	</cox>	<cox border="2" pai="648" son="941" width="0">		<text/>	</cox>	<cox border="2" pai="648" son="942" width="0">		<text/>	</cox>	<cox border="0" pai="649" son="752" width="2">		<text/>	</cox>	<cox border="0" pai="939" son="649" width="2">		<text/>		<nod x="802" y="12"/>	</cox>	<cox border="2" pai="649" son="940" width="0">		<text/>	</cox>	<cox border="1" pai="651" son="650" width="0">		<text/>	</cox>	<cox border="0" pai="651" son="751" width="2">		<text/>	</cox>	<cox border="2" pai="651" son="944" width="0">		<text/>	</cox>	<cox border="2" pai="651" son="945" width="0">		<text/>	</cox>	<cox border="0" pai="652" son="753" width="2">		<text/>	</cox>	<cox border="0" pai="943" son="652" width="2">		<text/>		<nod x="807" y="57"/>	</cox>	<cox border="2" pai="652" son="946" width="0">		<text/>	</cox>	<cox border="2" pai="652" son="947" width="0">		<text/>	</cox>	<cox border="3" pai="653" son="877" width="0">		<text/>	</cox>	<cox border="3" pai="653" son="879" width="0">		<text/>	</cox>	<cox border="3" pai="653" son="664" width="0">		<text/>	</cox>	<cox border="3" pai="653" son="665" width="0">		<text/>	</cox>	<cox border="3" pai="653" son="667" width="0">		<text/>	</cox>	<cox border="3" pai="653" son="668" width="0">		<text/>	</cox>	<cox border="3" pai="653" son="669" width="0">		<text/>	</cox>	<cox border="3" pai="653" son="670" width="0">		<text/>	</cox>	<cox border="3" pai="653" son="654" width="0">		<text/>	</cox>	<cox border="3" pai="653" son="655" width="0">		<text/>	</cox>	<cox border="3" pai="653" son="656" width="0">		<text/>	</cox>	<cox border="3" pai="653" son="958" width="0">		<text/>	</cox>	<cox border="0" pai="654" son="655" width="0">		<text/>	</cox>	<cox border="0" pai="654" son="656" width="0">		<text/>	</cox>	<cox border="0" pai="958" son="654" width="0">		<text/>	</cox>	<cox border="0" pai="941" son="658" width="0">		<text/>	</cox>	<cox border="0" pai="940" son="659" width="0">		<text/>	</cox>	<cox border="0" pai="946" son="660" width="0">		<text/>	</cox>	<cox border="0" pai="945" son="661" width="0">		<text/>	</cox>	<cox border="0" pai="944" son="662" width="0">		<text/>	</cox>	<cox border="0" pai="950" son="663" width="0">		<text/>	</cox>	<cox border="0" pai="937" son="674" width="0">		<text/>	</cox>	<cox border="0" pai="937" son="675" width="0">		<text/>	</cox>	<cox border="0" pai="676" son="677" width="0">		<text/>		<nod x="1142" y="-65"/>	</cox>	<cox border="0" pai="676" son="678" width="0">		<text/>		<nod x="1155" y="-65"/>	</cox>	<cox border="0" pai="676" son="680" width="0">		<text/>		<nod x="1184" y="-65"/>	</cox>	<cox border="0" pai="676" son="681" width="0">		<text/>		<nod x="1205" y="-65"/>	</cox>	<cox border="0" pai="676" son="687" width="0">		<text/>		<nod x="1213" y="-65"/>	</cox>	<cox border="0" pai="676" son="866" width="0">		<text/>	</cox>	<cox border="0" pai="676" son="872" width="0">		<text/>		<nod x="1227" y="-65"/>	</cox>	<cox border="0" pai="676" son="910" width="0">		<text/>		<nod x="1220" y="-65"/>	</cox>	<cox border="0" pai="677" son="683" width="0">		<text/>		<nod x="1142" y="-58"/>	</cox>	<cox border="0" pai="677" son="684" width="0">		<text/>		<nod x="1142" y="-54"/>	</cox>	<cox border="0" pai="677" son="685" width="0">		<text/>		<nod x="1142" y="-52"/>	</cox>	<cox border="0" pai="677" son="686" width="0">		<text/>		<nod x="1142" y="-44"/>	</cox>	<cox border="0" pai="677" son="696" width="0">		<text/>		<nod x="1142" y="-56"/>	</cox>	<cox border="0" pai="677" son="697" width="0">		<text/>		<nod x="1142" y="-46"/>	</cox>	<cox border="0" pai="677" son="682" width="0">		<text/>		<nod x="1142" y="-60"/>	</cox>	<cox border="0" pai="677" son="911" width="0">		<text/>		<nod x="1142" y="-48"/>	</cox>	<cox border="0" pai="677" son="914" width="0">		<text/>		<nod x="1142" y="-50"/>	</cox>	<cox border="0" pai="678" son="679" width="0">		<text/>		<nod x="1155" y="-54"/>	</cox>	<cox border="0" pai="678" son="688" width="0">		<text/>		<nod x="1155" y="-60"/>	</cox>	<cox border="0" pai="678" son="689" width="0">		<text/>		<nod x="1155" y="-58"/>	</cox>	<cox border="0" pai="678" son="698" width="0">		<text/>		<nod x="1155" y="-56"/>	</cox>	<cox border="0" pai="678" son="702" width="0">		<text/>		<nod x="1155" y="-30"/>	</cox>	<cox border="0" pai="678" son="701" width="0">		<text/>		<nod x="1155" y="-5"/>	</cox>	<cox border="0" pai="678" son="703" width="0">		<text/>		<nod x="1155" y="-28"/>	</cox>	<cox border="0" pai="678" son="704" width="0">		<text/>		<nod x="1155" y="-3"/>	</cox>	<cox border="0" pai="678" son="705" width="0">		<text/>		<nod x="1155" y="-1"/>	</cox>	<cox border="0" pai="678" son="706" width="0">		<text/>		<nod x="1155" y="3"/>	</cox>	<cox border="0" pai="678" son="707" width="0">		<text/>		<nod x="1155" y="5"/>	</cox>	<cox border="0" pai="678" son="708" width="0">		<text/>		<nod x="1155" y="7"/>	</cox>	<cox border="0" pai="678" son="709" width="0">		<text/>		<nod x="1155" y="9"/>	</cox>	<cox border="0" pai="678" son="710" width="0">		<text/>		<nod x="1155" y="11"/>	</cox>	<cox border="0" pai="678" son="711" width="0">		<text/>		<nod x="1155" y="13"/>	</cox>	<cox border="0" pai="678" son="712" width="0">		<text/>		<nod x="1155" y="15"/>	</cox>	<cox border="0" pai="678" son="864" width="0">		<text/>		<nod x="1155" y="-35"/>	</cox>	<cox border="0" pai="678" son="912" width="0">		<text/>		<nod x="1155" y="1"/>	</cox>	<cox border="0" pai="678" son="924" width="0">		<text/>		<nod x="1155" y="-26"/>	</cox>	<cox border="0" pai="679" son="690" width="0">		<text/>		<nod x="1158" y="-51"/>	</cox>	<cox border="0" pai="679" son="691" width="0">		<text/>		<nod x="1158" y="-49"/>	</cox>	<cox border="0" pai="679" son="692" width="0">		<text/>		<nod x="1158" y="-45"/>	</cox>	<cox border="0" pai="679" son="693" width="0">		<text/>		<nod x="1158" y="-43"/>	</cox>	<cox border="0" pai="679" son="694" width="0">		<text/>		<nod x="1158" y="-41"/>	</cox>	<cox border="0" pai="679" son="695" width="0">		<text/>		<nod x="1158" y="-37"/>	</cox>	<cox border="0" pai="679" son="699" width="0">		<text/>		<nod x="1158" y="-47"/>	</cox>	<cox border="0" pai="679" son="700" width="0">		<text/>		<nod x="1158" y="-39"/>	</cox>	<cox border="0" pai="680" son="713" width="0">		<text/>		<nod x="1184" y="-60"/>	</cox>	<cox border="0" pai="680" son="714" width="0">		<text/>		<nod x="1184" y="-58"/>	</cox>	<cox border="0" pai="680" son="718" width="0">		<text/>		<nod x="1184" y="-38"/>	</cox>	<cox border="0" pai="680" son="719" width="0">		<text/>		<nod x="1184" y="-34"/>	</cox>	<cox border="0" pai="680" son="720" width="0">		<text/>		<nod x="1184" y="-32"/>	</cox>	<cox border="0" pai="680" son="721" width="0">		<text/>		<nod x="1184" y="-30"/>	</cox>	<cox border="0" pai="680" son="722" width="0">		<text/>		<nod x="1184" y="-28"/>	</cox>	<cox border="0" pai="680" son="723" width="0">		<text/>		<nod x="1184" y="-24"/>	</cox>	<cox border="0" pai="680" son="731" width="0">		<text/>		<nod x="1184" y="-40"/>	</cox>	<cox border="0" pai="680" son="730" width="0">		<text/>		<nod x="1184" y="-36"/>	</cox>	<cox border="0" pai="680" son="729" width="0">		<text/>		<nod x="1184" y="-26"/>	</cox>	<cox border="0" pai="681" son="724" width="0">		<text/>		<nod x="1205" y="-60"/>	</cox>	<cox border="0" pai="681" son="725" width="0">		<text/>		<nod x="1205" y="-52"/>	</cox>	<cox border="0" pai="681" son="726" width="0">		<text/>		<nod x="1205" y="-50"/>	</cox>	<cox border="0" pai="681" son="727" width="0">		<text/>		<nod x="1205" y="-46"/>	</cox>	<cox border="0" pai="681" son="728" width="0">		<text/>		<nod x="1205" y="-44"/>	</cox>	<cox border="0" pai="681" son="732" width="0">		<text/>		<nod x="1205" y="-48"/>	</cox>	<cox border="0" pai="681" son="733" width="0">		<text/>		<nod x="1205" y="-58"/>	</cox>	<cox border="0" pai="681" son="902" width="0">		<text/>		<nod x="1205" y="-54"/>	</cox>	<cox border="0" pai="681" son="903" width="0">		<text/>		<nod x="1205" y="-56"/>	</cox>	<cox border="0" pai="829" son="688" width="1">		<text/>	</cox>	<cox border="0" pai="830" son="689" width="1">		<text/>	</cox>	<cox border="0" pai="822" son="690" width="1">		<text/>	</cox>	<cox border="0" pai="818" son="691" width="1">		<text/>	</cox>	<cox border="0" pai="819" son="692" width="1">		<text/>	</cox>	<cox border="0" pai="820" son="693" width="1">		<text/>	</cox>	<cox border="0" pai="821" son="694" width="1">		<text/>	</cox>	<cox border="0" pai="835" son="695" width="1">		<text/>	</cox>	<cox border="0" pai="818" son="702" width="1">		<text/>	</cox>	<cox border="0" pai="818" son="703" width="1">		<text/>	</cox>	<cox border="0" pai="831" son="704" width="1">		<text/>	</cox>	<cox border="0" pai="832" son="705" width="1">		<text/>	</cox>	<cox border="0" pai="833" son="706" width="1">		<text/>	</cox>	<cox border="0" pai="824" son="707" width="1">		<text/>	</cox>	<cox border="0" pai="828" son="709" width="1">		<text/>	</cox>	<cox border="0" pai="823" son="710" width="1">		<text/>	</cox>	<cox border="0" pai="825" son="711" width="1">		<text/>	</cox>	<cox border="0" pai="834" son="712" width="1">		<text/>	</cox>	<cox border="0" pai="714" son="715" width="0">		<text/>		<nod x="1187" y="-55"/>	</cox>	<cox border="0" pai="714" son="716" width="0">		<text/>		<nod x="1187" y="-53"/>	</cox>	<cox border="0" pai="714" son="717" width="0">		<text/>		<nod x="1187" y="-42"/>	</cox>	<cox border="0" pai="714" son="845" width="0">		<text/>		<nod x="1187" y="-51"/>	</cox>	<cox border="0" pai="817" son="715" width="1">		<text/>	</cox>	<cox border="0" pai="817" son="716" width="1">		<text/>	</cox>	<cox border="0" pai="817" son="717" width="1">		<text/>	</cox>	<cox border="0" pai="827" son="718" width="1">		<text/>	</cox>	<cox border="0" pai="734" son="735" width="0">		<text/>	</cox>	<cox border="0" pai="734" son="736" width="0">		<text/>	</cox>	<cox border="0" pai="734" son="737" width="0">		<text/>	</cox>	<cox border="0" pai="734" son="738" width="0">		<text/>	</cox>	<cox border="0" pai="735" son="739" width="0">		<text/>		<nod x="849" y="67"/>	</cox>	<cox border="0" pai="736" son="740" width="0">		<text/>		<nod x="849" y="73"/>	</cox>	<cox border="0" pai="736" son="741" width="0">		<text/>		<nod x="849" y="75"/>	</cox>	<cox border="0" pai="736" son="742" width="0">		<text/>		<nod x="849" y="77"/>	</cox>	<cox border="0" pai="736" son="743" width="0">		<text/>		<nod x="849" y="79"/>	</cox>	<cox border="0" pai="736" son="744" width="0">		<text/>		<nod x="849" y="81"/>	</cox>	<cox border="0" pai="736" son="745" width="0">		<text/>		<nod x="849" y="83"/>	</cox>	<cox border="0" pai="736" son="746" width="0">		<text/>		<nod x="849" y="85"/>	</cox>	<cox border="0" pai="737" son="747" width="0">		<text/>		<nod x="849" y="91"/>	</cox>	<cox border="0" pai="737" son="748" width="0">		<text/>		<nod x="849" y="95"/>	</cox>	<cox border="0" pai="737" son="749" width="0">		<text/>		<nod x="849" y="97"/>	</cox>	<cox border="0" pai="737" son="869" width="0">		<text/>		<nod x="849" y="93"/>	</cox>	<cox border="0" pai="738" son="750" width="0">		<text/>		<nod x="849" y="103"/>	</cox>	<cox border="0" pai="853" son="739" width="1">		<text/>	</cox>	<cox border="0" pai="822" son="743" width="1">		<text/>	</cox>	<cox border="0" pai="850" son="744" width="1">		<text/>	</cox>	<cox border="0" pai="858" son="745" width="1">		<text/>	</cox>	<cox border="0" pai="824" son="746" width="1">		<text/>	</cox>	<cox border="0" pai="852" son="748" width="1">		<text/>	</cox>	<cox border="0" pai="824" son="749" width="1">		<text/>	</cox>	<cox border="0" pai="824" son="750" width="1">		<text/>	</cox>	<cox border="0" pai="751" son="755" width="0">		<text/>	</cox>	<cox border="0" pai="751" son="756" width="1">		<text/>	</cox>	<cox border="0" pai="751" son="757" width="1">		<text/>	</cox>	<cox border="0" pai="751" son="788" width="1">		<text/>	</cox>	<cox border="0" pai="751" son="766" width="1">		<text/>	</cox>	<cox border="0" pai="751" son="768" width="1">		<text/>	</cox>	<cox border="0" pai="751" son="758" width="1">		<text/>	</cox>	<cox border="0" pai="752" son="799" width="0">		<text/>	</cox>	<cox border="0" pai="752" son="803" width="1">		<text/>	</cox>	<cox border="0" pai="753" son="780" width="1">		<text/>	</cox>	<cox border="0" pai="753" son="781" width="1">		<text/>	</cox>	<cox border="0" pai="753" son="782" width="0">		<text/>	</cox>	<cox border="0" pai="753" son="792" width="1">		<text/>	</cox>	<cox border="0" pai="753" son="802" width="1">		<text/>	</cox>	<cox border="0" pai="754" son="790" width="1">		<text/>	</cox>	<cox border="0" pai="754" son="776" width="0">		<text/>	</cox>	<cox border="0" pai="754" son="774" width="1">		<text/>	</cox>	<cox border="0" pai="754" son="773" width="1">		<text/>	</cox>	<cox border="0" pai="754" son="801" width="1">		<text/>	</cox>	<cox border="0" pai="755" son="759" width="0">		<text/>	</cox>	<cox border="0" pai="760" son="755" width="1">		<text/>	</cox>	<cox border="0" pai="762" son="755" width="1">		<text/>	</cox>	<cox border="0" pai="764" son="755" width="1">		<text/>	</cox>	<cox border="0" pai="755" son="763" width="0">		<text/>	</cox>	<cox border="0" pai="755" son="761" width="0">		<text/>	</cox>	<cox border="0" pai="772" son="755" width="1">		<text/>	</cox>	<cox border="0" pai="767" son="755" width="1">		<text/>	</cox>	<cox border="0" pai="783" son="755" width="1">		<text/>	</cox>	<cox border="0" pai="755" son="787" width="0">		<text/>	</cox>	<cox border="0" pai="755" son="765" width="0">		<text/>	</cox>	<cox border="0" pai="755" son="770" width="0">		<text/>	</cox>	<cox border="0" pai="759" son="756" width="1">		<text/>	</cox>	<cox border="0" pai="756" son="760" width="0">		<text/>	</cox>	<cox border="0" pai="757" son="762" width="0">		<text/>	</cox>	<cox border="0" pai="761" son="757" width="1">		<text/>	</cox>	<cox border="0" pai="763" son="758" width="1">		<text/>	</cox>	<cox border="0" pai="758" son="764" width="0">		<text/>	</cox>	<cox border="0" pai="765" son="766" width="1">		<text/>	</cox>	<cox border="1" pai="765" son="771" width="1">		<text/>	</cox>	<cox border="0" pai="766" son="767" width="0">		<text/>	</cox>	<cox border="0" pai="804" son="766" width="1">		<text/>	</cox>	<cox border="0" pai="767" son="768" width="1">		<text/>	</cox>	<cox border="1" pai="767" son="777" width="1">		<text/>	</cox>	<cox border="0" pai="770" son="768" width="1">		<text/>	</cox>	<cox border="0" pai="768" son="772" width="0">		<text/>	</cox>	<cox border="0" pai="768" son="804" width="0">		<text/>	</cox>	<cox border="1" pai="768" son="771" width="1">		<text/>	</cox>	<cox border="0" pai="776" son="769" width="0">		<text/>	</cox>	<cox border="0" pai="769" son="773" width="1">		<text/>	</cox>	<cox border="1" pai="769" son="770" width="1">		<text/>	</cox>	<cox border="1" pai="769" son="779" width="1">		<text/>	</cox>	<cox border="1" pai="771" son="770" width="1">		<text/>	</cox>	<cox border="0" pai="776" son="771" width="0">		<text/>	</cox>	<cox border="0" pai="771" son="774" width="1">		<text/>	</cox>	<cox border="1" pai="778" son="771" width="1">		<text/>	</cox>	<cox border="1" pai="771" son="779" width="1">		<text/>	</cox>	<cox border="1" pai="806" son="771" width="1">		<text/>	</cox>	<cox border="1" pai="775" son="772" width="1">		<text/>	</cox>	<cox border="1" pai="777" son="772" width="1">		<text/>	</cox>	<cox border="1" pai="805" son="772" width="1">		<text/>	</cox>	<cox border="0" pai="773" son="775" width="0">		<text/>	</cox>	<cox border="0" pai="805" son="773" width="1">		<text/>	</cox>	<cox border="0" pai="774" son="777" width="0">		<text/>	</cox>	<cox border="0" pai="775" son="774" width="1">		<text/>	</cox>	<cox border="0" pai="774" son="805" width="0">		<text/>	</cox>	<cox border="0" pai="775" son="776" width="1">		<text/>	</cox>	<cox border="1" pai="775" son="786" width="1">		<text/>	</cox>	<cox border="0" pai="776" son="789" width="0">		<text/>	</cox>	<cox border="0" pai="784" son="776" width="1">		<text/>	</cox>	<cox border="0" pai="776" son="797" width="0">		<text/>	</cox>	<cox border="0" pai="794" son="776" width="1">		<text/>	</cox>	<cox border="0" pai="777" son="776" width="1">		<text/>	</cox>	<cox border="1" pai="785" son="777" width="1">		<text/>	</cox>	<cox border="1" pai="777" son="786" width="1">		<text/>	</cox>	<cox border="0" pai="781" son="778" width="0">		<text/>	</cox>	<cox border="0" pai="778" son="780" width="0">		<text/>	</cox>	<cox border="0" pai="782" son="779" width="0">		<text/>	</cox>	<cox border="0" pai="779" son="781" width="1">		<text/>	</cox>	<cox border="1" pai="805" son="779" width="1">		<text/>	</cox>	<cox border="0" pai="780" son="785" width="0">		<text/>	</cox>	<cox border="0" pai="806" son="780" width="1">		<text/>	</cox>	<cox border="0" pai="781" son="786" width="0">		<text/>	</cox>	<cox border="0" pai="785" son="781" width="1">		<text/>	</cox>	<cox border="0" pai="785" son="782" width="1">		<text/>	</cox>	<cox border="0" pai="782" son="791" width="0">		<text/>	</cox>	<cox border="0" pai="793" son="782" width="1">		<text/>	</cox>	<cox border="0" pai="786" son="782" width="1">		<text/>	</cox>	<cox border="0" pai="782" son="798" width="0">		<text/>	</cox>	<cox border="0" pai="795" son="782" width="1">		<text/>	</cox>	<cox border="0" pai="782" son="806" width="0">		<text/>	</cox>	<cox border="0" pai="788" son="783" width="0">		<text/>	</cox>	<cox border="1" pai="783" son="784" width="1">		<text/>	</cox>	<cox border="0" pai="790" son="784" width="0">		<text/>	</cox>	<cox border="1" pai="784" son="793" width="1">		<text/>	</cox>	<cox border="0" pai="787" son="788" width="1">		<text/>	</cox>	<cox border="1" pai="787" son="789" width="1">		<text/>	</cox>	<cox border="0" pai="789" son="790" width="1">		<text/>	</cox>	<cox border="1" pai="789" son="791" width="1">		<text/>	</cox>	<cox border="0" pai="791" son="792" width="1">		<text/>	</cox>	<cox border="0" pai="792" son="793" width="0">		<text/>	</cox>	<cox border="0" pai="801" son="794" width="0">		<text/>	</cox>	<cox border="1" pai="794" son="795" width="1">		<text/>	</cox>	<cox border="0" pai="802" son="795" width="0">		<text/>	</cox>	<cox border="1" pai="795" son="796" width="1">		<text/>	</cox>	<cox border="0" pai="796" son="799" width="1">		<text/>	</cox>	<cox border="0" pai="803" son="796" width="0">		<text/>	</cox>	<cox border="0" pai="797" son="801" width="1">		<text/>	</cox>	<cox border="1" pai="797" son="798" width="1">		<text/>	</cox>	<cox border="1" pai="800" son="797" width="1">		<text/>	</cox>	<cox border="0" pai="798" son="802" width="1">		<text/>	</cox>	<cox border="0" pai="799" son="800" width="0">		<text/>	</cox>	<cox border="0" pai="800" son="803" width="1">		<text/>	</cox>	<cox border="0" pai="809" son="810" width="0">		<text/>	</cox>	<cox border="0" pai="809" son="838" width="0">		<text/>	</cox>	<cox border="0" pai="809" son="836" width="0">		<text/>	</cox>	<cox border="0" pai="810" son="811" width="0">		<text/>		<nod x="994" y="241"/>	</cox>	<cox border="0" pai="810" son="812" width="0">		<text/>		<nod x="994" y="239"/>	</cox>	<cox border="0" pai="810" son="813" width="0">		<text/>		<nod x="994" y="237"/>	</cox>	<cox border="0" pai="810" son="814" width="0">		<text/>		<nod x="994" y="235"/>	</cox>	<cox border="0" pai="810" son="815" width="0">		<text/>		<nod x="994" y="233"/>	</cox>	<cox border="0" pai="816" son="837" width="0">		<text/>	</cox>	<cox border="0" pai="816" son="851" width="2">		<text/>	</cox>	<cox border="0" pai="816" son="868" width="2">		<text/>	</cox>	<cox border="0" pai="817" son="846" width="1">		<text/>	</cox>	<cox border="0" pai="817" son="847" width="1">		<text/>	</cox>	<cox border="0" pai="817" son="848" width="1">		<text/>	</cox>	<cox border="0" pai="868" son="817" width="0">		<text/>		<nod x="1078" y="47"/>		<nod x="1078" y="45"/>	</cox>	<cox border="0" pai="868" son="818" width="0">		<text/>	</cox>	<cox border="0" pai="819" son="843" width="0">		<text/>	</cox>	<cox border="0" pai="819" son="844" width="0">		<text/>	</cox>	<cox border="0" pai="868" son="819" width="0">		<text/>		<nod x="1056" y="22"/>		<nod x="1056" y="17"/>	</cox>	<cox border="0" pai="820" son="842" width="0">		<text/>	</cox>	<cox border="0" pai="820" son="841" width="0">		<text/>	</cox>	<cox border="0" pai="858" son="820" width="1">		<text/>	</cox>	<cox border="0" pai="868" son="820" width="0">		<text/>		<nod x="1056" y="27"/>		<nod x="1056" y="17"/>	</cox>	<cox border="0" pai="824" son="821" width="1">		<text/>	</cox>	<cox border="0" pai="868" son="821" width="0">		<text/>		<nod x="1056" y="30"/>		<nod x="1056" y="17"/>	</cox>	<cox border="0" pai="868" son="822" width="0">		<text/>		<nod x="1056" y="19"/>		<nod x="1056" y="17"/>	</cox>	<cox border="0" pai="826" son="823" width="1">		<text/>	</cox>	<cox border="0" pai="868" son="823" width="0">		<text/>		<nod x="1065" y="74"/>		<nod x="1065" y="70"/>	</cox>	<cox border="0" pai="824" son="831" width="1">		<text/>	</cox>	<cox border="0" pai="826" son="824" width="1">		<text/>	</cox>	<cox border="0" pai="868" son="824" width="0">		<text/>		<nod x="1074" y="68"/>		<nod x="1074" y="53"/>	</cox>	<cox border="0" pai="826" son="825" width="1">		<text/>	</cox>	<cox border="0" pai="868" son="825" width="0">		<text/>		<nod x="1065" y="76"/>		<nod x="1065" y="70"/>	</cox>	<cox border="0" pai="839" son="826" width="1">		<text/>	</cox>	<cox border="0" pai="826" son="835" width="1">		<text/>	</cox>	<cox border="0" pai="826" son="834" width="1">		<text/>	</cox>	<cox border="0" pai="826" son="828" width="1">		<text/>	</cox>	<cox border="0" pai="826" son="827" width="1">		<text/>	</cox>	<cox border="0" pai="826" son="829" width="1">		<text/>	</cox>	<cox border="0" pai="826" son="830" width="1">		<text/>	</cox>	<cox border="0" pai="826" son="832" width="1">		<text/>	</cox>	<cox border="0" pai="868" son="826" width="0">		<text/>	</cox>	<cox border="0" pai="826" son="867" width="1">		<text/>	</cox>	<cox border="0" pai="868" son="827" width="0">		<text/>		<nod x="1078" y="49"/>		<nod x="1078" y="45"/>	</cox>	<cox border="0" pai="868" son="828" width="0">		<text/>		<nod x="1065" y="72"/>		<nod x="1065" y="70"/>	</cox>	<cox border="0" pai="868" son="829" width="0">		<text/>		<nod x="1074" y="55"/>		<nod x="1074" y="53"/>	</cox>	<cox border="0" pai="868" son="830" width="0">		<text/>		<nod x="1074" y="57"/>		<nod x="1074" y="53"/>	</cox>	<cox border="0" pai="868" son="831" width="0">		<text/>		<nod x="1074" y="60"/>		<nod x="1074" y="53"/>	</cox>	<cox border="0" pai="868" son="832" width="0">		<text/>		<nod x="1074" y="62"/>		<nod x="1074" y="53"/>	</cox>	<cox border="0" pai="868" son="833" width="0">		<text/>		<nod x="1074" y="66"/>		<nod x="1074" y="53"/>	</cox>	<cox border="0" pai="868" son="834" width="0">		<text/>		<nod x="1065" y="79"/>		<nod x="1065" y="70"/>	</cox>	<cox border="0" pai="868" son="835" width="0">		<text/>		<nod x="1065" y="82"/>		<nod x="1065" y="70"/>	</cox>	<cox border="0" pai="839" son="859" width="1">		<text/>	</cox>	<cox border="0" pai="839" son="853" width="1">		<text/>	</cox>	<cox border="0" pai="839" son="852" width="1">		<text/>	</cox>	<cox border="0" pai="851" son="839" width="0">		<text/>		<nod x="1013" y="46"/>		<nod x="1013" y="44"/>	</cox>	<cox border="0" pai="839" son="867" width="1">		<text/>	</cox>	<cox border="0" pai="851" son="840" width="0">		<text/>		<nod x="1013" y="49"/>		<nod x="1013" y="44"/>	</cox>	<cox border="0" pai="850" son="844" width="1">		<text/>	</cox>	<cox border="0" pai="845" son="846" width="0">		<text/>		<nod x="1190" y="-48"/>	</cox>	<cox border="0" pai="845" son="847" width="0">		<text/>		<nod x="1190" y="-46"/>	</cox>	<cox border="0" pai="845" son="848" width="0">		<text/>		<nod x="1190" y="-44"/>	</cox>	<cox border="0" pai="851" son="850" width="0">		<text/>		<nod x="1010" y="55"/>		<nod x="1010" y="51"/>	</cox>	<cox border="0" pai="856" son="850" width="1">		<text/>	</cox>	<cox border="0" pai="851" son="852" width="0">		<text/>		<nod x="1010" y="58"/>		<nod x="1010" y="51"/>	</cox>	<cox border="0" pai="851" son="853" width="0">		<text/>		<nod x="1010" y="53"/>		<nod x="1010" y="51"/>	</cox>	<cox border="0" pai="851" son="854" width="0">		<text/>		<nod x="1004" y="53"/>		<nod x="1004" y="49"/>	</cox>	<cox border="0" pai="851" son="855" width="0">		<text/>		<nod x="1004" y="51"/>		<nod x="1004" y="49"/>	</cox>	<cox border="0" pai="851" son="856" width="0">		<text/>		<nod x="1005" y="59"/>		<nod x="1005" y="57"/>	</cox>	<cox border="0" pai="851" son="857" width="0">		<text/>		<nod x="1009" y="64"/>		<nod x="1009" y="62"/>	</cox>	<cox border="0" pai="851" son="858" width="0">		<text/>		<nod x="1005" y="64"/>		<nod x="1005" y="57"/>	</cox>	<cox border="0" pai="851" son="859" width="0">		<text/>		<nod x="1005" y="62"/>		<nod x="1005" y="57"/>	</cox>	<cox border="0" pai="851" son="860" width="0">		<text/>		<nod x="1010" y="60"/>		<nod x="1010" y="51"/>	</cox>	<cox border="0" pai="851" son="863" width="0">		<text/>		<nod x="1004" y="55"/>		<nod x="1004" y="49"/>	</cox>	<cox border="0" pai="862" son="861" width="0">		<text/>	</cox>	<cox border="0" pai="864" son="865" width="0">		<text/>		<nod x="1159" y="-32"/>	</cox>	<cox border="0" pai="867" son="865" width="1">		<text/>	</cox>	<cox border="0" pai="868" son="867" width="0">		<text/>	</cox>	<cox border="0" pai="867" son="869" width="1">		<text/>	</cox>	<cox border="0" pai="868" son="913" width="0">		<text/>		<nod x="1074" y="64"/>		<nod x="1074" y="53"/>	</cox>	<cox border="0" pai="868" son="923" width="0">		<text/>		<nod x="1079" y="36"/>		<nod x="1079" y="34"/>	</cox>	<cox border="8" pai="868" son="926" width="0">		<text/>		<nod x="1079" y="38"/>		<nod x="1079" y="34"/>	</cox>	<cox border="8" pai="868" son="927" width="0">		<text/>		<nod x="1079" y="40"/>		<nod x="1079" y="34"/>	</cox>	<cox border="0" pai="868" son="928" width="0">		<text/>		<nod x="1079" y="42"/>		<nod x="1079" y="34"/>	</cox>	<cox border="0" pai="875" son="876" width="2">		<text/>		<nod x="1034" y="-21"/>	</cox>	<cox border="0" pai="875" son="877" width="2">		<text/>		<nod x="1034" y="-25"/>	</cox>	<cox border="0" pai="875" son="957" width="2">		<text/>		<nod x="1034" y="-13"/>	</cox>	<cox border="0" pai="876" son="956" width="0">		<text/>	</cox>	<cox border="0" pai="878" son="879" width="2">		<text/>		<nod x="1034" y="-35"/>	</cox>	<cox border="0" pai="878" son="880" width="2">		<text/>		<nod x="1034" y="-47"/>	</cox>	<cox border="0" pai="878" son="881" width="2">		<text/>		<nod x="1034" y="-43"/>	</cox>	<cox border="2" pai="879" son="880" width="0">		<text/>	</cox>	<cox border="2" pai="879" son="881" width="0">		<text/>	</cox>	<cox border="0" pai="880" son="882" width="0">		<text/>	</cox>	<cox border="1" pai="880" son="881" width="0">		<text/>	</cox>	<cox border="0" pai="881" son="883" width="0">		<text/>	</cox>	<cox border="0" pai="881" son="884" width="0">		<text/>	</cox>	<cox border="0" pai="881" son="885" width="2">		<text/>	</cox>	<cox border="0" pai="885" son="892" width="0">		<text/>	</cox>	<cox border="0" pai="887" son="886" width="0">		<text/>	</cox>	<cox border="0" pai="886" son="890" width="1">		<text/>	</cox>	<cox border="0" pai="888" son="887" width="0">		<text/>	</cox>	<cox border="0" pai="893" son="888" width="1">		<text/>	</cox>	<cox border="0" pai="888" son="889" width="0">		<text/>	</cox>	<cox border="0" pai="896" son="888" width="1">		<text/>	</cox>	<cox border="0" pai="889" son="892" width="1">		<text/>	</cox>	<cox border="0" pai="890" son="895" width="0">		<text/>	</cox>	<cox border="0" pai="890" son="891" width="0">		<text/>	</cox>	<cox border="0" pai="901" son="890" width="1">		<text/>	</cox>	<cox border="0" pai="891" son="896" width="0">		<text/>	</cox>	<cox border="0" pai="892" son="893" width="0">		<text/>	</cox>	<cox border="0" pai="899" son="892" width="1">		<text/>	</cox>	<cox border="0" pai="895" son="894" width="0">		<text/>	</cox>	<cox border="0" pai="894" son="897" width="1">		<text/>	</cox>	<cox border="0" pai="897" son="900" width="0">		<text/>	</cox>	<cox border="0" pai="897" son="898" width="0">		<text/>	</cox>	<cox border="0" pai="898" son="899" width="0">		<text/>	</cox>	<cox border="0" pai="900" son="901" width="0">		<text/>	</cox>	<cox border="0" pai="905" son="906" width="3">		<text/>		<nod x="814" y="268"/>	</cox>	<cox border="0" pai="936" son="905" width="3">		<text/>		<nod x="820" y="263"/>	</cox>	<cox border="0" pai="906" son="907" width="2">		<text/>		<nod x="809" y="273"/>	</cox>	<cox border="0" pai="906" son="908" width="2">		<text/>		<nod x="809" y="277"/>	</cox>	<cox border="1" pai="908" son="907" width="0">		<text/>	</cox>	<cox border="0" pai="932" son="909" width="0">		<text/>	</cox>	<cox border="0" pai="913" son="912" width="1">		<text/>	</cox>	<cox border="0" pai="924" son="915" width="0">		<text/>		<nod x="1158" y="-23"/>	</cox>	<cox border="0" pai="923" son="915" width="1">		<text/>	</cox>	<cox border="0" pai="924" son="916" width="0">		<text/>		<nod x="1158" y="-21"/>	</cox>	<cox border="0" pai="926" son="916" width="1">		<text/>	</cox>	<cox border="0" pai="924" son="917" width="0">		<text/>		<nod x="1158" y="-19"/>	</cox>	<cox border="0" pai="927" son="917" width="1">		<text/>	</cox>	<cox border="0" pai="924" son="918" width="0">		<text/>		<nod x="1158" y="-17"/>	</cox>	<cox border="0" pai="928" son="918" width="1">		<text/>	</cox>	<cox border="0" pai="924" son="919" width="0">		<text/>		<nod x="1158" y="-13"/>	</cox>	<cox border="0" pai="923" son="919" width="1">		<text/>	</cox>	<cox border="0" pai="924" son="920" width="0">		<text/>		<nod x="1158" y="-11"/>	</cox>	<cox border="0" pai="926" son="920" width="1">		<text/>	</cox>	<cox border="0" pai="924" son="921" width="0">		<text/>		<nod x="1158" y="-9"/>	</cox>	<cox border="0" pai="927" son="921" width="1">		<text/>	</cox>	<cox border="0" pai="924" son="922" width="0">		<text/>		<nod x="1158" y="-7"/>	</cox>	<cox border="0" pai="928" son="922" width="1">		<text/>	</cox>	<cox border="0" pai="924" son="925" width="0">		<text/>		<nod x="1158" y="-15"/>	</cox>	<cox border="0" pai="934" son="935" width="3">		<text/>		<nod x="830" y="-100"/>	</cox>	<cox border="0" pai="935" son="936" width="3">		<text/>		<nod x="826" y="258"/>	</cox>	<cox border="0" pai="949" son="937" width="2">		<text/>		<nod x="813" y="-25"/>	</cox>	<cox border="0" pai="949" son="938" width="2">		<text/>		<nod x="813" y="-21"/>	</cox>	<cox border="0" pai="938" son="953" width="0">		<text/>	</cox>	<cox border="0" pai="938" son="954" width="0">		<text/>	</cox>	<cox border="0" pai="938" son="955" width="0">		<text/>	</cox>	<cox border="0" pai="939" son="940" width="2">		<text/>		<nod x="802" y="16"/>	</cox>	<cox border="0" pai="943" son="946" width="2">		<text/>		<nod x="807" y="61"/>	</cox>	<cox border="0" pai="943" son="947" width="2">		<text/>		<nod x="807" y="65"/>	</cox>	<cox border="0" pai="959" son="961" width="3">		<text/>		<nod x="1314" y="-472"/>	</cox>	<cox border="0" pai="959" son="1093" width="3">		<text/>		<nod x="1620" y="-472"/>	</cox>	<cox border="0" pai="960" son="978" width="2">		<text/>		<nod x="1623" y="-402"/>	</cox>	<cox border="0" pai="960" son="979" width="2">		<text/>		<nod x="1623" y="-394"/>	</cox>	<cox border="0" pai="960" son="981" width="2">		<text/>		<nod x="1623" y="-426"/>	</cox>	<cox border="0" pai="960" son="1090" width="2">		<text/>		<nod x="1623" y="-378"/>	</cox>	<cox border="0" pai="960" son="1091" width="2">		<text/>		<nod x="1623" y="-382"/>	</cox>	<cox border="0" pai="960" son="1088" width="2">		<text/>		<nod x="1623" y="-370"/>	</cox>	<cox border="0" pai="960" son="1089" width="2">		<text/>		<nod x="1623" y="-374"/>	</cox>	<cox border="0" pai="960" son="1092" width="2">		<text/>		<nod x="1623" y="-386"/>	</cox>	<cox border="0" pai="1093" son="960" width="2">		<text/>		<nod x="1620" y="-446"/>	</cox>	<cox border="0" pai="960" son="1102" width="2">		<text/>		<nod x="1623" y="-442"/>	</cox>	<cox border="0" pai="961" son="983" width="2">		<text/>		<nod x="1314" y="-460"/>	</cox>	<cox border="0" pai="962" son="963" width="2">		<text/>		<nod x="1326" y="-349"/>	</cox>	<cox border="0" pai="962" son="964" width="2">		<text/>		<nod x="1326" y="-345"/>	</cox>	<cox border="0" pai="962" son="965" width="2">		<text/>		<nod x="1326" y="-341"/>	</cox>	<cox border="0" pai="962" son="966" width="2">		<text/>		<nod x="1326" y="-337"/>	</cox>	<cox border="0" pai="962" son="967" width="2">		<text/>		<nod x="1326" y="-333"/>	</cox>	<cox border="0" pai="962" son="968" width="2">		<text/>		<nod x="1326" y="-373"/>	</cox>	<cox border="0" pai="962" son="969" width="2">		<text/>		<nod x="1326" y="-365"/>	</cox>	<cox border="0" pai="962" son="970" width="2">		<text/>		<nod x="1326" y="-369"/>	</cox>	<cox border="0" pai="962" son="975" width="2">		<text/>		<nod x="1326" y="-361"/>	</cox>	<cox border="0" pai="962" son="977" width="2">		<text/>		<nod x="1326" y="-357"/>	</cox>	<cox border="0" pai="986" son="962" width="2">		<text/>		<nod x="1322" y="-385"/>	</cox>	<cox border="0" pai="962" son="1043" width="2">		<text/>		<nod x="1326" y="-353"/>	</cox>	<cox border="0" pai="962" son="1100" width="2">		<text/>		<nod x="1326" y="-381"/>	</cox>	<cox border="0" pai="963" son="964" width="0">		<text/>		<nod x="1324" y="-345"/>		<nod x="1324" y="-349"/>	</cox>	<cox border="0" pai="963" son="965" width="0">		<text/>		<nod x="1324" y="-341"/>		<nod x="1324" y="-349"/>	</cox>	<cox border="0" pai="963" son="967" width="0">		<text/>		<nod x="1324" y="-333"/>		<nod x="1324" y="-349"/>	</cox>	<cox border="0" pai="963" son="966" width="0">		<text/>		<nod x="1324" y="-337"/>		<nod x="1324" y="-349"/>	</cox>	<cox border="1" pai="963" son="1055" width="0">		<text/>		<nod x="1306" y="-346"/>		<nod x="1306" y="-349"/>	</cox>	<cox border="0" pai="963" son="994" width="0">		<text/>		<nod x="1365" y="-427"/>	</cox>	<cox border="0" pai="963" son="1067" width="0">		<text/>		<nod x="1408" y="-431"/>	</cox>	<cox border="0" pai="963" son="1119" width="0">		<text/>		<nod x="1429" y="-436"/>	</cox>	<cox border="0" pai="968" son="1068" width="2">		<text/>		<nod x="1421" y="-369"/>	</cox>	<cox border="0" pai="968" son="1069" width="2">		<text/>		<nod x="1421" y="-365"/>	</cox>	<cox border="0" pai="968" son="1070" width="2">		<text/>		<nod x="1421" y="-361"/>	</cox>	<cox border="0" pai="969" son="1078" width="2">		<text/>		<nod x="1380" y="-353"/>	</cox>	<cox border="0" pai="969" son="1079" width="2">		<text/>		<nod x="1380" y="-357"/>	</cox>	<cox border="0" pai="969" son="1080" width="2">		<text/>		<nod x="1380" y="-361"/>	</cox>	<cox border="0" pai="969" son="1076" width="2">		<text/>		<nod x="1380" y="-345"/>	</cox>	<cox border="0" pai="969" son="1077" width="2">		<text/>		<nod x="1380" y="-349"/>	</cox>	<cox border="0" pai="970" son="1072" width="2">		<text/>		<nod x="1401" y="-353"/>	</cox>	<cox border="0" pai="970" son="1073" width="2">		<text/>		<nod x="1401" y="-357"/>	</cox>	<cox border="0" pai="970" son="1074" width="2">		<text/>		<nod x="1401" y="-361"/>	</cox>	<cox border="0" pai="970" son="1075" width="2">		<text/>		<nod x="1401" y="-365"/>	</cox>	<cox border="0" pai="970" son="1071" width="2">		<text/>		<nod x="1401" y="-349"/>	</cox>	<cox border="0" pai="1043" son="971" width="2">		<text/>		<nod x="1281" y="-349"/>	</cox>	<cox border="0" pai="971" son="1055" width="2">		<text/>		<nod x="1285" y="-345"/>	</cox>	<cox border="0" pai="971" son="1056" width="2">		<text/>		<nod x="1285" y="-341"/>	</cox>	<cox border="0" pai="971" son="1057" width="2">		<text/>		<nod x="1285" y="-337"/>	</cox>	<cox border="0" pai="971" son="1059" width="2">		<text/>		<nod x="1285" y="-329"/>	</cox>	<cox border="0" pai="971" son="1058" width="2">		<text/>		<nod x="1285" y="-333"/>	</cox>	<cox border="0" pai="972" son="974" width="2">		<text/>		<nod x="1286" y="-321"/>	</cox>	<cox border="0" pai="1043" son="972" width="2">		<text/>		<nod x="1281" y="-325"/>	</cox>	<cox border="0" pai="972" son="1049" width="2">		<text/>		<nod x="1286" y="-297"/>	</cox>	<cox border="0" pai="972" son="1048" width="2">		<text/>		<nod x="1286" y="-293"/>	</cox>	<cox border="0" pai="972" son="1047" width="2">		<text/>		<nod x="1286" y="-289"/>	</cox>	<cox border="0" pai="972" son="1046" width="2">		<text/>		<nod x="1286" y="-285"/>	</cox>	<cox border="0" pai="972" son="1045" width="2">		<text/>		<nod x="1286" y="-281"/>	</cox>	<cox border="0" pai="1043" son="973" width="2">		<text/>		<nod x="1281" y="-277"/>	</cox>	<cox border="0" pai="973" son="1060" width="2">		<text/>		<nod x="1285" y="-273"/>	</cox>	<cox border="0" pai="973" son="1061" width="2">		<text/>		<nod x="1285" y="-269"/>	</cox>	<cox border="0" pai="973" son="1062" width="2">		<text/>		<nod x="1285" y="-265"/>	</cox>	<cox border="0" pai="973" son="1063" width="2">		<text/>		<nod x="1285" y="-261"/>	</cox>	<cox border="0" pai="973" son="1064" width="2">		<text/>		<nod x="1285" y="-257"/>	</cox>	<cox border="0" pai="974" son="1050" width="2">		<text/>		<nod x="1291" y="-317"/>	</cox>	<cox border="0" pai="974" son="1051" width="2">		<text/>		<nod x="1291" y="-313"/>	</cox>	<cox border="0" pai="974" son="1052" width="2">		<text/>		<nod x="1291" y="-309"/>	</cox>	<cox border="0" pai="974" son="1053" width="2">		<text/>		<nod x="1291" y="-305"/>	</cox>	<cox border="0" pai="974" son="1054" width="2">		<text/>		<nod x="1291" y="-301"/>	</cox>	<cox border="0" pai="975" son="1106" width="2">		<text/>		<nod x="1357" y="-357"/>	</cox>	<cox border="0" pai="975" son="1139" width="2">		<text/>		<nod x="1357" y="-341"/>	</cox>	<cox border="0" pai="976" son="1067" width="2">		<text/>		<nod x="1399" y="-442"/>	</cox>	<cox border="0" pai="987" son="976" width="2">		<text/>		<nod x="1321" y="-446"/>	</cox>	<cox border="0" pai="977" son="1140" width="2">		<text/>		<nod x="1341" y="-353"/>	</cox>	<cox border="0" pai="978" son="1132" width="2">		<text/>		<nod x="1628" y="-398"/>	</cox>	<cox border="0" pai="979" son="1131" width="2">		<text/>		<nod x="1627" y="-390"/>	</cox>	<cox border="0" pai="1044" son="980" width="2">		<text/>		<nod x="1041" y="-362"/>	</cox>	<cox border="0" pai="980" son="1144" width="2">		<text/>		<nod x="1047" y="-354"/>	</cox>	<cox border="0" pai="980" son="1145" width="2">		<text/>		<nod x="1047" y="-358"/>	</cox>	<cox border="0" pai="980" son="1141" width="2">		<text/>		<nod x="1047" y="-342"/>	</cox>	<cox border="0" pai="980" son="1142" width="2">		<text/>		<nod x="1047" y="-346"/>	</cox>	<cox border="0" pai="980" son="1143" width="2">		<text/>		<nod x="1047" y="-350"/>	</cox>	<cox border="0" pai="981" son="1130" width="2">		<text/>		<nod x="1627" y="-422"/>	</cox>	<cox border="0" pai="981" son="1129" width="2">		<text/>		<nod x="1627" y="-418"/>	</cox>	<cox border="0" pai="981" son="1126" width="2">		<text/>		<nod x="1627" y="-406"/>	</cox>	<cox border="0" pai="981" son="1127" width="2">		<text/>		<nod x="1627" y="-410"/>	</cox>	<cox border="0" pai="981" son="1128" width="2">		<text/>		<nod x="1627" y="-414"/>	</cox>	<cox border="0" pai="1044" son="982" width="2">		<text/>		<nod x="1041" y="-387"/>	</cox>	<cox border="0" pai="982" son="1146" width="2">		<text/>		<nod x="1047" y="-383"/>	</cox>	<cox border="0" pai="982" son="1147" width="2">		<text/>		<nod x="1047" y="-379"/>	</cox>	<cox border="0" pai="982" son="1149" width="2">		<text/>		<nod x="1047" y="-371"/>	</cox>	<cox border="0" pai="982" son="1150" width="2">		<text/>		<nod x="1047" y="-367"/>	</cox>	<cox border="0" pai="982" son="1148" width="2">		<text/>		<nod x="1047" y="-375"/>	</cox>	<cox border="0" pai="983" son="986" width="2">		<text/>		<nod x="1317" y="-397"/>	</cox>	<cox border="0" pai="983" son="987" width="2">		<text/>		<nod x="1317" y="-456"/>	</cox>	<cox border="0" pai="983" son="1036" width="2">		<text/>		<nod x="1317" y="-450"/>	</cox>	<cox border="0" pai="983" son="1154" width="2">		<text/>		<nod x="1317" y="-453"/>	</cox>	<cox border="0" pai="1093" son="984" width="2">		<text/>		<nod x="1620" y="-462"/>	</cox>	<cox border="0" pai="984" son="1094" width="2">		<text/>		<nod x="1624" y="-458"/>	</cox>	<cox border="0" pai="1093" son="985" width="2">		<text/>		<nod x="1620" y="-454"/>	</cox>	<cox border="0" pai="985" son="1095" width="2">		<text/>		<nod x="1625" y="-450"/>	</cox>	<cox border="0" pai="986" son="988" width="2">		<text/>		<nod x="1322" y="-393"/>	</cox>	<cox border="0" pai="986" son="989" width="2">		<text/>		<nod x="1322" y="-389"/>	</cox>	<cox border="0" pai="987" son="993" width="2">		<text/>		<nod x="1321" y="-443"/>	</cox>	<cox border="0" pai="987" son="1010" width="2">		<text/>		<nod x="1321" y="-452"/>	</cox>	<cox border="0" pai="987" son="991" width="2">		<text/>		<nod x="1321" y="-437"/>	</cox>	<cox border="0" pai="987" son="1065" width="2">		<text/>		<nod x="1321" y="-440"/>	</cox>	<cox border="0" pai="987" son="1118" width="2">		<text/>		<nod x="1321" y="-449"/>	</cox>	<cox border="0" pai="988" son="1152" width="0">		<text/>	</cox>	<cox border="0" pai="988" son="1153" width="0">		<text/>	</cox>	<cox border="0" pai="988" son="1158" width="0">		<text/>	</cox>	<cox border="0" pai="988" son="1159" width="0">		<text/>	</cox>	<cox border="0" pai="988" son="1160" width="0">		<text/>	</cox>	<cox border="0" pai="988" son="1161" width="0">		<text/>	</cox>	<cox border="0" pai="988" son="1162" width="0">		<text/>	</cox>	<cox border="0" pai="988" son="1163" width="0">		<text/>	</cox>	<cox border="1" pai="989" son="988" width="0">		<text/>		<nod x="1318" y="-393"/>		<nod x="1318" y="-389"/>	</cox>	<cox border="0" pai="989" son="1151" width="0">		<text/>	</cox>	<cox border="0" pai="989" son="1164" width="0">		<text/>	</cox>	<cox border="0" pai="989" son="1165" width="0">		<text/>	</cox>	<cox border="0" pai="989" son="1166" width="0">		<text/>	</cox>	<cox border="0" pai="989" son="1167" width="0">		<text/>	</cox>	<cox border="0" pai="993" son="990" width="2">		<text/>		<nod x="1378" y="-439"/>	</cox>	<cox border="0" pai="1025" son="990" width="0">		<text/>		<nod x="1386" y="-428"/>	</cox>	<cox border="0" pai="991" son="1066" width="2">		<text/>		<nod x="1336" y="-433"/>	</cox>	<cox border="0" pai="992" son="995" width="2">		<text/>		<nod x="1041" y="-445"/>	</cox>	<cox border="0" pai="992" son="998" width="2">		<text/>		<nod x="1041" y="-428"/>	</cox>	<cox border="0" pai="1154" son="992" width="2">		<text/>		<nod x="1037" y="-449"/>	</cox>	<cox border="0" pai="1065" son="994" width="2">		<text/>		<nod x="1356" y="-436"/>	</cox>	<cox border="0" pai="1146" son="994" width="0">		<text/>		<nod x="1365" y="-427"/>	</cox>	<cox border="0" pai="1138" son="994" width="0">		<text/>		<nod x="1365" y="-427"/>	</cox>	<cox border="0" pai="1092" son="994" width="0">		<text/>		<nod x="1365" y="-427"/>	</cox>	<cox border="0" pai="995" son="996" width="2">		<text/>		<nod x="1047" y="-441"/>	</cox>	<cox border="0" pai="995" son="997" width="2">		<text/>		<nod x="1047" y="-437"/>	</cox>	<cox border="0" pai="996" son="1005" width="2">		<text/>		<nod x="1066" y="-437"/>	</cox>	<cox border="0" pai="997" son="1006" width="2">		<text/>		<nod x="1052" y="-433"/>	</cox>	<cox border="0" pai="998" son="999" width="2">		<text/>		<nod x="1047" y="-424"/>	</cox>	<cox border="0" pai="998" son="1157" width="2">		<text/>		<nod x="1047" y="-421"/>	</cox>	<cox border="0" pai="999" son="1000" width="2">		<text/>		<nod x="1146" y="-420"/>	</cox>	<cox border="0" pai="999" son="1003" width="2">		<text/>		<nod x="1146" y="-332"/>	</cox>	<cox border="0" pai="999" son="1032" width="2">		<text/>		<nod x="1146" y="-300"/>	</cox>	<cox border="0" pai="999" son="1035" width="2">		<text/>		<nod x="1146" y="-296"/>	</cox>	<cox border="0" pai="999" son="1034" width="2">		<text/>		<nod x="1146" y="-292"/>	</cox>	<cox border="0" pai="999" son="1033" width="2">		<text/>		<nod x="1146" y="-304"/>	</cox>	<cox border="0" pai="1000" son="1001" width="2">		<text/>		<nod x="1151" y="-416"/>	</cox>	<cox border="0" pai="1000" son="1002" width="2">		<text/>		<nod x="1151" y="-376"/>	</cox>	<cox border="0" pai="1000" son="1228" width="2">		<text/>		<nod x="1151" y="-356"/>	</cox>	<cox border="0" pai="1000" son="1229" width="2">		<text/>		<nod x="1151" y="-352"/>	</cox>	<cox border="0" pai="1000" son="1230" width="2">		<text/>		<nod x="1151" y="-348"/>	</cox>	<cox border="0" pai="1000" son="1231" width="2">		<text/>		<nod x="1151" y="-344"/>	</cox>	<cox border="0" pai="1000" son="1232" width="2">		<text/>		<nod x="1151" y="-340"/>	</cox>	<cox border="0" pai="1000" son="1233" width="2">		<text/>		<nod x="1151" y="-336"/>	</cox>	<cox border="0" pai="1001" son="1013" width="2">		<text/>		<nod x="1155" y="-412"/>	</cox>	<cox border="0" pai="1001" son="1014" width="2">		<text/>		<nod x="1155" y="-408"/>	</cox>	<cox border="0" pai="1001" son="1015" width="2">		<text/>		<nod x="1155" y="-384"/>	</cox>	<cox border="0" pai="1001" son="1016" width="2">		<text/>		<nod x="1155" y="-380"/>	</cox>	<cox border="0" pai="1001" son="1017" width="2">		<text/>		<nod x="1155" y="-404"/>	</cox>	<cox border="0" pai="1001" son="1018" width="2">		<text/>		<nod x="1155" y="-400"/>	</cox>	<cox border="0" pai="1001" son="1019" width="2">		<text/>		<nod x="1155" y="-396"/>	</cox>	<cox border="0" pai="1001" son="1020" width="2">		<text/>		<nod x="1155" y="-392"/>	</cox>	<cox border="0" pai="1001" son="1021" width="2">		<text/>		<nod x="1155" y="-388"/>	</cox>	<cox border="0" pai="1002" son="1022" width="2">		<text/>		<nod x="1156" y="-372"/>	</cox>	<cox border="0" pai="1002" son="1025" width="2">		<text/>		<nod x="1156" y="-360"/>	</cox>	<cox border="0" pai="1002" son="1024" width="2">		<text/>		<nod x="1156" y="-364"/>	</cox>	<cox border="0" pai="1002" son="1023" width="2">		<text/>		<nod x="1156" y="-368"/>	</cox>	<cox border="0" pai="1003" son="1026" width="2">		<text/>		<nod x="1150" y="-328"/>	</cox>	<cox border="0" pai="1003" son="1027" width="2">		<text/>		<nod x="1150" y="-324"/>	</cox>	<cox border="0" pai="1003" son="1028" width="2">		<text/>		<nod x="1150" y="-320"/>	</cox>	<cox border="0" pai="1003" son="1029" width="2">		<text/>		<nod x="1150" y="-316"/>	</cox>	<cox border="0" pai="1003" son="1030" width="2">		<text/>		<nod x="1150" y="-312"/>	</cox>	<cox border="0" pai="1003" son="1031" width="2">		<text/>		<nod x="1150" y="-308"/>	</cox>	<cox border="0" pai="1004" son="1007" width="2">		<text/>		<nod x="1055" y="-413"/>	</cox>	<cox border="0" pai="1004" son="1008" width="2">		<text/>		<nod x="1055" y="-409"/>	</cox>	<cox border="0" pai="1004" son="1009" width="2">		<text/>		<nod x="1055" y="-405"/>	</cox>	<cox border="0" pai="1157" son="1004" width="2">		<text/>		<nod x="1051" y="-417"/>	</cox>	<cox border="0" pai="1007" son="1168" width="0">		<text/>	</cox>	<cox border="0" pai="1007" son="1169" width="0">		<text/>	</cox>	<cox border="0" pai="1007" son="1170" width="0">		<text/>	</cox>	<cox border="0" pai="1007" son="1171" width="0">		<text/>	</cox>	<cox border="1" pai="1009" son="1007" width="0">		<text/>		<nod x="1049" y="-412"/>		<nod x="1049" y="-405"/>	</cox>	<cox border="0" pai="1008" son="1173" width="0">		<text/>	</cox>	<cox border="0" pai="1008" son="1172" width="0">		<text/>	</cox>	<cox border="0" pai="1008" son="1174" width="0">		<text/>	</cox>	<cox border="1" pai="1009" son="1008" width="0">		<text/>		<nod x="1049" y="-408"/>		<nod x="1049" y="-405"/>	</cox>	<cox border="0" pai="1009" son="1175" width="0">		<text/>	</cox>	<cox border="0" pai="1009" son="1177" width="0">		<text/>	</cox>	<cox border="0" pai="1009" son="1176" width="0">		<text/>	</cox>	<cox border="0" pai="1156" son="1009" width="0">		<text/>		<nod x="1047" y="-404"/>		<nod x="1047" y="-401"/>	</cox>	<cox border="4" pai="1031" son="1009" width="0">		<text/>		<nod x="1130" y="-405"/>		<nod x="1130" y="-308"/>	</cox>	<cox border="0" pai="1010" son="1011" width="2">		<text/>		<nod x="1441" y="-448"/>	</cox>	<cox border="0" pai="1010" son="1012" width="2">		<text/>		<nod x="1441" y="-444"/>	</cox>	<cox border="4" pai="1013" son="1066" width="0">		<text/>		<nod x="1344" y="-429"/>		<nod x="1222" y="-429"/>		<nod x="1222" y="-412"/>	</cox>	<cox border="4" pai="1015" son="1013" width="0">		<text/>		<nod x="1144" y="-412"/>		<nod x="1144" y="-384"/>	</cox>	<cox border="4" pai="1021" son="1013" width="0">		<text/>		<nod x="1144" y="-412"/>		<nod x="1144" y="-388"/>	</cox>	<cox border="4" pai="1020" son="1013" width="0">		<text/>		<nod x="1144" y="-412"/>		<nod x="1144" y="-392"/>	</cox>	<cox border="4" pai="1019" son="1013" width="0">		<text/>		<nod x="1144" y="-412"/>		<nod x="1144" y="-396"/>	</cox>	<cox border="4" pai="1018" son="1013" width="0">		<text/>		<nod x="1144" y="-412"/>		<nod x="1144" y="-400"/>	</cox>	<cox border="4" pai="1017" son="1013" width="0">		<text/>		<nod x="1144" y="-412"/>		<nod x="1144" y="-404"/>	</cox>	<cox border="4" pai="1014" son="1013" width="0">		<text/>		<nod x="1144" y="-412"/>		<nod x="1144" y="-408"/>	</cox>	<cox border="4" pai="1016" son="1013" width="0">		<text/>		<nod x="1144" y="-412"/>		<nod x="1144" y="-380"/>	</cox>	<cox border="4" pai="1228" son="1013" width="0">		<text/>		<nod x="1149" y="-412"/>		<nod x="1149" y="-356"/>	</cox>	<cox border="4" pai="1014" son="1066" width="0">		<text/>		<nod x="1344" y="-429"/>		<nod x="1222" y="-429"/>		<nod x="1222" y="-408"/>	</cox>	<cox border="0" pai="1032" son="1014" width="0">		<text/>		<nod x="1136" y="-406"/>		<nod x="1136" y="-300"/>	</cox>	<cox border="0" pai="1014" son="1317" width="0">		<text/>	</cox>	<cox border="0" pai="1014" son="1318" width="0">		<text/>	</cox>	<cox border="4" pai="1015" son="1066" width="0">		<text/>		<nod x="1344" y="-429"/>		<nod x="1222" y="-429"/>		<nod x="1222" y="-384"/>	</cox>	<cox border="0" pai="1032" son="1015" width="0">		<text/>		<nod x="1136" y="-382"/>		<nod x="1136" y="-300"/>	</cox>	<cox border="0" pai="1015" son="1305" width="0">		<text/>	</cox>	<cox border="0" pai="1015" son="1306" width="0">		<text/>	</cox>	<cox border="0" pai="1015" son="1319" width="0">		<text/>	</cox>	<cox border="4" pai="1016" son="1066" width="0">		<text/>		<nod x="1344" y="-429"/>		<nod x="1222" y="-429"/>		<nod x="1222" y="-380"/>	</cox>	<cox border="0" pai="1032" son="1016" width="0">		<text/>		<nod x="1136" y="-378"/>		<nod x="1136" y="-300"/>	</cox>	<cox border="0" pai="1016" son="1307" width="0">		<text/>	</cox>	<cox border="0" pai="1016" son="1308" width="0">		<text/>	</cox>	<cox border="0" pai="1016" son="1320" width="0">		<text/>	</cox>	<cox border="4" pai="1017" son="1066" width="0">		<text/>		<nod x="1344" y="-429"/>		<nod x="1222" y="-429"/>		<nod x="1222" y="-404"/>	</cox>	<cox border="0" pai="1032" son="1017" width="0">		<text/>		<nod x="1136" y="-402"/>		<nod x="1136" y="-300"/>	</cox>	<cox border="0" pai="1017" son="1315" width="0">		<text/>	</cox>	<cox border="0" pai="1017" son="1316" width="0">		<text/>	</cox>	<cox border="4" pai="1018" son="1066" width="0">		<text/>		<nod x="1344" y="-429"/>		<nod x="1222" y="-429"/>		<nod x="1222" y="-400"/>	</cox>	<cox border="0" pai="1032" son="1018" width="0">		<text/>		<nod x="1136" y="-398"/>		<nod x="1136" y="-300"/>	</cox>	<cox border="0" pai="1018" son="1313" width="0">		<text/>	</cox>	<cox border="0" pai="1018" son="1314" width="0">		<text/>	</cox>	<cox border="4" pai="1019" son="1066" width="0">		<text/>		<nod x="1344" y="-429"/>		<nod x="1222" y="-429"/>		<nod x="1222" y="-396"/>	</cox>	<cox border="0" pai="1032" son="1019" width="0">		<text/>		<nod x="1136" y="-394"/>		<nod x="1136" y="-300"/>	</cox>	<cox border="0" pai="1019" son="1311" width="0">		<text/>	</cox>	<cox border="0" pai="1019" son="1312" width="0">		<text/>	</cox>	<cox border="4" pai="1020" son="1066" width="0">		<text/>		<nod x="1344" y="-429"/>		<nod x="1222" y="-429"/>		<nod x="1222" y="-392"/>	</cox>	<cox border="0" pai="1032" son="1020" width="0">		<text/>		<nod x="1136" y="-390"/>		<nod x="1136" y="-300"/>	</cox>	<cox border="0" pai="1020" son="1309" width="0">		<text/>	</cox>	<cox border="0" pai="1020" son="1310" width="0">		<text/>	</cox>	<cox border="4" pai="1021" son="1066" width="0">		<text/>		<nod x="1344" y="-429"/>		<nod x="1222" y="-429"/>		<nod x="1222" y="-388"/>	</cox>	<cox border="0" pai="1032" son="1021" width="0">		<text/>		<nod x="1136" y="-386"/>		<nod x="1136" y="-300"/>	</cox>	<cox border="0" pai="1021" son="1303" width="0">		<text/>	</cox>	<cox border="0" pai="1021" son="1304" width="0">		<text/>	</cox>	<cox border="4" pai="1022" son="1066" width="0">		<text/>		<nod x="1344" y="-429"/>		<nod x="1222" y="-429"/>		<nod x="1222" y="-372"/>	</cox>	<cox border="4" pai="1023" son="1022" width="0">		<text/>		<nod x="1144" y="-372"/>		<nod x="1144" y="-368"/>	</cox>	<cox border="4" pai="1024" son="1022" width="0">		<text/>		<nod x="1144" y="-372"/>		<nod x="1144" y="-364"/>	</cox>	<cox border="4" pai="1025" son="1022" width="0">		<text/>		<nod x="1144" y="-372"/>		<nod x="1144" y="-360"/>	</cox>	<cox border="0" pai="1022" son="1277" width="0">		<text/>	</cox>	<cox border="0" pai="1022" son="1278" width="0">		<text/>	</cox>	<cox border="0" pai="1022" son="1279" width="0">		<text/>	</cox>	<cox border="0" pai="1022" son="1280" width="0">		<text/>	</cox>	<cox border="0" pai="1022" son="1281" width="0">		<text/>	</cox>	<cox border="4" pai="1022" son="1228" width="0">		<text/>		<nod x="1149" y="-356"/>		<nod x="1149" y="-372"/>	</cox>	<cox border="4" pai="1023" son="1066" width="0">		<text/>		<nod x="1344" y="-429"/>		<nod x="1222" y="-429"/>		<nod x="1222" y="-368"/>	</cox>	<cox border="0" pai="1032" son="1023" width="0">		<text/>		<nod x="1136" y="-366"/>		<nod x="1136" y="-300"/>	</cox>	<cox border="0" pai="1023" son="1282" width="0">		<text/>	</cox>	<cox border="0" pai="1023" son="1283" width="0">		<text/>	</cox>	<cox border="0" pai="1023" son="1284" width="0">		<text/>	</cox>	<cox border="0" pai="1023" son="1285" width="0">		<text/>	</cox>	<cox border="0" pai="1023" son="1286" width="0">		<text/>	</cox>	<cox border="0" pai="1023" son="1287" width="0">		<text/>	</cox>	<cox border="0" pai="1023" son="1288" width="0">		<text/>	</cox>	<cox border="4" pai="1024" son="1066" width="0">		<text/>		<nod x="1344" y="-429"/>		<nod x="1222" y="-429"/>		<nod x="1222" y="-364"/>	</cox>	<cox border="0" pai="1032" son="1024" width="0">		<text/>		<nod x="1136" y="-362"/>		<nod x="1136" y="-300"/>	</cox>	<cox border="0" pai="1024" son="1289" width="0">		<text/>	</cox>	<cox border="0" pai="1024" son="1290" width="0">		<text/>	</cox>	<cox border="0" pai="1024" son="1291" width="0">		<text/>	</cox>	<cox border="0" pai="1024" son="1292" width="0">		<text/>	</cox>	<cox border="0" pai="1024" son="1293" width="0">		<text/>	</cox>	<cox border="0" pai="1024" son="1294" width="0">		<text/>	</cox>	<cox border="0" pai="1024" son="1295" width="0">		<text/>	</cox>	<cox border="4" pai="1025" son="1066" width="0">		<text/>		<nod x="1344" y="-429"/>		<nod x="1222" y="-429"/>		<nod x="1222" y="-360"/>	</cox>	<cox border="0" pai="1032" son="1025" width="0">		<text/>		<nod x="1136" y="-358"/>		<nod x="1136" y="-300"/>	</cox>	<cox border="0" pai="1025" son="1296" width="0">		<text/>	</cox>	<cox border="0" pai="1025" son="1297" width="0">		<text/>	</cox>	<cox border="0" pai="1025" son="1298" width="0">		<text/>	</cox>	<cox border="0" pai="1025" son="1299" width="0">		<text/>	</cox>	<cox border="0" pai="1025" son="1300" width="0">		<text/>	</cox>	<cox border="0" pai="1025" son="1301" width="0">		<text/>	</cox>	<cox border="0" pai="1025" son="1302" width="0">		<text/>	</cox>	<cox border="0" pai="1030" son="1026" width="0">		<text/>		<nod x="1144" y="-327"/>		<nod x="1144" y="-312"/>	</cox>	<cox border="0" pai="1026" son="1226" width="0">		<text/>	</cox>	<cox border="0" pai="1026" son="1227" width="0">		<text/>	</cox>	<cox border="0" pai="1026" son="1225" width="0">		<text/>	</cox>	<cox border="0" pai="1030" son="1027" width="0">		<text/>		<nod x="1144" y="-323"/>		<nod x="1144" y="-312"/>	</cox>	<cox border="0" pai="1027" son="1221" width="0">		<text/>	</cox>	<cox border="0" pai="1027" son="1222" width="0">		<text/>	</cox>	<cox border="0" pai="1027" son="1223" width="0">		<text/>	</cox>	<cox border="0" pai="1027" son="1224" width="0">		<text/>	</cox>	<cox border="0" pai="1030" son="1028" width="0">		<text/>		<nod x="1144" y="-319"/>		<nod x="1144" y="-312"/>	</cox>	<cox border="0" pai="1028" son="1218" width="0">		<text/>	</cox>	<cox border="0" pai="1028" son="1217" width="0">		<text/>	</cox>	<cox border="0" pai="1028" son="1219" width="0">		<text/>	</cox>	<cox border="0" pai="1028" son="1220" width="0">		<text/>	</cox>	<cox border="0" pai="1030" son="1029" width="0">		<text/>		<nod x="1144" y="-315"/>		<nod x="1144" y="-312"/>	</cox>	<cox border="0" pai="1029" son="1214" width="0">		<text/>	</cox>	<cox border="0" pai="1029" son="1215" width="0">		<text/>	</cox>	<cox border="0" pai="1029" son="1216" width="0">		<text/>	</cox>	<cox border="0" pai="1031" son="1030" width="0">		<text/>		<nod x="1142" y="-311"/>		<nod x="1142" y="-308"/>	</cox>	<cox border="0" pai="1030" son="1210" width="0">		<text/>	</cox>	<cox border="0" pai="1030" son="1211" width="0">		<text/>	</cox>	<cox border="0" pai="1030" son="1212" width="0">		<text/>	</cox>	<cox border="0" pai="1030" son="1213" width="0">		<text/>	</cox>	<cox border="0" pai="1033" son="1031" width="0">		<text/>		<nod x="1140" y="-307"/>		<nod x="1140" y="-304"/>	</cox>	<cox border="0" pai="1031" son="1208" width="0">		<text/>	</cox>	<cox border="0" pai="1031" son="1209" width="0">		<text/>	</cox>	<cox border="0" pai="1034" son="1032" width="0">		<text/>		<nod x="1138" y="-299"/>		<nod x="1138" y="-292"/>	</cox>	<cox border="0" pai="1032" son="1198" width="0">		<text/>	</cox>	<cox border="0" pai="1032" son="1199" width="0">		<text/>	</cox>	<cox border="0" pai="1032" son="1200" width="0">		<text/>	</cox>	<cox border="0" pai="1032" son="1201" width="0">		<text/>	</cox>	<cox border="0" pai="1032" son="1202" width="0">		<text/>	</cox>	<cox border="0" pai="1032" son="1203" width="0">		<text/>	</cox>	<cox border="0" pai="1032" son="1204" width="0">		<text/>	</cox>	<cox border="0" pai="1032" son="1230" width="0">		<text/>		<nod x="1136" y="-346"/>		<nod x="1136" y="-300"/>	</cox>	<cox border="0" pai="1032" son="1229" width="0">		<text/>		<nod x="1136" y="-350"/>		<nod x="1136" y="-300"/>	</cox>	<cox border="0" pai="1032" son="1231" width="0">		<text/>		<nod x="1136" y="-342"/>		<nod x="1136" y="-300"/>	</cox>	<cox border="0" pai="1032" son="1232" width="0">		<text/>		<nod x="1136" y="-338"/>		<nod x="1136" y="-300"/>	</cox>	<cox border="0" pai="1032" son="1233" width="0">		<text/>		<nod x="1136" y="-334"/>		<nod x="1136" y="-300"/>	</cox>	<cox border="0" pai="1032" son="1228" width="0">		<text/>		<nod x="1136" y="-354"/>		<nod x="1136" y="-300"/>	</cox>	<cox border="0" pai="1034" son="1033" width="0">		<text/>		<nod x="1138" y="-303"/>		<nod x="1138" y="-292"/>	</cox>	<cox border="0" pai="1033" son="1193" width="0">		<text/>	</cox>	<cox border="0" pai="1033" son="1194" width="0">		<text/>	</cox>	<cox border="0" pai="1033" son="1195" width="0">		<text/>	</cox>	<cox border="0" pai="1033" son="1196" width="0">		<text/>	</cox>	<cox border="0" pai="1033" son="1197" width="0">		<text/>	</cox>	<cox border="4" pai="1033" son="1156" width="0">		<text/>		<nod x="1128" y="-401"/>		<nod x="1128" y="-304"/>	</cox>	<cox border="0" pai="1034" son="1189" width="0">		<text/>	</cox>	<cox border="0" pai="1034" son="1190" width="0">		<text/>	</cox>	<cox border="0" pai="1034" son="1191" width="0">		<text/>	</cox>	<cox border="0" pai="1034" son="1192" width="0">		<text/>	</cox>	<cox border="0" pai="1034" son="1035" width="0">		<text/>		<nod x="1138" y="-295"/>		<nod x="1138" y="-292"/>	</cox>	<cox border="4" pai="1034" son="1155" width="0">		<text/>		<nod x="1126" y="-397"/>		<nod x="1126" y="-292"/>	</cox>	<cox border="4" pai="1140" son="1034" width="0">		<text/>		<nod x="1154" y="-252"/>		<nod x="1347" y="-252"/>	</cox>	<cox border="0" pai="1035" son="1205" width="0">		<text/>	</cox>	<cox border="0" pai="1035" son="1206" width="0">		<text/>	</cox>	<cox border="0" pai="1035" son="1207" width="0">		<text/>	</cox>	<cox border="0" pai="1036" son="1038" width="2">		<text/>		<nod x="1280" y="-445"/>	</cox>	<cox border="0" pai="1036" son="1096" width="2">		<text/>		<nod x="1280" y="-420"/>	</cox>	<cox border="0" pai="1036" son="1098" width="2">		<text/>		<nod x="1280" y="-411"/>	</cox>	<cox border="0" pai="1038" son="1037" width="2">		<text/>		<nod x="1284" y="-441"/>	</cox>	<cox border="0" pai="1038" son="1039" width="2">		<text/>		<nod x="1284" y="-437"/>	</cox>	<cox border="0" pai="1038" son="1040" width="2">		<text/>		<nod x="1284" y="-433"/>	</cox>	<cox border="0" pai="1038" son="1041" width="2">		<text/>		<nod x="1284" y="-429"/>	</cox>	<cox border="0" pai="1038" son="1042" width="2">		<text/>		<nod x="1284" y="-425"/>	</cox>	<cox border="0" pai="1044" son="1133" width="2">		<text/>		<nod x="1041" y="-337"/>	</cox>	<cox border="0" pai="1154" son="1044" width="2">		<text/>		<nod x="1037" y="-392"/>	</cox>	<cox border="0" pai="1049" son="1045" width="0">		<text/>		<nod x="1284" y="-281"/>		<nod x="1284" y="-297"/>	</cox>	<cox border="0" pai="1049" son="1046" width="0">		<text/>		<nod x="1284" y="-285"/>		<nod x="1284" y="-297"/>	</cox>	<cox border="0" pai="1049" son="1047" width="0">		<text/>		<nod x="1284" y="-289"/>		<nod x="1284" y="-297"/>	</cox>	<cox border="0" pai="1049" son="1048" width="0">		<text/>		<nod x="1284" y="-293"/>		<nod x="1284" y="-297"/>	</cox>	<cox border="1" pai="1049" son="1060" width="0">		<text/>		<nod x="1306" y="-273"/>		<nod x="1306" y="-297"/>	</cox>	<cox border="1" pai="1055" son="1049" width="0">		<text/>		<nod x="1308" y="-296"/>		<nod x="1308" y="-345"/>	</cox>	<cox border="1" pai="1049" son="1050" width="0">		<text/>		<nod x="1306" y="-317"/>		<nod x="1306" y="-297"/>	</cox>	<cox border="0" pai="1050" son="1051" width="0">		<text/>		<nod x="1289" y="-313"/>		<nod x="1289" y="-317"/>	</cox>	<cox border="0" pai="1050" son="1052" width="0">		<text/>		<nod x="1289" y="-309"/>		<nod x="1289" y="-317"/>	</cox>	<cox border="0" pai="1050" son="1054" width="0">		<text/>		<nod x="1289" y="-301"/>		<nod x="1289" y="-317"/>	</cox>	<cox border="0" pai="1050" son="1053" width="0">		<text/>		<nod x="1289" y="-305"/>		<nod x="1289" y="-317"/>	</cox>	<cox border="0" pai="1055" son="1056" width="0">		<text/>		<nod x="1283" y="-341"/>		<nod x="1283" y="-345"/>	</cox>	<cox border="0" pai="1055" son="1058" width="0">		<text/>		<nod x="1283" y="-333"/>		<nod x="1283" y="-345"/>	</cox>	<cox border="0" pai="1055" son="1057" width="0">		<text/>		<nod x="1283" y="-337"/>		<nod x="1283" y="-345"/>	</cox>	<cox border="0" pai="1055" son="1059" width="0">		<text/>		<nod x="1283" y="-329"/>		<nod x="1283" y="-345"/>	</cox>	<cox border="0" pai="1060" son="1061" width="0">		<text/>		<nod x="1283" y="-269"/>		<nod x="1283" y="-273"/>	</cox>	<cox border="0" pai="1060" son="1062" width="0">		<text/>		<nod x="1283" y="-265"/>		<nod x="1283" y="-273"/>	</cox>	<cox border="0" pai="1060" son="1063" width="0">		<text/>		<nod x="1283" y="-261"/>		<nod x="1283" y="-273"/>	</cox>	<cox border="0" pai="1060" son="1064" width="0">		<text/>		<nod x="1283" y="-257"/>		<nod x="1283" y="-273"/>	</cox>	<cox border="0" pai="1081" son="1082" width="2">		<text/>		<nod x="1041" y="-308"/>	</cox>	<cox border="0" pai="1081" son="1108" width="2">		<text/>		<nod x="1041" y="-284"/>	</cox>	<cox border="0" pai="1081" son="1123" width="2">		<text/>		<nod x="1041" y="-244"/>	</cox>	<cox border="0" pai="1154" son="1081" width="2">		<text/>		<nod x="1037" y="-312"/>	</cox>	<cox border="0" pai="1082" son="1087" width="2">		<text/>		<nod x="1045" y="-304"/>	</cox>	<cox border="0" pai="1082" son="1086" width="2">		<text/>		<nod x="1045" y="-300"/>	</cox>	<cox border="0" pai="1082" son="1085" width="2">		<text/>		<nod x="1045" y="-296"/>	</cox>	<cox border="0" pai="1082" son="1084" width="2">		<text/>		<nod x="1045" y="-292"/>	</cox>	<cox border="0" pai="1082" son="1083" width="2">		<text/>		<nod x="1045" y="-288"/>	</cox>	<cox border="0" pai="1087" son="1083" width="0">		<text/>		<nod x="1043" y="-288"/>		<nod x="1043" y="-304"/>	</cox>	<cox border="0" pai="1087" son="1084" width="0">		<text/>		<nod x="1043" y="-292"/>		<nod x="1043" y="-304"/>	</cox>	<cox border="0" pai="1087" son="1085" width="0">		<text/>		<nod x="1043" y="-296"/>		<nod x="1043" y="-304"/>	</cox>	<cox border="0" pai="1087" son="1086" width="0">		<text/>		<nod x="1043" y="-300"/>		<nod x="1043" y="-304"/>	</cox>	<cox border="1" pai="1145" son="1087" width="0">		<text/>		<nod x="1032" y="-304"/>		<nod x="1032" y="-358"/>	</cox>	<cox border="0" pai="1092" son="1088" width="0">		<text/>		<nod x="1621" y="-370"/>		<nod x="1621" y="-386"/>	</cox>	<cox border="0" pai="1092" son="1089" width="0">		<text/>		<nod x="1621" y="-374"/>		<nod x="1621" y="-386"/>	</cox>	<cox border="0" pai="1092" son="1090" width="0">		<text/>		<nod x="1621" y="-378"/>		<nod x="1621" y="-386"/>	</cox>	<cox border="0" pai="1092" son="1091" width="0">		<text/>		<nod x="1621" y="-382"/>		<nod x="1621" y="-386"/>	</cox>	<cox border="0" pai="1092" son="1119" width="0">		<text/>		<nod x="1429" y="-436"/>	</cox>	<cox border="0" pai="1092" son="1146" width="0">		<text/>		<nod x="1066" y="-383"/>	</cox>	<cox border="0" pai="1096" son="1097" width="2">		<text/>		<nod x="1286" y="-416"/>	</cox>	<cox border="0" pai="1098" son="1099" width="2">		<text/>		<nod x="1286" y="-407"/>	</cox>	<cox border="0" pai="1100" son="1101" width="2">		<text/>		<nod x="1331" y="-377"/>	</cox>	<cox border="0" pai="1102" son="1103" width="2">		<text/>		<nod x="1627" y="-430"/>	</cox>	<cox border="0" pai="1102" son="1104" width="2">		<text/>		<nod x="1627" y="-438"/>	</cox>	<cox border="0" pai="1104" son="1105" width="2">		<text/>		<nod x="1631" y="-434"/>	</cox>	<cox border="0" pai="1106" son="1107" width="2">		<text/>		<nod x="1361" y="-345"/>	</cox>	<cox border="0" pai="1106" son="1120" width="2">		<text/>		<nod x="1361" y="-353"/>	</cox>	<cox border="0" pai="1108" son="1113" width="2">		<text/>		<nod x="1045" y="-264"/>	</cox>	<cox border="0" pai="1108" son="1109" width="2">		<text/>		<nod x="1045" y="-248"/>	</cox>	<cox border="0" pai="1108" son="1110" width="2">		<text/>		<nod x="1045" y="-252"/>	</cox>	<cox border="0" pai="1108" son="1111" width="2">		<text/>		<nod x="1045" y="-256"/>	</cox>	<cox border="0" pai="1108" son="1112" width="2">		<text/>		<nod x="1045" y="-260"/>	</cox>	<cox border="0" pai="1108" son="1114" width="2">		<text/>		<nod x="1045" y="-280"/>	</cox>	<cox border="0" pai="1108" son="1115" width="2">		<text/>		<nod x="1045" y="-276"/>	</cox>	<cox border="0" pai="1108" son="1116" width="2">		<text/>		<nod x="1045" y="-272"/>	</cox>	<cox border="0" pai="1113" son="1109" width="0">		<text/>		<nod x="1043" y="-248"/>		<nod x="1043" y="-264"/>	</cox>	<cox border="0" pai="1113" son="1110" width="0">		<text/>		<nod x="1043" y="-252"/>		<nod x="1043" y="-264"/>	</cox>	<cox border="0" pai="1113" son="1111" width="0">		<text/>		<nod x="1043" y="-256"/>		<nod x="1043" y="-264"/>	</cox>	<cox border="0" pai="1113" son="1112" width="0">		<text/>		<nod x="1043" y="-260"/>		<nod x="1043" y="-264"/>	</cox>	<cox border="4" pai="1139" son="1113" width="0">		<text/>		<nod x="1068" y="-264"/>		<nod x="1068" y="-247"/>		<nod x="1363" y="-247"/>	</cox>	<cox border="0" pai="1116" son="1117" width="2">		<text/>		<nod x="1049" y="-268"/>	</cox>	<cox border="0" pai="1118" son="1119" width="2">		<text/>		<nod x="1421" y="-445"/>	</cox>	<cox border="0" pai="1120" son="1121" width="2">		<text/>		<nod x="1366" y="-349"/>	</cox>	<cox border="0" pai="1123" son="1122" width="2">		<text/>		<nod x="1045" y="-236"/>	</cox>	<cox border="1" pai="1124" son="1122" width="0">		<text/>		<nod x="1043" y="-236"/>		<nod x="1043" y="-240"/>	</cox>	<cox border="0" pai="1123" son="1124" width="2">		<text/>		<nod x="1045" y="-240"/>	</cox>	<cox border="0" pai="1123" son="1125" width="2">		<text/>		<nod x="1045" y="-232"/>	</cox>	<cox border="4" pai="1130" son="1124" width="0">		<text/>		<nod x="1061" y="-240"/>	</cox>	<cox border="1" pai="1124" son="1125" width="0">		<text/>		<nod x="1043" y="-232"/>		<nod x="1043" y="-240"/>	</cox>	<cox border="0" pai="1130" son="1126" width="0">		<text/>		<nod x="1625" y="-406"/>		<nod x="1625" y="-422"/>	</cox>	<cox border="0" pai="1130" son="1127" width="0">		<text/>		<nod x="1625" y="-410"/>		<nod x="1625" y="-422"/>	</cox>	<cox border="0" pai="1130" son="1128" width="0">		<text/>		<nod x="1625" y="-414"/>		<nod x="1625" y="-422"/>	</cox>	<cox border="0" pai="1130" son="1129" width="0">		<text/>		<nod x="1625" y="-418"/>		<nod x="1625" y="-422"/>	</cox>	<cox border="4" pai="1131" son="1145" width="0">		<text/>		<nod x="1066" y="-358"/>	</cox>	<cox border="4" pai="1132" son="1138" width="0">		<text/>		<nod x="1068" y="-333"/>	</cox>	<cox border="0" pai="1133" son="1138" width="2">		<text/>		<nod x="1046" y="-333"/>	</cox>	<cox border="0" pai="1133" son="1137" width="2">		<text/>		<nod x="1046" y="-329"/>	</cox>	<cox border="0" pai="1133" son="1136" width="2">		<text/>		<nod x="1046" y="-325"/>	</cox>	<cox border="0" pai="1133" son="1134" width="2">		<text/>		<nod x="1046" y="-317"/>	</cox>	<cox border="0" pai="1133" son="1135" width="2">		<text/>		<nod x="1046" y="-321"/>	</cox>	<cox border="0" pai="1138" son="1134" width="0">		<text/>		<nod x="1044" y="-317"/>		<nod x="1044" y="-333"/>	</cox>	<cox border="0" pai="1138" son="1135" width="0">		<text/>		<nod x="1044" y="-321"/>		<nod x="1044" y="-333"/>	</cox>	<cox border="0" pai="1138" son="1136" width="0">		<text/>		<nod x="1044" y="-325"/>		<nod x="1044" y="-333"/>	</cox>	<cox border="0" pai="1138" son="1137" width="0">		<text/>		<nod x="1044" y="-329"/>		<nod x="1044" y="-333"/>	</cox>	<cox border="0" pai="1145" son="1141" width="0">		<text/>		<nod x="1045" y="-342"/>		<nod x="1045" y="-358"/>	</cox>	<cox border="0" pai="1145" son="1142" width="0">		<text/>		<nod x="1045" y="-346"/>		<nod x="1045" y="-358"/>	</cox>	<cox border="0" pai="1145" son="1143" width="0">		<text/>		<nod x="1045" y="-350"/>		<nod x="1045" y="-358"/>	</cox>	<cox border="0" pai="1145" son="1144" width="0">		<text/>		<nod x="1045" y="-354"/>		<nod x="1045" y="-358"/>	</cox>	<cox border="0" pai="1146" son="1147" width="0">		<text/>		<nod x="1045" y="-379"/>		<nod x="1045" y="-383"/>	</cox>	<cox border="0" pai="1146" son="1148" width="0">		<text/>		<nod x="1045" y="-375"/>		<nod x="1045" y="-383"/>	</cox>	<cox border="0" pai="1146" son="1149" width="0">		<text/>		<nod x="1045" y="-371"/>		<nod x="1045" y="-383"/>	</cox>	<cox border="0" pai="1146" son="1150" width="0">		<text/>		<nod x="1045" y="-367"/>		<nod x="1045" y="-383"/>	</cox>	<cox border="0" pai="1157" son="1155" width="2">		<text/>		<nod x="1051" y="-397"/>	</cox>	<cox border="0" pai="1155" son="1184" width="0">		<text/>	</cox>	<cox border="0" pai="1155" son="1185" width="0">		<text/>	</cox>	<cox border="0" pai="1155" son="1186" width="0">		<text/>	</cox>	<cox border="0" pai="1155" son="1187" width="0">		<text/>	</cox>	<cox border="0" pai="1155" son="1188" width="0">		<text/>	</cox>	<cox border="0" pai="1155" son="1156" width="0">		<text/>		<nod x="1045" y="-400"/>		<nod x="1045" y="-397"/>	</cox>	<cox border="0" pai="1157" son="1156" width="2">		<text/>		<nod x="1051" y="-401"/>	</cox>	<cox border="0" pai="1156" son="1178" width="0">		<text/>	</cox>	<cox border="0" pai="1156" son="1179" width="0">		<text/>	</cox>	<cox border="0" pai="1156" son="1180" width="0">		<text/>	</cox>	<cox border="0" pai="1156" son="1181" width="0">		<text/>	</cox>	<cox border="0" pai="1156" son="1182" width="0">		<text/>	</cox>	<cox border="0" pai="1156" son="1183" width="0">		<text/>	</cox>	<cox border="4" pai="1229" son="1228" width="0">		<text/>		<nod x="1144" y="-355"/>		<nod x="1144" y="-352"/>	</cox>	<cox border="4" pai="1230" son="1228" width="0">		<text/>		<nod x="1144" y="-355"/>		<nod x="1144" y="-348"/>	</cox>	<cox border="4" pai="1231" son="1228" width="0">		<text/>		<nod x="1144" y="-355"/>		<nod x="1144" y="-344"/>	</cox>	<cox border="4" pai="1232" son="1228" width="0">		<text/>		<nod x="1144" y="-355"/>		<nod x="1144" y="-340"/>	</cox>	<cox border="4" pai="1233" son="1228" width="0">		<text/>		<nod x="1144" y="-355"/>		<nod x="1144" y="-336"/>	</cox>	<cox border="0" pai="1228" son="1241" width="0">		<text/>	</cox>	<cox border="0" pai="1228" son="1242" width="0">		<text/>	</cox>	<cox border="0" pai="1228" son="1243" width="0">		<text/>	</cox>	<cox border="0" pai="1228" son="1244" width="0">		<text/>	</cox>	<cox border="0" pai="1228" son="1245" width="0">		<text/>	</cox>	<cox border="0" pai="1228" son="1246" width="0">		<text/>	</cox>	<cox border="0" pai="1228" son="1247" width="0">		<text/>	</cox>	<cox border="0" pai="1228" son="1248" width="0">		<text/>	</cox>	<cox border="0" pai="1229" son="1249" width="0">		<text/>	</cox>	<cox border="0" pai="1229" son="1250" width="0">		<text/>	</cox>	<cox border="0" pai="1229" son="1251" width="0">		<text/>	</cox>	<cox border="0" pai="1229" son="1252" width="0">		<text/>	</cox>	<cox border="0" pai="1230" son="1253" width="0">		<text/>	</cox>	<cox border="0" pai="1230" son="1254" width="0">		<text/>	</cox>	<cox border="0" pai="1230" son="1255" width="0">		<text/>	</cox>	<cox border="0" pai="1230" son="1256" width="0">		<text/>	</cox>	<cox border="0" pai="1230" son="1257" width="0">		<text/>	</cox>	<cox border="0" pai="1230" son="1258" width="0">		<text/>	</cox>	<cox border="0" pai="1230" son="1259" width="0">		<text/>	</cox>	<cox border="0" pai="1230" son="1260" width="0">		<text/>	</cox>	<cox border="0" pai="1231" son="1261" width="0">		<text/>	</cox>	<cox border="0" pai="1231" son="1262" width="0">		<text/>	</cox>	<cox border="0" pai="1231" son="1263" width="0">		<text/>	</cox>	<cox border="0" pai="1231" son="1264" width="0">		<text/>	</cox>	<cox border="0" pai="1231" son="1265" width="0">		<text/>	</cox>	<cox border="0" pai="1231" son="1266" width="0">		<text/>	</cox>	<cox border="0" pai="1231" son="1267" width="0">		<text/>	</cox>	<cox border="0" pai="1232" son="1268" width="0">		<text/>	</cox>	<cox border="0" pai="1232" son="1269" width="0">		<text/>	</cox>	<cox border="0" pai="1232" son="1270" width="0">		<text/>	</cox>	<cox border="0" pai="1232" son="1271" width="0">		<text/>	</cox>	<cox border="0" pai="1232" son="1272" width="0">		<text/>	</cox>	<cox border="0" pai="1232" son="1273" width="0">		<text/>	</cox>	<cox border="0" pai="1232" son="1274" width="0">		<text/>	</cox>	<cox border="0" pai="1232" son="1275" width="0">		<text/>	</cox>	<cox border="0" pai="1232" son="1276" width="0">		<text/>	</cox>	<cox border="0" pai="1233" son="1234" width="0">		<text/>	</cox>	<cox border="0" pai="1233" son="1235" width="0">		<text/>	</cox>	<cox border="0" pai="1233" son="1236" width="0">		<text/>	</cox>	<cox border="0" pai="1233" son="1237" width="0">		<text/>	</cox>	<cox border="0" pai="1233" son="1238" width="0">		<text/>	</cox>	<cox border="0" pai="1233" son="1239" width="0">		<text/>	</cox>	<cox border="0" pai="1233" son="1240" width="0">		<text/>	</cox>
</mind>
